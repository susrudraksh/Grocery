{"version":3,"sources":["views/app/settings/normal-settings.js","components/common/CustomBootstrap.js","containers/navs/Breadcrumb.js"],"names":["FormSchema","Yup","shape","contact_email","required","email","max","contact_address","admin_commission","matches","normal_order_amount","typeError","normal_start_delivery_time","normal_end_delivery_time","premium_order_amount","premium_start_delivery_time","premium_end_delivery_time","total_sale","reward_points","pan_number","gst_number","expiration_time","Settings","props","dataRender","a","path","ApiRoutes","GET_SETTINGS","Http","res","status","setState","setting_id","data","_id","contact_us_email","office_address","isLoading","NotificationManager","error","message","handleSubmit","inputValues","formData","FormData","append","state","UPDATE_SETTINGS","success","bind","this","xxs","heading","match","className","sm","enableReinitialize","initialValues","validationSchema","onSubmit","setFieldValue","values","setFieldTouched","handleChange","errors","touched","isSubmitting","name","type","value","clockIcon","disableClock","closeClock","hourPlaceholder","minutePlaceholder","onChange","event","component","color","id","Component","injectIntl","Colxx","widths","Separator","getMenuTitle","sub","getUrl","index","split","BreadcrumbItems","substr","paths","length","indexOf","filter","x","map","key","active","to","BreadcrumbContainer"],"mappings":"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","file":"static/js/92.5ff24679.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport TimePicker from \"react-time-picker\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { Row, Card, CardBody, FormGroup, Label, Button } from \"reactstrap\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Colxx, Separator } from \"../../../components/common/CustomBootstrap\";\r\nimport { NotificationManager } from \"../../../components/common/react-notifications\";\r\nimport Breadcrumb from \"../../../containers/navs/Breadcrumb\";\r\n\r\nimport IntlMessages from \"../../../helpers/IntlMessages\";\r\nimport Http from \"../../../helpers/Http\";\r\nimport ApiRoutes from \"../../../helpers/ApiRoutes\";\r\n\r\nvar priceRegExp = /^\\d+(?:[.]\\d+)*$/;\r\n\r\nconst FormSchema = Yup.object().shape({\r\n  contact_email: Yup.string()\r\n    .required(\"Please enter email contact_address\")\r\n    .email(\"Invalid email format\")\r\n    .max(50, \"Too Long! Atmost 50 letters.\"),\r\n  contact_address: Yup.string()\r\n    .required(\"Please enter an contact_address\")\r\n    .max(100, \"Too Long! Atmost 100 letters.\"),\r\n  admin_commission: Yup.string()\r\n    .required(\"Please enter an amount\")\r\n    .matches(priceRegExp, \"Invalid amount value\")\r\n    .max(15, \"Too Long! Atmost 15 letters.\"),\r\n  normal_order_amount: Yup.number()\r\n    .typeError('Please enter valid amount')\r\n    .required(\"Please enter order amount\"),\r\n    normal_start_delivery_time: Yup.string()\r\n    .required(\"Please enter start time\"),\r\n  normal_end_delivery_time: Yup.string()\r\n    .required(\"Please enter end time\"),\r\n  premium_order_amount: Yup.number()\r\n    .typeError('Please enter valid amount')\r\n    .required(\"Please enter order amount\"),\r\n  premium_start_delivery_time: Yup.string()\r\n    .required(\"Please enter start time\"),\r\n  premium_end_delivery_time: Yup.string()\r\n    .required(\"Please enter end time\"),\r\n  total_sale: Yup.number()\r\n    .typeError('Please enter valid amount'),\r\n  reward_points: Yup.number()\r\n    .typeError('Please enter reward point]'),\r\n  pan_number: Yup.string()\r\n    .required(\"Please enter pan no.\")\r\n    .typeError('Please enter valid pan no'),\r\n  gst_number: Yup.string()\r\n    .required(\"Please enter GST no.\")\r\n    .typeError('Please enter GST number'),\r\n  expiration_time: Yup.number()\r\n});\r\n\r\nclass Settings extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      setting_id: \"\",\r\n      contact_email: \"\",\r\n      contact_address: \"\",\r\n      admin_commission: \"\",\r\n      premium_order_amount: \"\",\r\n      premium_start_delivery_time: \"\",\r\n      premium_end_delivery_time: \"\",\r\n      normal_order_amount: \"\",\r\n      normal_start_delivery_time: \"\",\r\n      normal_end_delivery_time: \"\",\r\n      total_sale: \"\",\r\n      reward_points: \"\",\r\n      expiration_time: \"\",\r\n      pan_number: \"\",\r\n      gst_number: \"\",\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.dataRender();\r\n  }\r\n\r\n  dataRender = async () => {\r\n    let path = ApiRoutes.GET_SETTINGS;\r\n    const res = await Http(\"GET\", path);\r\n\r\n    if (res.status == 200) {\r\n      this.setState({\r\n        setting_id: res.data._id,\r\n        contact_email: res.data.contact_us_email,\r\n        contact_address: res.data.office_address,\r\n        admin_commission: res.data.admin_commission,\r\n        normal_order_amount: res.data.normal_order_amount,\r\n        normal_start_delivery_time: res.data.normal_start_delivery_time,\r\n        normal_end_delivery_time: res.data.normal_end_delivery_time,\r\n        premium_order_amount: res.data.premium_order_amount,\r\n        premium_start_delivery_time: res.data.premium_start_delivery_time,\r\n        premium_end_delivery_time: res.data.premium_end_delivery_time,\r\n        total_sale: res.data.total_sale,\r\n        reward_points: res.data.reward_points,\r\n        expiration_time: res.data.expiration_time,\r\n        pan_number: res.data.pan_number,\r\n        gst_number: res.data.gst_number,\r\n        isLoading: true,\r\n      });\r\n    } else {\r\n      NotificationManager.error(res.message, \"Error!\", 3000);\r\n    }\r\n  };\r\n\r\n  handleSubmit = async (inputValues) => {\r\n    let formData = new FormData();\r\n    formData.append(\"setting_id\", this.state.setting_id);\r\n    formData.append(\"contact_us_email\", inputValues.contact_email);\r\n    formData.append(\"office_address\", inputValues.contact_address);\r\n    formData.append(\"admin_commission\", inputValues.admin_commission);\r\n    formData.append(\"normal_order_amount\", inputValues.normal_order_amount);\r\n    formData.append(\"normal_start_delivery_time\", inputValues.normal_start_delivery_time);\r\n    formData.append(\"normal_end_delivery_time\", inputValues.normal_end_delivery_time);\r\n    formData.append(\"premium_order_amount\", inputValues.premium_order_amount);\r\n    formData.append(\"premium_start_delivery_time\", inputValues.premium_start_delivery_time);\r\n    formData.append(\"premium_end_delivery_time\", inputValues.premium_end_delivery_time);\r\n    formData.append(\"total_sale\", inputValues.total_sale);\r\n    formData.append(\"reward_points\", inputValues.reward_points);\r\n    formData.append(\"expiration_time\", inputValues.expiration_time);\r\n    formData.append(\"pan_number\", inputValues.pan_number);\r\n    formData.append(\"gst_number\", inputValues.gst_number);\r\n\r\n    let path = ApiRoutes.UPDATE_SETTINGS;\r\n    const res = await Http(\"POST\", path, formData);\r\n\r\n    if (res.status == 200) {\r\n      NotificationManager.success(res.message, \"Success!\", 3000);\r\n    } else {\r\n      NotificationManager.error(res.message, \"Error!\", 3000);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Row>\r\n          <Colxx xxs=\"12\">\r\n            <Breadcrumb heading=\"heading.settings\" match={this.props.match} />\r\n            <Separator className=\"mb-5\" />\r\n          </Colxx>\r\n        </Row>\r\n        <Row>\r\n          <Colxx xxs=\"12\" sm=\"12\">\r\n            <Card>\r\n              <CardBody>\r\n                <Formik\r\n                  enableReinitialize\r\n                  initialValues={{\r\n                    contact_email: this.state.contact_email,\r\n                    contact_address: this.state.contact_address,\r\n                    admin_commission: this.state.admin_commission,\r\n                    normal_order_amount: this.state.normal_order_amount,\r\n                    normal_start_delivery_time: this.state.normal_start_delivery_time,\r\n                    normal_end_delivery_time: this.state.normal_end_delivery_time,\r\n                    premium_order_amount: this.state.premium_order_amount,\r\n                    premium_start_delivery_time: this.state.premium_start_delivery_time,\r\n                    premium_end_delivery_time: this.state.premium_end_delivery_time,\r\n                    total_sale: this.state.total_sale,\r\n                    reward_points: this.state.reward_points,\r\n                    expiration_time: this.state.expiration_time,\r\n                    pan_number: this.state.pan_number,\r\n                    gst_number: this.state.gst_number,\r\n                  }}\r\n                  validationSchema={FormSchema}\r\n                  onSubmit={this.handleSubmit}\r\n                >\r\n                  {({\r\n                    handleSubmit,\r\n                    setFieldValue,\r\n                    setFieldTouched,\r\n                    handleChange,\r\n                    values,\r\n                    errors,\r\n                    touched,\r\n                    isSubmitting,\r\n                  }) => (\r\n                    <Form className=\"av-tooltip tooltip-label-bottom\">\r\n                      <Row>\r\n                        <Colxx xxs=\"12\" sm=\"4\">\r\n                          <FormGroup className=\"form-group has-float-label\">\r\n                            <Label>Normal Order Minimum Amount</Label>\r\n                            <Field\r\n                              className=\"form-control\"\r\n                              name=\"normal_order_amount\"\r\n                              type=\"text\"\r\n                            />\r\n                            {errors.normal_order_amount && touched.normal_order_amount ? (\r\n                              <div className=\"invalid-feedback d-block\">\r\n                                {errors.normal_order_amount}\r\n                              </div>\r\n                            ) : null}\r\n                          </FormGroup>\r\n                        </Colxx>\r\n                        <Colxx xxs=\"12\" sm=\"4\">\r\n                          <FormGroup className=\"form-group has-float-label\">\r\n                            <Label>Normal Start Delivery Time</Label>\r\n                            <TimePicker\r\n                              className=\"form-control\"\r\n                              value={values.normal_start_delivery_time}\r\n                              name=\"normal_start_delivery_time\"\r\n                              clockIcon=\"\"\r\n                              disableClock={true}\r\n                              closeClock={true}\r\n                              hourPlaceholder=\"HH\"\r\n                              minutePlaceholder=\"MM\"\r\n                              onChange={(event) => {\r\n                                setFieldValue(\"normal_start_delivery_time\", event);\r\n                                this.setState({\r\n                                  normal_start_delivery_time: event,\r\n                                });\r\n                              }}\r\n                            />\r\n                            \r\n                            {errors.normal_start_delivery_time && touched.normal_start_delivery_time ? (\r\n                              <div className=\"invalid-feedback d-block\">\r\n                                {errors.normal_start_delivery_time}\r\n                              </div>\r\n                            ) : null}\r\n                          </FormGroup>\r\n                        </Colxx>\r\n                        <Colxx xxs=\"12\" sm=\"4\">\r\n                          <FormGroup className=\"form-group has-float-label\">\r\n                            <Label>Normal End Delivery Time</Label>\r\n                            <TimePicker\r\n                              className=\"form-control\"\r\n                              value={values.normal_end_delivery_time}\r\n                              name=\"normal_end_delivery_time\"\r\n                              clockIcon=\"\"\r\n                              disableClock={true}\r\n                              closeClock={true}\r\n                              hourPlaceholder=\"HH\"\r\n                              minutePlaceholder=\"MM\"\r\n                              onChange={(event) => {\r\n                                setFieldValue(\"normal_end_delivery_time\", event);\r\n                                this.setState({\r\n                                  normal_end_delivery_time: event,\r\n                                });\r\n                              }}\r\n                            />\r\n                            {errors.normal_end_delivery_time && touched.normal_end_delivery_time ? (\r\n                              <div className=\"invalid-feedback d-block\">\r\n                                {errors.normal_end_delivery_time}\r\n                              </div>\r\n                            ) : null}\r\n                          </FormGroup>\r\n                        </Colxx>\r\n                      </Row>\r\n                      <Row>\r\n                        <Colxx xxs=\"12\" sm=\"4\">\r\n                          <FormGroup className=\"form-group has-float-label\">\r\n                            <Label>Premium Order Minimum Amount</Label>\r\n                            <Field\r\n                              className=\"form-control\"\r\n                              name=\"premium_order_amount\"\r\n                              type=\"text\"\r\n                            />\r\n                            {errors.premium_order_amount && touched.premium_order_amount ? (\r\n                              <div className=\"invalid-feedback d-block\">\r\n                                {errors.premium_order_amount}\r\n                              </div>\r\n                            ) : null}\r\n                          </FormGroup>\r\n                        </Colxx>\r\n                        <Colxx xxs=\"12\" sm=\"4\">\r\n                          <FormGroup className=\"form-group has-float-label\">\r\n                            <Label>Premium Start Delivery Time</Label>\r\n                            <TimePicker\r\n                              className=\"form-control\"\r\n                              value={values.premium_start_delivery_time}\r\n                              name=\"premium_start_delivery_time\"\r\n                              clockIcon=\"\"\r\n                              disableClock={true}\r\n                              closeClock={true}\r\n                              hourPlaceholder=\"HH\"\r\n                              minutePlaceholder=\"MM\"\r\n                              onChange={(event) => {\r\n                                setFieldValue(\"premium_start_delivery_time\", event);\r\n                                this.setState({\r\n                                  premium_start_delivery_time: event,\r\n                                });\r\n                              }}\r\n                            />\r\n                            {errors.premium_start_delivery_time && touched.premium_start_delivery_time ? (\r\n                              <div className=\"invalid-feedback d-block\">\r\n                                {errors.contact_email}\r\n                              </div>\r\n                            ) : null}\r\n                          </FormGroup>\r\n                        </Colxx>\r\n                        <Colxx xxs=\"12\" sm=\"4\">\r\n                          <FormGroup className=\"form-group has-float-label\">\r\n                            <Label>Premium End Delivery Time</Label>\r\n                            <TimePicker\r\n                              className=\"form-control\"\r\n                              value={values.premium_end_delivery_time}\r\n                              name=\"premium_end_delivery_time\"\r\n                              clockIcon=\"\"\r\n                              disableClock={true}\r\n                              closeClock={true}\r\n                              hourPlaceholder=\"HH\"\r\n                              minutePlaceholder=\"MM\"\r\n                              onChange={(event) => {\r\n                                setFieldValue(\"premium_end_delivery_time\", event);\r\n                                this.setState({\r\n                                  premium_end_delivery_time: event,\r\n                                });\r\n                              }}\r\n                            />\r\n                            {errors.premium_end_delivery_time && touched.premium_end_delivery_time ? (\r\n                              <div className=\"invalid-feedback d-block\">\r\n                                {errors.premium_end_delivery_time}\r\n                              </div>\r\n                            ) : null}\r\n                          </FormGroup>\r\n                        </Colxx>\r\n                      </Row>\r\n\r\n                      <Row>\r\n                        <Colxx xxs=\"12\" sm=\"4\">\r\n                          <FormGroup className=\"form-group has-float-label\">\r\n                            <Label>Total Sale</Label>\r\n                            <Field\r\n                              className=\"form-control\"\r\n                              name=\"total_sale\"\r\n                              type=\"text\"\r\n                            />\r\n                            {errors.total_sale &&\r\n                              touched.total_sale ? (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.total_sale}\r\n                                </div>\r\n                              ) : null}\r\n                          </FormGroup>\r\n                        </Colxx>\r\n\r\n                        <Colxx xxs=\"12\" sm=\"4\">\r\n                          <FormGroup className=\"form-group has-float-label\">\r\n                            <Label>Reward Points</Label>\r\n                            <Field\r\n                              className=\"form-control\"\r\n                              name=\"reward_points\"\r\n                              type=\"text\"\r\n                            />\r\n                            {errors.reward_points &&\r\n                              touched.reward_points ? (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.reward_points}\r\n                                </div>\r\n                              ) : null}\r\n                          </FormGroup>\r\n                        </Colxx>\r\n\r\n                        <Colxx xxs=\"12\" sm=\"4\">\r\n                          <FormGroup className=\"form-group has-float-label\">\r\n                            <Label>Expiration Time(In Days)</Label>\r\n                            <Field\r\n                              className=\"form-control\"\r\n                              name=\"expiration_time\"\r\n                              type=\"text\"\r\n                            />\r\n                            {errors.expiration_time &&\r\n                              touched.expiration_time ? (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.expiration_time}\r\n                                </div>\r\n                              ) : null}\r\n                          </FormGroup>\r\n                        </Colxx>\r\n                      </Row>\r\n\r\n                      <Row>\r\n                      <Colxx xxs=\"12\" sm=\"4\">\r\n                          <FormGroup className=\"form-group has-float-label\">\r\n                            <Label>Admin Commission</Label>\r\n                            <Field\r\n                              className=\"form-control\"\r\n                              name=\"admin_commission\"\r\n                              type=\"text\"\r\n                            />\r\n                            {errors.admin_commission &&\r\n                              touched.admin_commission ? (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.admin_commission}\r\n                                </div>\r\n                              ) : null}\r\n                          </FormGroup>\r\n                        </Colxx>\r\n                        \r\n                        <Colxx xxs=\"12\" sm=\"4\">\r\n                          <FormGroup className=\"form-group has-float-label\">\r\n                            <Label>Contact Email</Label>\r\n                            <Field\r\n                              className=\"form-control\"\r\n                              name=\"contact_email\"\r\n                              type=\"text\"\r\n                            />\r\n                            {errors.contact_email && touched.contact_email ? (\r\n                              <div className=\"invalid-feedback d-block\">\r\n                                {errors.contact_email}\r\n                              </div>\r\n                            ) : null}\r\n                          </FormGroup>\r\n                        </Colxx>\r\n                        <Colxx xxs=\"12\" sm=\"4\">\r\n                          <FormGroup className=\"form-group has-float-label\">\r\n                            <Label>Contact Address</Label>\r\n                            <Field\r\n                              className=\"form-control\"\r\n                              name=\"contact_address\"\r\n                              component=\"textarea\"\r\n                            />\r\n                            {errors.contact_address &&\r\n                              touched.contact_address ? (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.contact_address}\r\n                                </div>\r\n                              ) : null}\r\n                          </FormGroup>\r\n                        </Colxx>\r\n                      </Row>\r\n                      \r\n                      <Row>\r\n                      <Colxx xxs=\"12\" sm=\"4\">\r\n                          <FormGroup className=\"form-group has-float-label\">\r\n                            <Label>Pan No</Label>\r\n                            <Field\r\n                              className=\"form-control\"\r\n                              name=\"pan_number\"\r\n                              type=\"text\"\r\n                            />\r\n                            {errors.pan_number &&\r\n                              touched.pan_number ? (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.pan_number}\r\n                                </div>\r\n                              ) : null}\r\n                          </FormGroup>\r\n                        </Colxx>\r\n\r\n                        <Colxx xxs=\"12\" sm=\"4\">\r\n                          <FormGroup className=\"form-group has-float-label\">\r\n                            <Label>Gst Number</Label>\r\n                            <Field\r\n                              className=\"form-control\"\r\n                              name=\"gst_number\"\r\n                              type=\"text\"\r\n                            />\r\n                            {errors.gst_number &&\r\n                              touched.gst_number ? (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.gst_number}\r\n                                </div>\r\n                              ) : null}\r\n                          </FormGroup>\r\n                        </Colxx>\r\n                      </Row>\r\n\r\n                      <Button color=\"primary\" type=\"submit\">\r\n                        <IntlMessages id=\"button.save\" />\r\n                      </Button>\r\n                    </Form>\r\n                  )}\r\n                </Formik>\r\n              </CardBody>\r\n            </Card>\r\n          </Colxx>\r\n        </Row>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nexport default injectIntl(Settings);\r\n","import React from 'react';\r\nimport { Col } from 'reactstrap';\r\nconst Colxx = (props) => (\r\n    <Col {...props} widths={['xxs', 'xs', 'sm', 'md', 'lg', 'xl', 'xxl']} />\r\n);\r\nconst Separator = (props) => (\r\n    <div className={`separator ${props.className}`}></div>\r\n);\r\nexport { Colxx,Separator }","import React, { Fragment } from \"react\";\r\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\n\r\nconst getMenuTitle = sub => {\r\n  return <IntlMessages id={`menu.${sub}`} />;\r\n};\r\n\r\nconst getUrl = (path, sub, index) => {\r\n  if (index === 0) {\r\n    return \"\";\r\n  } else {\r\n    return path.split(sub)[0] + sub;\r\n  }\r\n};\r\n\r\nconst BreadcrumbContainer = ({ heading, match }) => {\r\n  return (\r\n    <Fragment>\r\n      {heading && <h1><IntlMessages id={heading} /></h1>}\r\n      <BreadcrumbItems match={match} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport const BreadcrumbItems = ({ match }) => {\r\n  const path = match.path.substr(1);\r\n  let paths = path.split(\"/\");\r\n  if (paths[paths.length - 1].indexOf(\":\") > -1) {\r\n    paths = paths.filter(x => x.indexOf(\":\") === -1);\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\r\n        {paths.map((sub, index) => {\r\n          return (\r\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\r\n              {paths.length !== index + 1 ? (\r\n                <NavLink to={\"/\" + getUrl(path, sub, index)}>\r\n                  {getMenuTitle(sub)}\r\n                </NavLink>\r\n              ) : (\r\n                  getMenuTitle(sub)\r\n                )}\r\n            </BreadcrumbItem>\r\n          );\r\n        })}\r\n      </Breadcrumb>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default BreadcrumbContainer;\r\n"],"sourceRoot":""}