{"version":3,"sources":["views/app/subadmins/add.js","components/common/CustomBootstrap.js","containers/navs/Breadcrumb.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/reactstrap/es/Breadcrumb.js","../node_modules/reactstrap/es/BreadcrumbItem.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/reactstrap/es/Input.js"],"names":["SUPPORTED_FORMATS","FormSchema","Yup","shape","username","required","matches","min","max","email","country_code","phone","password","warehouse_id","user_image","test","value","includes","type","user_permissions","AddSubadmin","props","getPermissionsList","a","state","isLoading","path","ApiRoutes","GET_PERMISSIONS","Http","res","status","setState","permissionsList","data","permissionsData","NotificationManager","error","message","handleChangePermissions","e","checked_value","target","is_checked","checked","module_slug","getAttribute","push","index","indexOf","splice","length","getWarehouses","warehousesList","_id","name","GET_WAREHOUSES","docs","handleSubmit","inputValues","formData","FormData","append","JSON","stringify","CREATE_SUBADMIN","success","history","undefined","bind","this","intl","messages","xxs","heading","match","className","sm","initialValues","validationSchema","onSubmit","setFieldValue","values","setFieldTouched","handleChange","errors","touched","isSubmitting","onChange","event","map","item","key","id","currentTarget","files","module","md","module_name","permissions","permission_type","check","inline","slug","data-module","htmlFor","title","color","Component","injectIntl","Colxx","widths","Separator","getMenuTitle","sub","getUrl","split","BreadcrumbItems","substr","paths","filter","x","active","to","BreadcrumbContainer","_toConsumableArray","arr","Array","isArray","i","arr2","iter","Symbol","iterator","Object","prototype","toString","call","from","TypeError","propTypes","tag","listTag","string","listClassName","cssModule","object","children","node","Breadcrumb","Tag","ListTag","label","attributes","classes","listClasses","createElement","defaultProps","bool","BreadcrumbItem","innerRef","oneOfType","func","CardBody","ref","size","bsSize","valid","invalid","plaintext","addon","Input","_React$Component","_this","getRef","focus","_proto","render","_this$props","checkInput","isNotaNumber","RegExp","formControlClass"],"mappings":"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","file":"static/js/54.0975de12.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport {\r\n  Input,\r\n  Row,\r\n  Card,\r\n  CardBody,\r\n  FormGroup,\r\n  Label,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Colxx, Separator } from \"../../../components/common/CustomBootstrap\";\r\nimport { NotificationManager } from \"../../../components/common/react-notifications\";\r\nimport Breadcrumb from \"../../../containers/navs/Breadcrumb\";\r\nimport IntlMessages from \"../../../helpers/IntlMessages\";\r\nimport Http from \"../../../helpers/Http\";\r\nimport ApiRoutes from \"../../../helpers/ApiRoutes\";\r\n\r\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\r\nconst SUPPORTED_FORMATS = [\"image/jpg\", \"image/jpeg\", \"image/gif\", \"image/png\"];\r\nconst lettersRegex = /^\\S+$/;\r\n\r\nconst countryCodes = [\r\n  { value: \"\", label: \"Select\" },\r\n  { value: \"91\", label: \"+91\" },\r\n  { value: \"1\", label: \"+1\" },\r\n];\r\n\r\nconst FormSchema = Yup.object().shape({\r\n  username: Yup.string()\r\n    .required(\"Please enter user name\")\r\n    .matches(lettersRegex,\"Please input alphabet characters only\")\r\n    .min(2, \"Too Short! Atleast 2 letters.\")\r\n    .max(50, \"Too Long! Atmost 50 letters.\"),\r\n  email: Yup.string()\r\n    .required(\"Please enter email address\")\r\n    .email(\"Invalid email format\")\r\n    .max(50, \"Too Long! Atmost 50 letters.\"),\r\n  country_code: Yup.string().required(\"Please select country code\"),\r\n  phone: Yup.string()\r\n    .required(\"Please enter phone number\")\r\n    .matches(phoneRegExp, \"Phone number is not valid\")\r\n    .min(7, \"Too Short! Atleast 7 letters.\")\r\n    .max(15, \"Too Long! Atmost 15 letters.\"),\r\n  password: Yup.string()\r\n    .required(\"Please enter a password\")\r\n    .min(6, \"Too Short! Atleast 6 letters.\")\r\n    .max(20, \"Too Long! Atmost 20 letters.\"),\r\n  warehouse_id: Yup.string().required(\"Please select a warehouse\"),\r\n  user_image: Yup.mixed().test(\"fileType\", \"Invalid File Format\", (value) => {\r\n    if (value && value != \"\") {\r\n      return value && SUPPORTED_FORMATS.includes(value.type);\r\n    } else {\r\n      return true;\r\n    }\r\n  }),\r\n  user_permissions: Yup.array().required(\"Please choose a permission\"),\r\n});\r\n\r\nclass AddSubadmin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      email: \"\",\r\n      country_code: \"91\",\r\n      phone: \"\",\r\n      password: \"\",\r\n      warehouse_id: \"\",\r\n      user_image: undefined,\r\n      user_permissions: {},\r\n\r\n      permissionsList: [],\r\n      warehousesList: [{ _id: \"\", name: \"Select\" }],\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getPermissionsList();\r\n    this.getWarehouses();\r\n  }\r\n\r\n  getPermissionsList = async () => {\r\n    this.state.isLoading = true;\r\n\r\n    let path = ApiRoutes.GET_PERMISSIONS;\r\n    const res = await Http(\"GET\", path);\r\n\r\n    if (res.status == 200) {\r\n      this.setState({\r\n        permissionsList: [\r\n          ...this.state.permissionsList,\r\n          ...res.data.permissionsData,\r\n        ],\r\n      });\r\n    } else {\r\n      NotificationManager.error(res.message, \"Error!\", 3000);\r\n    }\r\n  };\r\n\r\n  handleChangePermissions = (e) => {\r\n    var checked_value = e.target.value;\r\n    var is_checked = e.target.checked;\r\n    var module_slug = e.target.getAttribute(\"data-module\");\r\n    var user_permissions = this.state.user_permissions;\r\n\r\n    // if any permission is checked\r\n    if (is_checked) {\r\n      if (!user_permissions[module_slug]) {\r\n        user_permissions[module_slug] = [];\r\n      }\r\n\r\n      user_permissions[module_slug].push(checked_value);\r\n    } else {\r\n      let index = user_permissions[module_slug].indexOf(checked_value);\r\n      user_permissions[module_slug].splice(index, 1);\r\n\r\n      if (user_permissions[module_slug].length == 0) {\r\n        delete user_permissions[module_slug];\r\n      }\r\n    }\r\n\r\n    this.setState({ user_permissions: user_permissions });\r\n  };\r\n\r\n  getWarehouses = async () => {\r\n    var warehousesList = [{ _id: \"\", name: \"Select\" }];\r\n\r\n    let path = ApiRoutes.GET_WAREHOUSES + \"?page_no=1&limit=1000\";\r\n    const res = await Http(\"GET\", path);\r\n\r\n    if (res.status == 200) {\r\n      this.setState({\r\n        warehousesList: [...warehousesList, ...res.data.docs],\r\n      });\r\n    } else {\r\n      NotificationManager.error(res.message, \"Error!\", 3000);\r\n    }\r\n  };\r\n\r\n  handleSubmit = async (inputValues) => {\r\n    let formData = new FormData();\r\n    formData.append(\"username\", inputValues.username);\r\n    formData.append(\"email\", inputValues.email);\r\n    formData.append(\"country_code\", inputValues.country_code);\r\n    formData.append(\"phone\", inputValues.phone);\r\n    formData.append(\"password\", inputValues.password);\r\n    formData.append(\"warehouse_id\", inputValues.warehouse_id);\r\n    formData.append(\"user_image\", inputValues.user_image);\r\n    formData.append(\r\n      \"user_permissions\",\r\n      JSON.stringify(this.state.user_permissions)\r\n    );\r\n\r\n    let path = ApiRoutes.CREATE_SUBADMIN;\r\n    const res = await Http(\"POST\", path, formData);\r\n\r\n    if (res.status == 200) {\r\n      NotificationManager.success(res.message, \"Success!\", 3000);\r\n      this.props.history.push(\"/app/subadmins\");\r\n    } else {\r\n      NotificationManager.error(res.message, \"Error!\", 3000);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { messages } = this.props.intl;\r\n    return (\r\n      <Fragment>\r\n        <Row>\r\n          <Colxx xxs=\"12\">\r\n            <Breadcrumb\r\n              heading=\"heading.add-subadmin\"\r\n              match={this.props.match}\r\n            />\r\n            <Separator className=\"mb-5\" />\r\n          </Colxx>\r\n        </Row>\r\n        <Row>\r\n          <Colxx xxs=\"12\" sm=\"12\">\r\n            <Card>\r\n              <CardBody>\r\n                <Formik\r\n                  initialValues={{\r\n                    username: this.state.username,\r\n                    email: this.state.email,\r\n                    country_code: this.state.country_code,\r\n                    phone: this.state.phone,\r\n                    password: this.state.password,\r\n                    warehouse_id: this.state.warehouse_id,\r\n                    user_image: this.state.user_image,\r\n                    user_permissions: [\"unicorns\"],\r\n                  }}\r\n                  validationSchema={FormSchema}\r\n                  onSubmit={this.handleSubmit}\r\n                >\r\n                  {({\r\n                    handleSubmit,\r\n                    setFieldValue,\r\n                    setFieldTouched,\r\n                    handleChange,\r\n                    values,\r\n                    errors,\r\n                    touched,\r\n                    isSubmitting,\r\n                  }) => (\r\n                      <Form className=\"av-tooltip tooltip-label-bottom\">\r\n                        <Row>\r\n                          <Colxx xxs=\"12\" sm=\"6\">\r\n                            <FormGroup className=\"form-group has-float-label\">\r\n                              <Label>User Name</Label>\r\n                              <Field\r\n                                className=\"form-control\"\r\n                                name=\"username\"\r\n                                type=\"text\"\r\n                              />\r\n                              {errors.username && touched.username ? (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.username}\r\n                                </div>\r\n                              ) : null}\r\n                            </FormGroup>\r\n                          </Colxx>\r\n                          <Colxx xxs=\"12\" sm=\"6\">\r\n                            <FormGroup className=\"form-group has-float-label\">\r\n                              <Label>Email</Label>\r\n                              <Field\r\n                                className=\"form-control\"\r\n                                name=\"email\"\r\n                                type=\"email\"\r\n                              />\r\n                              {errors.email && touched.email ? (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.email}\r\n                                </div>\r\n                              ) : null}\r\n                            </FormGroup>\r\n                          </Colxx>\r\n                          {/* <Colxx xxs=\"12\" sm=\"2\">\r\n                            <FormGroup className=\"form-group has-float-label\">\r\n                              <Label>Country Code</Label>\r\n                              <select\r\n                                name=\"country_code\"\r\n                                className=\"form-control\"\r\n                                value={values.country_code}\r\n                                onChange={handleChange}\r\n                              >\r\n                                {countryCodes.map((item, index) => {\r\n                                  return (\r\n                                    <option key={index} value={item.value}>\r\n                                      {item.label}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </select>\r\n                              {errors.country_code && touched.country_code ? (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.country_code}\r\n                                </div>\r\n                              ) : null}\r\n                            </FormGroup>\r\n                          </Colxx> */}\r\n                          <Colxx xxs=\"12\" sm=\"6\">\r\n                            <FormGroup className=\"form-group has-float-label\">\r\n                              <Label>Phone</Label>\r\n                              <Field\r\n                                className=\"form-control\"\r\n                                name=\"phone\"\r\n                                type=\"text\"\r\n                              />\r\n                              {errors.phone && touched.phone ? (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.phone}\r\n                                </div>\r\n                              ) : null}\r\n                            </FormGroup>\r\n                          </Colxx>\r\n                          <Colxx xxs=\"12\" sm=\"6\">\r\n                            <FormGroup className=\"form-group has-float-label\">\r\n                              <Label>Password</Label>\r\n                              <Field\r\n                                className=\"form-control\"\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                              />\r\n                              {errors.password && touched.password ? (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.password}\r\n                                </div>\r\n                              ) : null}\r\n                            </FormGroup>\r\n                          </Colxx>\r\n                          <Colxx xxs=\"12\" sm=\"6\">\r\n                            <FormGroup className=\"form-group has-float-label\">\r\n                              <Label>Assign Warehouse</Label>\r\n                              <select\r\n                                name=\"warehouse_id\"\r\n                                className=\"form-control\"\r\n                                value={values.warehouse_id}\r\n                                onChange={(event) => {\r\n                                  setFieldValue(\r\n                                    \"warehouse_id\",\r\n                                    event.target.value\r\n                                  );\r\n                                }}\r\n                              >\r\n                                {this.state.warehousesList.map((item, index) => {\r\n                                  return (\r\n                                    <option key={index} value={item.id}>\r\n                                      {item.name}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </select>\r\n                              {errors.warehouse_id && touched.warehouse_id ? (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.warehouse_id}\r\n                                </div>\r\n                              ) : null}\r\n                            </FormGroup>\r\n                          </Colxx>\r\n                          <Colxx xxs=\"12\" sm=\"6\">\r\n                            <FormGroup className=\"form-group has-float-label\">\r\n                              <Label>Profile Image</Label>\r\n                              <Field\r\n                                className=\"form-control\"\r\n                                name=\"user_image\"\r\n                                type=\"file\"\r\n                                value={this.state.user_image}\r\n                                onChange={(event) => {\r\n                                  setFieldValue(\r\n                                    \"user_image\",\r\n                                    event.currentTarget.files[0]\r\n                                  );\r\n                                }}\r\n                              />\r\n                              {errors.user_image && touched.user_image ? (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.user_image}\r\n                                </div>\r\n                              ) : null}\r\n                            </FormGroup>\r\n                          </Colxx>\r\n\r\n                          <Colxx xxs=\"12\" sm=\"12\">\r\n                            <Label>\r\n                              <h3>Permissions</h3>\r\n                            </Label>\r\n                            {this.state.permissionsList.map((module, index) => (\r\n                              <Colxx md=\"12\" key={index}>\r\n                                <Row>\r\n                                  <Colxx md=\"3\">\r\n                                    <Label>{module.module_name}</Label>\r\n                                  </Colxx>\r\n                                  <Colxx md=\"9\">\r\n                                    {module.permissions.map(\r\n                                      (permission_type, index) => (\r\n                                        <FormGroup check inline key={index}>\r\n                                          <Input\r\n                                            className=\"form-check-input\"\r\n                                            type=\"checkbox\"\r\n                                            onChange={(e) => {\r\n                                              this.handleChangePermissions(e);\r\n                                            }}\r\n                                            id={\r\n                                              module.module_name +\r\n                                              \"_\" +\r\n                                              permission_type.slug\r\n                                            }\r\n                                            name={module.module_slug}\r\n                                            data-module={module.module_slug}\r\n                                            value={permission_type.slug}\r\n                                          />\r\n\r\n                                          <Label\r\n                                            className=\"form-check-label\"\r\n                                            check\r\n                                            htmlFor={\r\n                                              module.module_name +\r\n                                              \"_\" +\r\n                                              permission_type.slug\r\n                                            }\r\n                                          >\r\n                                            {permission_type.title}\r\n                                          </Label>\r\n                                        </FormGroup>\r\n                                      )\r\n                                    )}\r\n                                  </Colxx>\r\n                                </Row>\r\n                              </Colxx>\r\n                            ))}\r\n                          </Colxx>\r\n                        </Row>\r\n\r\n                        <Button color=\"primary\" type=\"submit\">\r\n                          <IntlMessages id=\"button.save\" />\r\n                        </Button>\r\n                      </Form>\r\n                    )}\r\n                </Formik>\r\n              </CardBody>\r\n            </Card>\r\n          </Colxx>\r\n        </Row>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nexport default injectIntl(AddSubadmin);\r\n","import React from 'react';\r\nimport { Col } from 'reactstrap';\r\nconst Colxx = (props) => (\r\n    <Col {...props} widths={['xxs', 'xs', 'sm', 'md', 'lg', 'xl', 'xxl']} />\r\n);\r\nconst Separator = (props) => (\r\n    <div className={`separator ${props.className}`}></div>\r\n);\r\nexport { Colxx,Separator }","import React, { Fragment } from \"react\";\r\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\n\r\nconst getMenuTitle = sub => {\r\n  return <IntlMessages id={`menu.${sub}`} />;\r\n};\r\n\r\nconst getUrl = (path, sub, index) => {\r\n  if (index === 0) {\r\n    return \"\";\r\n  } else {\r\n    return path.split(sub)[0] + sub;\r\n  }\r\n};\r\n\r\nconst BreadcrumbContainer = ({ heading, match }) => {\r\n  return (\r\n    <Fragment>\r\n      {heading && <h1><IntlMessages id={heading} /></h1>}\r\n      <BreadcrumbItems match={match} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport const BreadcrumbItems = ({ match }) => {\r\n  const path = match.path.substr(1);\r\n  let paths = path.split(\"/\");\r\n  if (paths[paths.length - 1].indexOf(\":\") > -1) {\r\n    paths = paths.filter(x => x.indexOf(\":\") === -1);\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\r\n        {paths.map((sub, index) => {\r\n          return (\r\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\r\n              {paths.length !== index + 1 ? (\r\n                <NavLink to={\"/\" + getUrl(path, sub, index)}>\r\n                  {getMenuTitle(sub)}\r\n                </NavLink>\r\n              ) : (\r\n                  getMenuTitle(sub)\r\n                )}\r\n            </BreadcrumbItem>\r\n          );\r\n        })}\r\n      </Breadcrumb>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default BreadcrumbContainer;\r\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  listTag: tagPropType,\n  className: PropTypes.string,\n  listClassName: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  'aria-label': PropTypes.string\n};\nvar defaultProps = {\n  tag: 'nav',\n  listTag: 'ol',\n  'aria-label': 'breadcrumb'\n};\n\nvar Breadcrumb = function Breadcrumb(props) {\n  var className = props.className,\n      listClassName = props.listClassName,\n      cssModule = props.cssModule,\n      children = props.children,\n      Tag = props.tag,\n      ListTag = props.listTag,\n      label = props['aria-label'],\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"listClassName\", \"cssModule\", \"children\", \"tag\", \"listTag\", \"aria-label\"]);\n\n  var classes = mapToCssModules(classNames(className), cssModule);\n  var listClasses = mapToCssModules(classNames('breadcrumb', listClassName), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-label\": label\n  }), React.createElement(ListTag, {\n    className: listClasses\n  }, children));\n};\n\nBreadcrumb.propTypes = propTypes;\nBreadcrumb.defaultProps = defaultProps;\nexport default Breadcrumb;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  active: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'li'\n};\n\nvar BreadcrumbItem = function BreadcrumbItem(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      active = props.active,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"active\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, active ? 'active' : false, 'breadcrumb-item'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-current\": active ? 'page' : undefined\n  }));\n};\n\nBreadcrumbItem.propTypes = propTypes;\nBreadcrumbItem.defaultProps = defaultProps;\nexport default BreadcrumbItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\n/* eslint react/prefer-stateless-function: 0 */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, warnOnce, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  type: PropTypes.string,\n  size: PropTypes.string,\n  bsSize: PropTypes.string,\n  valid: PropTypes.bool,\n  invalid: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  plaintext: PropTypes.bool,\n  addon: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  type: 'text'\n};\n\nvar Input =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Input, _React$Component);\n\n  function Input(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.focus = _this.focus.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Input.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.focus = function focus() {\n    if (this.ref) {\n      this.ref.focus();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        type = _this$props.type,\n        bsSize = _this$props.bsSize,\n        valid = _this$props.valid,\n        invalid = _this$props.invalid,\n        tag = _this$props.tag,\n        addon = _this$props.addon,\n        plaintext = _this$props.plaintext,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"cssModule\", \"type\", \"bsSize\", \"valid\", \"invalid\", \"tag\", \"addon\", \"plaintext\", \"innerRef\"]);\n\n    var checkInput = ['radio', 'checkbox'].indexOf(type) > -1;\n    var isNotaNumber = new RegExp('\\\\D', 'g');\n    var fileInput = type === 'file';\n    var textareaInput = type === 'textarea';\n    var selectInput = type === 'select';\n    var Tag = tag || (selectInput || textareaInput ? type : 'input');\n    var formControlClass = 'form-control';\n\n    if (plaintext) {\n      formControlClass = formControlClass + \"-plaintext\";\n      Tag = tag || 'input';\n    } else if (fileInput) {\n      formControlClass = formControlClass + \"-file\";\n    } else if (checkInput) {\n      if (addon) {\n        formControlClass = null;\n      } else {\n        formControlClass = 'form-check-input';\n      }\n    }\n\n    if (attributes.size && isNotaNumber.test(attributes.size)) {\n      warnOnce('Please use the prop \"bsSize\" instead of the \"size\" to bootstrap\\'s input sizing.');\n      bsSize = attributes.size;\n      delete attributes.size;\n    }\n\n    var classes = mapToCssModules(classNames(className, invalid && 'is-invalid', valid && 'is-valid', bsSize ? \"form-control-\" + bsSize : false, formControlClass), cssModule);\n\n    if (Tag === 'input' || tag && typeof tag === 'function') {\n      attributes.type = type;\n    }\n\n    if (attributes.children && !(plaintext || type === 'select' || typeof Tag !== 'string' || Tag === 'select')) {\n      warnOnce(\"Input with a type of \\\"\" + type + \"\\\" cannot have children. Please use \\\"value\\\"/\\\"defaultValue\\\" instead.\");\n      delete attributes.children;\n    }\n\n    return React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes\n    }));\n  };\n\n  return Input;\n}(React.Component);\n\nInput.propTypes = propTypes;\nInput.defaultProps = defaultProps;\nexport default Input;"],"sourceRoot":""}