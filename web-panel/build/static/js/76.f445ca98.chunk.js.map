{"version":3,"sources":["views/app/customers/edit.js","components/common/CustomBootstrap.js","containers/navs/Breadcrumb.js","../node_modules/reactstrap/es/Breadcrumb.js","../node_modules/reactstrap/es/BreadcrumbItem.js","../node_modules/reactstrap/es/CardBody.js"],"names":["SUPPORTED_FORMATS","FormSchema","Yup","shape","username","required","matches","min","max","email","country_code","phone","address","user_image","test","value","includes","type","EditCustomer","props","dataRender","a","path","ApiRoutes","GET_CUSTOMER","state","itemId","Http","res","status","setState","data","image_preview","user_image_thumb_url","isLoading","NotificationManager","error","message","handleSubmit","inputValues","formData","FormData","append","UPDATE_CUSTOMER","success","history","push","pathname","pageIndex","currentPage","match","params","undefined","location","bind","this","xxs","heading","className","sm","enableReinitialize","initialValues","last_name","validationSchema","onSubmit","setFieldValue","errors","setFieldTouched","handleChange","values","touched","isSubmitting","name","component","onChange","event","currentTarget","files","alt","src","color","id","Component","injectIntl","Colxx","widths","Separator","getMenuTitle","sub","getUrl","index","split","BreadcrumbItems","substr","paths","length","indexOf","filter","x","map","key","active","to","BreadcrumbContainer","propTypes","tag","listTag","string","listClassName","cssModule","object","children","node","Breadcrumb","Tag","ListTag","label","attributes","classes","listClasses","createElement","defaultProps","bool","BreadcrumbItem","innerRef","oneOfType","func","CardBody","ref"],"mappings":"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","file":"static/js/76.f445ca98.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { Row, Card, CardBody, FormGroup, Label, Button } from \"reactstrap\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Colxx, Separator } from \"../../../components/common/CustomBootstrap\";\r\nimport { NotificationManager } from \"../../../components/common/react-notifications\";\r\nimport Breadcrumb from \"../../../containers/navs/Breadcrumb\";\r\n\r\nimport IntlMessages from \"../../../helpers/IntlMessages\";\r\nimport Http from \"../../../helpers/Http\";\r\nimport ApiRoutes from \"../../../helpers/ApiRoutes\";\r\n\r\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\r\nconst SUPPORTED_FORMATS = [\"image/jpg\", \"image/jpeg\", \"image/gif\", \"image/png\"];\r\nconst lettersRegex = /^\\S+$/;\r\n\r\nconst countryCodes = [\r\n  { value: \"\", label: \"Select\" },\r\n  { value: \"91\", label: \"+91\" },\r\n  { value: \"1\", label: \"+1\" },\r\n];\r\n\r\nconst FormSchema = Yup.object().shape({\r\n  username: Yup.string()\r\n    .required(\"Please enter user name\")\r\n    .matches(lettersRegex,\"Please input alphabet characters only\")\r\n    .min(2, \"Too Short! Atleast 2 letters.\")\r\n    .max(50, \"Too Long! Atmost 50 letters.\"),\r\n  email: Yup.string()\r\n    .required(\"Please enter email address\")\r\n    .email(\"Invalid email format\")\r\n    .max(50, \"Too Long! Atmost 50 letters.\"),\r\n  country_code: Yup.string().required(\"Please select country code\"),\r\n  phone: Yup.string()\r\n    .required(\"Please enter phone number\")\r\n    .matches(phoneRegExp, \"Phone number is not valid\")\r\n    .min(7, \"Too Short! Atleast 7 letters.\")\r\n    .max(15, \"Too Long! Atmost 15 letters.\"),\r\n  address: Yup.string(),\r\n  //.required(\"Please provide the address\"),\r\n  user_image: Yup.mixed().test(\"fileType\", \"Invalid File Format\", (value) => {\r\n    if (value && value != \"\") {\r\n      return value && SUPPORTED_FORMATS.includes(value.type);\r\n    } else {\r\n      return true;\r\n    }\r\n  }),\r\n});\r\n\r\nclass EditCustomer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      itemId: props.match.params.itemId,\r\n      username: \"\",\r\n      email: \"\",\r\n      country_code: \"91\",\r\n      phone: \"\",\r\n      address: \"\",\r\n      user_image: undefined,\r\n      currentPage: this.props.history.location.state.pageIndex,\r\n      image_preview: \"\",\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.dataRender();\r\n  }\r\n\r\n  dataRender = async () => {\r\n    let path = ApiRoutes.GET_CUSTOMER + \"/\" + this.state.itemId;\r\n    const res = await Http(\"GET\", path);\r\n\r\n    if (res.status == 200) {\r\n      this.setState({\r\n        username: res.data.username,\r\n        email: res.data.email,\r\n        country_code: res.data.country_code,\r\n        phone: res.data.phone,\r\n        address: res.data.address,\r\n        image_preview: res.data.user_image_thumb_url,\r\n        isLoading: true,\r\n      });\r\n    } else {\r\n      NotificationManager.error(res.message, \"Error!\", 3000);\r\n    }\r\n  };\r\n\r\n  handleSubmit = async (inputValues) => {\r\n    let formData = new FormData();\r\n    formData.append(\"username\", inputValues.username);\r\n    formData.append(\"email\", inputValues.email);\r\n    formData.append(\"country_code\", inputValues.country_code);\r\n    formData.append(\"phone\", inputValues.phone);\r\n    formData.append(\"address\", inputValues.address);\r\n    formData.append(\"user_image\", inputValues.user_image);\r\n\r\n    let path = ApiRoutes.UPDATE_CUSTOMER + \"/\" + this.state.itemId;\r\n    const res = await Http(\"PUT\", path, formData);\r\n\r\n    if (res.status == 200) {\r\n      NotificationManager.success(res.message, \"Success!\", 3000);\r\n      this.props.history.push({pathname:`/app/customers`, state:{pageIndex:this.state.currentPage}})\r\n    } else {\r\n      NotificationManager.error(res.message, \"Error!\", 3000);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Row>\r\n          <Colxx xxs=\"12\">\r\n            <Breadcrumb\r\n              heading=\"heading.edit-customer\"\r\n              match={this.props.match}\r\n            />\r\n            <Separator className=\"mb-5\" />\r\n          </Colxx>\r\n        </Row>\r\n        <Row>\r\n          <Colxx xxs=\"12\" sm=\"12\">\r\n            <Card>\r\n              <CardBody>\r\n                <Formik\r\n                  enableReinitialize\r\n                  initialValues={{\r\n                    username: this.state.username,\r\n                    last_name: this.state.last_name,\r\n                    email: this.state.email,\r\n                    country_code: this.state.country_code,\r\n                    phone: this.state.phone,\r\n                    address: this.state.address,\r\n                    user_image: undefined,\r\n                  }}\r\n                  validationSchema={FormSchema}\r\n                  onSubmit={this.handleSubmit}\r\n                >\r\n                  {({\r\n                    handleSubmit,\r\n                    setFieldValue,\r\n                    setFieldTouched,\r\n                    handleChange,\r\n                    values,\r\n                    errors,\r\n                    touched,\r\n                    isSubmitting,\r\n                  }) => (\r\n                      <Form className=\"av-tooltip tooltip-label-bottom\">\r\n                        <Row>\r\n                          <Colxx xxs=\"12\" sm=\"6\">\r\n                            <FormGroup className=\"form-group has-float-label\">\r\n                              <Label>User Name</Label>\r\n                              <Field\r\n                                className=\"form-control\"\r\n                                name=\"username\"\r\n                                type=\"text\"\r\n                              />\r\n                              {errors.username && touched.username ? (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.username}\r\n                                </div>\r\n                              ) : null}\r\n                            </FormGroup>\r\n                          </Colxx>\r\n                          <Colxx xxs=\"12\" sm=\"6\">\r\n                            <FormGroup className=\"form-group has-float-label\">\r\n                              <Label>Email</Label>\r\n                              <Field\r\n                                className=\"form-control\"\r\n                                name=\"email\"\r\n                                type=\"email\"\r\n                              />\r\n                              {errors.email && touched.email ? (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.email}\r\n                                </div>\r\n                              ) : null}\r\n                            </FormGroup>\r\n                          </Colxx>\r\n                          {/* <Colxx xxs=\"12\" sm=\"2\">\r\n                            <FormGroup className=\"form-group has-float-label\">\r\n                              <Label>Country Code</Label>\r\n                              <select\r\n                                name=\"country_code\"\r\n                                className=\"form-control\"\r\n                                value={values.country_code}\r\n                                onChange={handleChange}\r\n                              >\r\n                                {countryCodes.map((item, index) => {\r\n                                  return (\r\n                                    <option key={index} value={item.value}>\r\n                                      {item.label}\r\n                                    </option>\r\n                                  );\r\n                                })}\r\n                              </select>\r\n                              {errors.country_code && touched.country_code ? (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.country_code}\r\n                                </div>\r\n                              ) : null}\r\n                            </FormGroup>\r\n                          </Colxx> */}\r\n                          <Colxx xxs=\"12\" sm=\"6\">\r\n                            <FormGroup className=\"form-group has-float-label\">\r\n                              <Label>Phone</Label>\r\n                              <Field\r\n                                className=\"form-control\"\r\n                                name=\"phone\"\r\n                                type=\"text\"\r\n                              />\r\n                              {errors.phone && touched.phone ? (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.phone}\r\n                                </div>\r\n                              ) : null}\r\n                            </FormGroup>\r\n                          </Colxx>\r\n                          <Colxx xxs=\"12\" sm=\"6\">\r\n                            <FormGroup className=\"form-group has-float-label\">\r\n                              <Label>Address</Label>\r\n                              <Field\r\n                                className=\"form-control\"\r\n                                name=\"address\"\r\n                                component=\"textarea\"\r\n                              />\r\n                              {errors.address && touched.address ? (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.address}\r\n                                </div>\r\n                              ) : null}\r\n                            </FormGroup>\r\n                          </Colxx>\r\n                          <Colxx xxs=\"12\" sm=\"6\">\r\n                            <FormGroup className=\"form-group has-float-label\">\r\n                              <Label>Profile Image</Label>\r\n                              <Field\r\n                                className=\"form-control\"\r\n                                name=\"user_image\"\r\n                                type=\"file\"\r\n                                value={this.state.user_image}\r\n                                onChange={(event) => {\r\n                                  setFieldValue(\r\n                                    \"user_image\",\r\n                                    event.currentTarget.files[0]\r\n                                  );\r\n                                }}\r\n                              />\r\n                              {errors.user_image && touched.user_image ? (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.user_image}\r\n                                </div>\r\n                              ) : null}\r\n                            </FormGroup>\r\n\r\n                            <img\r\n                              alt={this.state.username}\r\n                              src={this.state.image_preview}\r\n                              className=\"img-thumbnail border-0 list-thumbnail align-self-center image-preview\"\r\n                            />\r\n                          </Colxx>\r\n                        </Row>\r\n\r\n                        <Button color=\"primary\" type=\"submit\">\r\n                          <IntlMessages id=\"button.save\" />\r\n                        </Button>\r\n                      </Form>\r\n                    )}\r\n                </Formik>\r\n              </CardBody>\r\n            </Card>\r\n          </Colxx>\r\n        </Row>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nexport default injectIntl(EditCustomer);\r\n","import React from 'react';\r\nimport { Col } from 'reactstrap';\r\nconst Colxx = (props) => (\r\n    <Col {...props} widths={['xxs', 'xs', 'sm', 'md', 'lg', 'xl', 'xxl']} />\r\n);\r\nconst Separator = (props) => (\r\n    <div className={`separator ${props.className}`}></div>\r\n);\r\nexport { Colxx,Separator }","import React, { Fragment } from \"react\";\r\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\n\r\nconst getMenuTitle = sub => {\r\n  return <IntlMessages id={`menu.${sub}`} />;\r\n};\r\n\r\nconst getUrl = (path, sub, index) => {\r\n  if (index === 0) {\r\n    return \"\";\r\n  } else {\r\n    return path.split(sub)[0] + sub;\r\n  }\r\n};\r\n\r\nconst BreadcrumbContainer = ({ heading, match }) => {\r\n  return (\r\n    <Fragment>\r\n      {heading && <h1><IntlMessages id={heading} /></h1>}\r\n      <BreadcrumbItems match={match} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport const BreadcrumbItems = ({ match }) => {\r\n  const path = match.path.substr(1);\r\n  let paths = path.split(\"/\");\r\n  if (paths[paths.length - 1].indexOf(\":\") > -1) {\r\n    paths = paths.filter(x => x.indexOf(\":\") === -1);\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\r\n        {paths.map((sub, index) => {\r\n          return (\r\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\r\n              {paths.length !== index + 1 ? (\r\n                <NavLink to={\"/\" + getUrl(path, sub, index)}>\r\n                  {getMenuTitle(sub)}\r\n                </NavLink>\r\n              ) : (\r\n                  getMenuTitle(sub)\r\n                )}\r\n            </BreadcrumbItem>\r\n          );\r\n        })}\r\n      </Breadcrumb>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default BreadcrumbContainer;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  listTag: tagPropType,\n  className: PropTypes.string,\n  listClassName: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  'aria-label': PropTypes.string\n};\nvar defaultProps = {\n  tag: 'nav',\n  listTag: 'ol',\n  'aria-label': 'breadcrumb'\n};\n\nvar Breadcrumb = function Breadcrumb(props) {\n  var className = props.className,\n      listClassName = props.listClassName,\n      cssModule = props.cssModule,\n      children = props.children,\n      Tag = props.tag,\n      ListTag = props.listTag,\n      label = props['aria-label'],\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"listClassName\", \"cssModule\", \"children\", \"tag\", \"listTag\", \"aria-label\"]);\n\n  var classes = mapToCssModules(classNames(className), cssModule);\n  var listClasses = mapToCssModules(classNames('breadcrumb', listClassName), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-label\": label\n  }), React.createElement(ListTag, {\n    className: listClasses\n  }, children));\n};\n\nBreadcrumb.propTypes = propTypes;\nBreadcrumb.defaultProps = defaultProps;\nexport default Breadcrumb;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  active: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'li'\n};\n\nvar BreadcrumbItem = function BreadcrumbItem(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      active = props.active,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"active\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, active ? 'active' : false, 'breadcrumb-item'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-current\": active ? 'page' : undefined\n  }));\n};\n\nBreadcrumbItem.propTypes = propTypes;\nBreadcrumbItem.defaultProps = defaultProps;\nexport default BreadcrumbItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;"],"sourceRoot":""}