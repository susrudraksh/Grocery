{"version":3,"sources":["data/products.js","views/app/orders/order-detail.js","components/common/CustomBootstrap.js","containers/navs/Breadcrumb.js","containers/pages/ListPageHeading.js"],"names":["produtcs","id","title","img","category","createDate","status","statusColor","description","sales","stock","swalWithBootstrapButtonsStatus","Swal","mixin","customClass","confirmButton","cancelButton","buttonsStyling","newstatus","newstatus1","OrderDetails","props","getOrderDetail","a","state","isLoading","path","ApiRoutes","GET_ORDER_DETAIL","orderId","Http","res","setState","categoryData","data","orderData","userData","driverData","driver","warehouseData","transitData","tracking_status","In_Transit","packedData","Packed","deliveredData","Delivered","NotificationManager","error","message","saveAsPDF","GET_PDF","console","log","formData","FormData","append","JSON","stringify","link","document","createElement","href","target","download","dispatchEvent","MouseEvent","onChangeItemStatus","itemId","category_name","product_id","fire","text","type","width","heightAuto","showCancelButton","confirmButtonColor","confirmButtonText","cancelButtonText","reverseButtons","then","result","value","newStatus","_id","userId","UPDATE_GROCERY_ORDER_STATUS","UPDATE_NORMAL_ORDER_STATUS","success","toggleTab","bind","activeFirstTab","match","params","items","ProductsList","tab","this","activeTab","item","Button","onClick","className","ListPageHeading","heading","order_id","Row","xxs","xl","Card","TabContent","TabPane","tabId","sm","CardBody","moment","order_date","format","order_status","payment_mode","length","name","register_id","customer_name","username","customer_phone","phone","time","expected_end_date","map","index","all_return","products","outline","color","size","e","reason","Table","hover","product","key","alt","src","images","product_image_thumb_url","price","is_discount","offer_price","quantity","borderless","delivery_fee","vat_amount","discount","net_amount","InputGroup","InputGroupAddon","addonType","Component","Colxx","widths","Separator","getMenuTitle","sub","getUrl","split","BreadcrumbItems","substr","paths","indexOf","filter","x","active","to","BreadcrumbContainer","statusOptions","column","label","daysOptions","amountOptions","orderStatus","togglePopover","prevState","popoverOpen","showPopover","hidePopover","toggleDisplayOptions","displayOptionsIsOpen","toggleSplit","dropdownSplitOpen","selectedStatusOption","selectedDaysOption","selectedAmountOption","selectedOrderStatus","intl","messages","addNewItemRoute","displayOpts","orderOptions","pageSizes","selectedPageSize","selectedOrderOption","searchKeyword","searchPlaceholder","filterFromDate","filterToDate","onSearchKey","filterStatus","onChangeFromDate","onChangeToDate","changeOrderBy","changeStatus","changeDaysStatus","changeAmountStatus","changeOrderStatus","changePageSize","onResetFilters","onSearchFilters","totalItemCount","startIndex","endIndex","daysStatus","amountStatus","addNewBtn","keyword","fromDate","toDate","isOpen","caret","order","placeholder","onChange","onKeyPress","onFocus","onBlur","placement","right","injectIntl"],"mappings":"iWAqPeA,G,OArPE,CACf,CACEC,GAAI,EACJC,MAAO,cACPC,IAAK,oCACLC,SAAU,QACVC,WAAY,aACZC,OAAQ,UACRC,YAAa,UACbC,YAAa,qDACbC,MAAO,KACPC,MAAO,IAET,CACET,GAAI,EACJC,MAAO,aACPE,SAAU,WACVD,IAAK,mCACLE,WAAY,aACZC,OAAQ,YACRC,YAAa,YACbC,YAAa,uDACbC,MAAO,KACPC,MAAO,IAET,CACET,GAAI,EACJC,MAAO,iBACPC,IAAK,uCACLC,SAAU,QACVC,WAAY,aACZC,OAAQ,YACRC,YAAa,YACbC,YAAa,kDACbC,MAAO,KACPC,MAAO,IAET,CACET,GAAI,EACJC,MAAO,eACPC,IAAK,qCACLC,SAAU,QACVC,WAAY,aACZC,OAAQ,YACRC,YAAa,YACbC,YAAa,8BACbC,MAAO,KACPC,MAAO,IAET,CACET,GAAI,EACJC,MAAO,kBACPE,SAAU,WACVD,IAAK,qCACLE,WAAY,aACZC,OAAQ,UACRC,YAAa,UACbC,YAAa,iCACbC,MAAO,IACPC,MAAO,IAET,CACET,GAAI,EACJC,MAAO,qBACPC,IAAK,2CACLC,SAAU,WACVC,WAAY,aACZC,OAAQ,YACRC,YAAa,YACbC,YAAa,sDACbC,MAAO,IACPC,MAAO,IAET,CACET,GAAI,EACJC,MAAO,eACPC,IAAK,qCACLC,SAAU,WACVC,WAAY,aACZC,OAAQ,YACRC,YAAa,YACbC,YAAa,qDACbC,MAAO,IACPC,MAAO,IAET,CACET,GAAI,EACJC,MAAO,aACPC,IAAK,mCACLC,SAAU,QACVC,WAAY,aACZC,OAAQ,UACRC,YAAa,UACbC,YAAa,iCACbC,MAAO,IACPC,MAAO,IAET,CACET,GAAI,EACJC,MAAO,YACPC,IAAK,kCACLC,SAAU,QACVC,WAAY,aACZC,OAAQ,UACRC,YAAa,UACbC,YACE,mFACFC,MAAO,IACPC,MAAO,IAET,CACET,GAAI,GACJC,MAAO,UACPC,IAAK,gCACLC,SAAU,WACVC,WAAY,aACZC,OAAQ,YACRC,YAAa,YACbC,YAAa,uCACbC,MAAO,IACPC,MAAO,IAET,CACET,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","file":"static/js/91.0bae2994.chunk.js","sourcesContent":["const produtcs = [\r\n  {\r\n    id: 1,\r\n    title: 'Marble Cake',\r\n    img: '/assets/img/marble-cake-thumb.jpg',\r\n    category: 'Cakes',\r\n    createDate: '02.04.2018',\r\n    status: 'ON HOLD',\r\n    statusColor: 'primary',\r\n    description: 'Wedding cake with flowers Macarons and blueberries',\r\n    sales: 1647,\r\n    stock: 62\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'Fat Rascal',\r\n    category: 'Cupcakes',\r\n    img: '/assets/img/fat-rascal-thumb.jpg',\r\n    createDate: '01.04.2018',\r\n    status: 'PROCESSED',\r\n    statusColor: 'secondary',\r\n    description: 'Cheesecake with chocolate cookies and Cream biscuits',\r\n    sales: 1240,\r\n    stock: 48\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'Chocolate Cake',\r\n    img: '/assets/img/chocolate-cake-thumb.jpg',\r\n    category: 'Cakes',\r\n    createDate: '25.03.2018',\r\n    status: 'PROCESSED',\r\n    statusColor: 'secondary',\r\n    description: 'Homemade cheesecake with fresh berries and mint',\r\n    sales: 1080,\r\n    stock: 57\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'Goose Breast',\r\n    img: '/assets/img/goose-breast-thumb.jpg',\r\n    category: 'Cakes',\r\n    createDate: '21.03.2018',\r\n    status: 'PROCESSED',\r\n    statusColor: 'secondary',\r\n    description: 'Chocolate cake with berries',\r\n    sales: 1014,\r\n    stock: 41\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'Petit Gâteau',\r\n    category: 'Cupcakes',\r\n    img: '/assets/img/petit-gateau-thumb.jpg',\r\n    createDate: '02.06.2018',\r\n    status: 'ON HOLD',\r\n    statusColor: 'primary',\r\n    description: 'Chocolate cake with mascarpone',\r\n    sales: 985,\r\n    stock: 23\r\n  },\r\n  {\r\n    id: 6,\r\n    title: 'Salzburger Nockerl',\r\n    img: '/assets/img/salzburger-nockerl-thumb.jpg',\r\n    category: 'Desserts',\r\n    createDate: '14.07.2018',\r\n    status: 'PROCESSED',\r\n    statusColor: 'secondary',\r\n    description: 'Wedding cake decorated with donuts and wild berries',\r\n    sales: 962,\r\n    stock: 34\r\n  },\r\n  {\r\n    id: 7,\r\n    title: 'Napoleonshat',\r\n    img: '/assets/img/napoleonshat-thumb.jpg',\r\n    category: 'Desserts',\r\n    createDate: '05.02.2018',\r\n    status: 'PROCESSED',\r\n    statusColor: 'secondary',\r\n    description: 'Cheesecake with fresh berries and mint for dessert',\r\n    sales: 921,\r\n    stock: 31\r\n  },\r\n  {\r\n    id: 8,\r\n    title: 'Cheesecake',\r\n    img: '/assets/img/cheesecake-thumb.jpg',\r\n    category: 'Cakes',\r\n    createDate: '18.08.2018',\r\n    status: 'ON HOLD',\r\n    statusColor: 'primary',\r\n    description: 'Delicious vegan chocolate cake',\r\n    sales: 887,\r\n    stock: 21\r\n  },\r\n  {\r\n    id: 9,\r\n    title: 'Financier',\r\n    img: '/assets/img/financier-thumb.jpg',\r\n    category: 'Cakes',\r\n    createDate: '15.03.2018',\r\n    status: 'ON HOLD',\r\n    statusColor: 'primary',\r\n    description:\r\n      'White chocolate strawberry yogurt cake decorated with fresh fruits and chocolate',\r\n    sales: 865,\r\n    stock: 53\r\n  },\r\n  {\r\n    id: 10,\r\n    title: 'Genoise',\r\n    img: '/assets/img/genoise-thumb.jpg',\r\n    category: 'Cupcakes',\r\n    createDate: '11.06.2018',\r\n    status: 'PROCESSED',\r\n    statusColor: 'secondary',\r\n    description: 'Christmas fruit cake, pudding on top',\r\n    sales: 824,\r\n    stock: 55\r\n  },\r\n  {\r\n    id: 11,\r\n    title: 'Gingerbread',\r\n    img: '/assets/img/gingerbread-thumb.jpg',\r\n    category: 'Cakes',\r\n    createDate: '10.04.2018',\r\n    status: 'ON HOLD',\r\n    statusColor: 'primary',\r\n    description: 'Wedding cake decorated with donuts and wild berries',\r\n    sales: 714,\r\n    stock: 12\r\n  },\r\n  {\r\n    id: 12,\r\n    title: 'Magdalena',\r\n    img: '/assets/img/magdalena-thumb.jpg',\r\n    category: 'Cakes',\r\n    createDate: '22.07.2018',\r\n    status: 'PROCESSED',\r\n    statusColor: 'secondary',\r\n    description: 'Christmas fruit cake, pudding on top',\r\n    sales: 702,\r\n    stock: 14\r\n  },\r\n  {\r\n    id: 13,\r\n    title: 'Parkin',\r\n    img: '/assets/img/parkin-thumb.jpg',\r\n    category: 'Cakes',\r\n    createDate: '22.08.2018',\r\n    status: 'ON HOLD',\r\n    statusColor: 'primary',\r\n    description:\r\n      'White chocolate strawberry yogurt cake decorated with fresh fruits and chocolate',\r\n    sales: 689,\r\n    stock: 78\r\n  },\r\n  {\r\n    id: 14,\r\n    title: 'Streuselkuchen',\r\n    img: '/assets/img/streuselkuchen-thumb.jpg',\r\n    category: 'Cakes',\r\n    createDate: '22.07.2018',\r\n    status: 'PROCESSED',\r\n    statusColor: 'secondary',\r\n    description: 'Delicious vegan chocolate cake',\r\n    sales: 645,\r\n    stock: 55\r\n  },\r\n  {\r\n    id: 15,\r\n    title: 'Tea loaf',\r\n    img: '/assets/img/tea-loaf-thumb.jpg',\r\n    category: 'Cakes',\r\n    createDate: '10.09.2018',\r\n    status: 'ON HOLD',\r\n    statusColor: 'primary',\r\n    description: 'Cheesecake with fresh berries and mint for dessert',\r\n    sales: 632,\r\n    stock: 20\r\n  },\r\n  {\r\n    id: 16,\r\n    title: 'Merveilleux',\r\n    img: '/assets/img/merveilleux-thumb.jpg',\r\n    category: 'Cakes',\r\n    createDate: '18.02.2018',\r\n    status: 'ON HOLD',\r\n    statusColor: 'primary',\r\n    description: 'Chocolate cake with mascarpone',\r\n    sales: 621,\r\n    stock: 6\r\n  },\r\n  {\r\n    id: 17,\r\n    title: 'Fruitcake',\r\n    img: '/assets/img/fruitcake-thumb.jpg',\r\n    category: 'Cakes',\r\n    createDate: '12.01.2019',\r\n    status: 'PROCESSED',\r\n    statusColor: 'secondary',\r\n    description: 'Chocolate cake with berries',\r\n    sales: 595,\r\n    stock: 17\r\n  },\r\n  {\r\n    id: 18,\r\n    title: 'Bebinca',\r\n    img: '/assets/img/bebinca-thumb.jpg',\r\n    category: 'Cakes',\r\n    createDate: '04.02.2019',\r\n    status: 'PROCESSED',\r\n    statusColor: 'secondary',\r\n    description: 'Homemade cheesecake with fresh berries and mint',\r\n    sales: 574,\r\n    stock: 16\r\n  },\r\n  {\r\n    id: 19,\r\n    title: 'Cremeschnitte',\r\n    img: '/assets/img/cremeschnitte-thumb.jpg',\r\n    category: 'Desserts',\r\n    createDate: '04.03.2018',\r\n    status: 'ON HOLD',\r\n    statusColor: 'primary',\r\n    description: 'Cheesecake with chocolate cookies and Cream biscuits',\r\n    sales: 562,\r\n    stock: 9\r\n  },\r\n  {\r\n    id: 20,\r\n    title: 'Soufflé',\r\n    img: '/assets/img/souffle-thumb.jpg',\r\n    category: 'Cupcakes',\r\n    createDate: '16.01.2018',\r\n    status: 'ON HOLD',\r\n    statusColor: 'primary',\r\n    description: 'Wedding cake with flowers Macarons and blueberries',\r\n    sales: 524,\r\n    stock: 14\r\n  }\r\n]\r\n\r\nexport default produtcs\r\n","import React, { Component, Fragment } from \"react\";\r\nimport ListPageHeading from \"../../../containers/pages/ListPageHeading\";\r\nimport { NotificationManager } from \"../../../components/common/react-notifications\";\r\nimport {\r\n  Row,\r\n  Card,\r\n  CardBody,\r\n  TabContent,\r\n  TabPane,\r\n  Table,\r\n  Badge,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Colxx } from \"../../../components/common/CustomBootstrap\";\r\nimport IntlMessages from \"../../../helpers/IntlMessages\";\r\nimport ProductsList from \"../../../data/products\";\r\nimport moment from 'moment';\r\nimport Http from \"../../../helpers/Http\";\r\nimport ApiRoutes from \"../../../helpers/ApiRoutes\";\r\nimport jsPDF from 'jspdf';\r\nimport html2canvas from 'html2canvas';\r\nimport { servicePath } from \"../../../constants/defaultValues\";\r\n\r\nconst swalWithBootstrapButtonsStatus = Swal.mixin({\r\n  customClass: {\r\n    confirmButton: 'btn-pill mx-1 btn btn-success',\r\n    cancelButton: 'btn-pill mx-1 btn btn-neutral-secondary'\r\n  },\r\n  buttonsStyling: false\r\n})\r\n\r\nconst newstatus = [\"\", \"\", \"Returned\", \"Reject\", \"Cancelled\"]\r\nconst newstatus1 = [\"\", \"Assigned\", \"Completed\", \"Rejected\", \"Cancelled\", \"Cancelled/Rejected\"]\r\nclass OrderDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.toggleTab = this.toggleTab.bind(this);\r\n    this.state = {\r\n      activeFirstTab: \"1\",\r\n      orderId: props.match.params.itemId,\r\n      items: ProductsList,\r\n      orderData: \"\",\r\n      userData: \"\",\r\n      driverData: \"\",\r\n      warehouseData: \"\",\r\n      transitData: \"\",\r\n      packedData: \"\",\r\n      deliveredData: \"\",\r\n      categoryData: [],\r\n    };\r\n  }\r\n\r\n  toggleTab(tab) {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({\r\n        activeFirstTab: tab,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getOrderDetail();\r\n  }\r\n\r\n  getOrderDetail = async () => {\r\n    this.state.isLoading = true;\r\n\r\n    let path = ApiRoutes.GET_ORDER_DETAIL + \"/\" + this.state.orderId;\r\n\r\n    const res = await Http(\"GET\", path);\r\n\r\n    if (res && res.status == 200) {\r\n      this.setState({\r\n        categoryData: res.data.category,\r\n        orderData: res.data,\r\n        userData: res.data.userData,\r\n        driverData: res.data.driver,\r\n        warehouseData: res.data.warehouseData,\r\n        transitData: res.data.tracking_status.In_Transit,\r\n        packedData: res.data.tracking_status.Packed,\r\n        deliveredData: res.data.tracking_status.Delivered,\r\n      });\r\n    } else {\r\n      NotificationManager.error(res.message, \"Error!\", 3000);\r\n    }\r\n  };\r\n\r\n  saveAsPDF = async () => {\r\n       let path = ApiRoutes.GET_PDF;\r\n      console.log(this.state.orderData,\"orderData\")\r\n      let formData= new FormData()\r\n      formData.append(\"reqData\",JSON.stringify(this.state.orderData))\r\n      const res = await Http(\"POST\", path,formData);\r\n      if(res){\r\n        var link = document.createElement('a');\r\n        link.href = res.data.path;\r\n        link.target=\"_blank\";\r\n        link.download = \"file.pdf\";\r\n        link.dispatchEvent(new MouseEvent('click'));\r\n      }\r\n    // html2canvas(document.getElementById(\"capture\")).then(canvas => {\r\n    //   document.body.appendChild(canvas);  // if you want see your screenshot in body.\r\n    //   const imgData = canvas.toDataURL('image/png');\r\n    //   const pdf = new jsPDF(\"portrait\", \"mm\", \"a4\");\r\n    //   pdf.addImage(imgData, 'PNG', 0, 0);\r\n    //   pdf.save(\"download.pdf\");\r\n    // });\r\n    // const input = document.getElementById('capture');\r\n\r\n    // html2canvas(input)\r\n    //     .then((canvas) => {\r\n    //         const imgData = canvas.toDataURL('image/png');\r\n    //         const pdf = new jsPDF('p', 'px', 'a4');\r\n    //         var width = pdf.internal.pageSize.getWidth();\r\n    //         var height = pdf.internal.pageSize.getHeight();\r\n\r\n    //         pdf.addImage(imgData, 'JPEG', 0, 0, width, height);\r\n    //         pdf.save(\"test.pdf\");\r\n    //     });\r\n  }\r\n\r\n  // Methods for Actions\r\n  onChangeItemStatus = async (itemId, status, category_name, product_id) => {\r\n\r\n    swalWithBootstrapButtonsStatus.fire({\r\n      title: '<h5><b>Are you sure?</b></h5>',\r\n      text: \"You want change status !\",\r\n      type: \"success\",\r\n      width: 315,\r\n      heightAuto: true,\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      confirmButtonText: '<span class=\"btn-wrapper--label\">Yes</span>',\r\n      cancelButtonText: '<span class=\"btn-wrapper--label\">Cancel</span>',\r\n      reverseButtons: true,\r\n    }).then(async (result) => {\r\n      if (result.value) {\r\n\r\n        if (status == \"accept\") {\r\n          var newStatus = 2;\r\n        } else if (status == \"reject\") {\r\n          var newStatus = 3;\r\n        } else {\r\n          var newStatus = 0;\r\n        }\r\n        var orderId = this.state.orderData._id;\r\n        var userId = this.state.userData._id;\r\n        let formData = new FormData();\r\n        formData.append(\"status\", newStatus);\r\n        let path;\r\n\r\n        if (category_name == 1) {\r\n          path = ApiRoutes.UPDATE_GROCERY_ORDER_STATUS + \"/\" + orderId + \"/\" + newStatus + \"/\" + itemId + \"/\" + userId;\r\n        } else {\r\n\r\n          path = ApiRoutes.UPDATE_NORMAL_ORDER_STATUS + \"/\" + orderId + \"/\" + newStatus + \"/\" + product_id + \"/\" + userId;\r\n        }\r\n\r\n        const res = await Http(\"PUT\", path, formData);\r\n\r\n        if (res.status == 200) {\r\n\r\n          this.getOrderDetail();\r\n\r\n          NotificationManager.success(res.message, \"Success!\", 3000);\r\n        } else {\r\n          NotificationManager.error(res.message, \"Error!\", 3000);\r\n        }\r\n      }\r\n    })\r\n  };\r\n\r\n  render() {\r\n    const { match, item } = this.props;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Button onClick={this.saveAsPDF}>Save as PDF</Button>\r\n        <div className=\"disable-text-selection\" >\r\n          <ListPageHeading heading=\"menu.order-detail\" match={match} />\r\n\r\n          <h3>Order ID #{this.state.orderData.order_id} </h3>\r\n\r\n          <Row >\r\n            <Colxx xxs=\"12\" id=\"capture\">\r\n              <Row>\r\n                <Colxx xxs=\"12\" xl=\"12\" className=\"col-left\">\r\n                  <Card className=\"mb-4\">\r\n                    <TabContent activeTab={this.state.activeFirstTab}>\r\n                      <TabPane tabId=\"1\">\r\n                        <Row>\r\n                          <Colxx xxs=\"12\" sm=\"12\">\r\n                            <CardBody>\r\n                              <h5 className=\"mb-4 font-weight-bold\">\r\n                                Order Details\r\n                              </h5>\r\n                              <Row>\r\n                                <Colxx xxs=\"6\" sm=\"6\">\r\n                                  <p>Order Date : {moment(this.state.orderData.order_date).format(\"LLLL\")}</p>\r\n                                </Colxx>\r\n                                <Colxx xxs=\"6\" sm=\"6\">\r\n\r\n                                  {(this.state.orderData.order_status != 0) ? newstatus1[this.state.orderData.order_status] : 'Pending'}\r\n\r\n\r\n                                </Colxx>\r\n                              </Row>\r\n\r\n                              <Row>\r\n                                <Colxx xxs=\"6\" sm=\"6\">\r\n                                  <p>Payment Mode: {this.state.orderData.payment_mode}</p>\r\n                                </Colxx>\r\n                              </Row>\r\n                              <hr></hr>\r\n                              <h5 className=\"mb-4 font-weight-bold\">\r\n                                Warehouse Details\r\n                              </h5>\r\n                              <Row>\r\n                                <Colxx xxs=\"6\" sm=\"6\">\r\n                                  <p>Warehouse Id: {(this.state.warehouseData.length > 0) && this.state.warehouseData[0]._id}</p>\r\n                                </Colxx>\r\n                                <Colxx xxs=\"6\" sm=\"6\">\r\n                                  <p>Warehouse Name: {(this.state.warehouseData.length > 0) && this.state.warehouseData[0].name}</p>\r\n                                </Colxx>\r\n                              </Row>\r\n                              <hr />\r\n\r\n                              <h5 className=\"mb-4 font-weight-bold\">\r\n                                Customer Details\r\n                              </h5>\r\n                              <Row>\r\n                                <Colxx xxs=\"6\" sm=\"6\">\r\n                                  <p>Customer Id: {this.state.userData.register_id}</p>\r\n                                </Colxx>\r\n                                <Colxx xxs=\"6\" sm=\"6\">\r\n                                  <p>Customer Name: {(this.state.orderData && this.state.orderData.customer_name && this.state.orderData.customer_name!=\"\")?this.state.orderData.customer_name:this.state.userData.username}</p>\r\n                                </Colxx>\r\n                              </Row>\r\n\r\n                              <p>Customer Phone number: {(this.state.orderData && this.state.orderData.customer_phone && this.state.orderData.customer_phone!=\"\")?this.state.orderData.customer_phone:this.state.userData.phone}</p>\r\n                              <hr />\r\n                              <h5 className=\"mb-4 font-weight-bold\">\r\n                                Driver Details\r\n                              </h5>\r\n                              <Row>\r\n                                <Colxx xxs=\"6\" sm=\"6\">\r\n                                  <p>Driver Id: {(this.state.driverData.length > 0) && this.state.driverData[0].register_id}</p>\r\n                                </Colxx>\r\n                                <Colxx xxs=\"6\" sm=\"6\">\r\n                                  <p>Driver Name: {(this.state.driverData.length > 0) && this.state.driverData[0].username}</p>\r\n                                </Colxx>\r\n                              </Row>\r\n\r\n                              <p>Driver Phone number: {(this.state.driverData.length > 0) && this.state.driverData[0].phone}</p>\r\n                              <hr />\r\n                              <h5 className=\"font-weight-bold\">Order Status</h5>\r\n                              <Row>\r\n                                <Colxx xxs=\"6\" sm=\"6\">\r\n                                  <p>Order Picked up: {this.state.packedData && this.state.packedData.status == 0 ? \"No\" : \"Yes\"}</p>\r\n                                </Colxx>\r\n                                <Colxx xxs=\"6\" sm=\"6\">\r\n                                  <p>Picked Up Date: { this.state.packedData && this.state.packedData.time && moment(this.state.packedData.time).format(\"LLLL\")}</p>\r\n                                </Colxx>\r\n                              </Row>\r\n                              <Row>\r\n                                <Colxx xxs=\"6\" sm=\"6\">\r\n                                  <p>Order In Transit: {this.state.transitData && this.state.transitData.status == 0 ? \"No\" : \"Yes\"}</p>\r\n                                </Colxx>\r\n                                <Colxx xxs=\"6\" sm=\"6\">\r\n                                  <p>In Transit Date: {this.state.transitData && this.state.transitData.time && moment(this.state.transitData.time).format(\"LLLL\")}</p>\r\n                                </Colxx>\r\n                              </Row>\r\n                              <Row>\r\n                                <Colxx xxs=\"6\" sm=\"6\">\r\n                                  <p>Delivered: {this.state.deliveredData && this.state.deliveredData.status == 0 ? \"No\" : \"Yes\"}</p>\r\n                                </Colxx>\r\n                                <Colxx xxs=\"6\" sm=\"6\">\r\n                                  <p>Delivered Date:{this.state.deliveredData && this.state.deliveredData.time && moment(this.state.deliveredData.time).format(\"LLLL\")}</p>\r\n                                </Colxx>\r\n                              </Row>\r\n                              <Row>\r\n                                <Colxx xxs=\"6\" sm=\"6\">\r\n                                  \r\n                                </Colxx>\r\n                                <Colxx xxs=\"6\" sm=\"6\">\r\n                                  <p>Estimated Delivery Date:{this.state.orderData.expected_end_date  && moment(this.state.orderData.expected_end_date).format(\"LLLL\")}</p>\r\n                                </Colxx>\r\n                              </Row>\r\n                              <hr />\r\n                              <h4 className=\"font-weight-bold\">Item Details</h4>\r\n\r\n                              {this.state.categoryData.map((item, index) => {\r\n                                return (\r\n                                  <>\r\n                                    <Row>\r\n                                      <Colxx xxs=\"8\" sm=\"8\">\r\n                                        <p>Category Name: {item.name}</p>\r\n                                      </Colxx>\r\n\r\n                                      <Colxx xxs=\"4\" sm=\"4\">\r\n                                        {item && (item.all_return == 1 && item.products[0].order_status == 1) ? (\r\n                                          <>\r\n                                            <Button\r\n                                              outline\r\n                                              color=\"success\"\r\n                                              size=\"sm\"\r\n                                              className=\"mb-2\"\r\n                                              title=\"Accept\"\r\n                                              onClick={(e) =>\r\n                                                this.onChangeItemStatus(item._id, \"accept\", item.all_return)\r\n                                              }\r\n                                            >\r\n                                              Accept Return Request\r\n                                  </Button>{\" \"}\r\n\r\n                                            <Button\r\n                                              outline\r\n                                              color=\"danger\"\r\n                                              size=\"sm\"\r\n                                              className=\"mb-2\"\r\n                                              title=\"Reject\"\r\n                                              onClick={(e) =>\r\n                                                this.onChangeItemStatus(item._id, \"reject\", item.all_return)\r\n                                              }\r\n                                            >\r\n                                              Reject Return Request\r\n                                    </Button>\r\n                                          </>)\r\n                                          : (item && item.all_return == 1) && newstatus[item.products[0].order_status]\r\n                                          // (<Badge\r\n                                          //   color={\r\n                                          //     (item.all_return == 1)\r\n                                          //       ? \"outline-success\"\r\n                                          //       : \"outline-danger\"\r\n                                          //   }\r\n                                          //   pill\r\n                                          // >\r\n                                          //   {(item.all_return == 1) ? (\r\n                                          //     <IntlMessages id=\"label.accept\" />\r\n                                          //   ) : (\r\n                                          //       <IntlMessages id=\"label.reject\" />\r\n                                          //     )}\r\n                                          // </Badge>)\r\n                                        } {\" \"}\r\n                                        {/* <Button\r\n                                          outline\r\n                                          color=\"secondary\"\r\n                                          size=\"sm\"\r\n                                          className=\"mb-2\"\r\n                                          title=\"Return Item\"\r\n                                        >\r\n                                          <div>RETURN</div>\r\n                                        </Button> */}\r\n                                      </Colxx>\r\n\r\n                                    </Row>\r\n                                    {item && item.all_return == 1 && item.products && item.products.length>0 &&\r\n                                    <p>Reason: {item.products[0].reason}</p>\r\n                                    }\r\n                                    <Row>\r\n                                      <Colxx xxs=\"12\">\r\n                                        <Card className=\"mb-4\">\r\n                                          <CardBody>\r\n                                            <Table hover>\r\n                                              <thead>\r\n                                                <tr>\r\n                                                  <th>Item Image</th>\r\n                                                  <th>Name</th>\r\n                                                  <th>Base Price</th>\r\n                                                  <th>Discounted Price</th>\r\n                                                  <th>Quantity</th>\r\n                                                  <th>Total Cost</th>\r\n                                                \r\n                                                  {item && (item.all_return == 0) ? (\r\n                                                    <>\r\n                                                    <th>Reason</th>\r\n                                                    <th>Return Request</th>\r\n                                                    </>) : \"\"}\r\n                                                </tr>\r\n                                              </thead>\r\n                                              <tbody>\r\n                                                {item.products.map((product, index) => {\r\n                                                  return (\r\n                                                    <tr key={index}>\r\n                                                      <td>\r\n                                                        <img\r\n                                                          alt={product.name}\r\n                                                          src={\r\n                                                            product.images\r\n                                                              ? product.images[0].product_image_thumb_url\r\n                                                              : \"\"\r\n                                                          }\r\n                                                          className=\"img-thumbnail border-0 list-thumbnail align-self-center xsmall\"\r\n                                                        />{\" \"}\r\n                                                      </td>\r\n                                                      <td>{product.name}</td>\r\n\r\n                                                      <td>{product.price}</td>\r\n                                                      <td>{product.is_discount == 1 ? product.offer_price : \"\"}</td>\r\n                                                      <td>{product.quantity}</td>\r\n                                                      {product.is_discount == 1 ?\r\n                                                        (<td>{product.offer_price ? product.offer_price * product.quantity : product.price * product.quantity} </td>) : (<td>{product.price * product.quantity}</td>)\r\n                                                      }\r\n                                                      {product && item.all_return == 0 &&\r\n                                                        <td>{product.reason}</td>\r\n                                                      }\r\n                                                      < td >\r\n                                                        {product && (item.all_return == 0 && product.order_status == 1) ? (\r\n                                                          <>\r\n                                                            <Button\r\n                                                              outline\r\n                                                              color=\"success\"\r\n                                                              size=\"sm\"\r\n                                                              className=\"mb-2\"\r\n                                                              title=\"Accept\"\r\n                                                              onClick={(e) =>\r\n                                                                this.onChangeItemStatus(item._id, \"accept\", item.all_return, product._id)\r\n                                                              }\r\n                                                            >\r\n                                                              Accept\r\n                                                            </Button>{\" \"}\r\n                                                            <Button\r\n                                                              outline\r\n                                                              color=\"danger\"\r\n                                                              size=\"sm\"\r\n                                                              className=\"mb-2\"\r\n                                                              title=\"Reject\"\r\n                                                              onClick={(e) =>\r\n                                                                this.onChangeItemStatus(item._id, \"reject\", item.all_return, product._id)\r\n                                                              }\r\n                                                            >\r\n                                                              Reject\r\n                                                            </Button>\r\n                                                          </>)\r\n                                                          : (item && item.all_return == 0) && newstatus[product.order_status]\r\n\r\n                                                        }\r\n                                                        {/* {product && (product.order_status == 4) ?\r\n                                                          (<Badge\r\n                                                            color=\"outline-danger\"\r\n                                                            pill\r\n                                                          >\r\n                                                            <IntlMessages id=\"label.cancle\" />\r\n                                                          </Badge>) : \"\"} */}\r\n                                                      </td>\r\n                                                    </tr>\r\n                                                  );\r\n                                                })}\r\n                                              </tbody>\r\n                                            </Table>\r\n                                          </CardBody>\r\n                                        </Card>\r\n                                      </Colxx>\r\n                                    </Row>\r\n                                  </>\r\n                                );\r\n                              })}\r\n\r\n                              <Table\r\n                                borderless\r\n                                className=\"d-flex justify-content-end\"\r\n                              >\r\n                                <tbody>\r\n                                  <tr>\r\n                                    <td className=\"font-weight-bold\">\r\n                                      Delivery Fees :\r\n                                    </td>\r\n                                    <td className=\"text-right\">Rs {this.state.orderData && this.state.orderData.delivery_fee}</td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"font-weight-bold\">\r\n                                      Vat amount :\r\n                                    </td>\r\n                                    <td className=\"text-right\">Rs {this.state.orderData && this.state.orderData.vat_amount}</td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"font-weight-bold\">\r\n                                      Promo code & Discount :\r\n                                    </td>\r\n                                    <td className=\"text-right\">Rs {this.state.orderData && this.state.orderData.discount}</td>\r\n                                  </tr>\r\n                                  <tr>\r\n                                    <td className=\"font-weight-bold\">\r\n                                      Subtotal :\r\n                                    </td>\r\n                                    <td className=\"text-right\">Rs {this.state.orderData && this.state.orderData.net_amount}</td>\r\n                                  </tr>\r\n                                  {/* <tr>\r\n                                    <td className=\"font-weight-bold\">\r\n                                      Availed Promo Code :\r\n                                      </td>\r\n                                    <td className=\"text-right\"></td>\r\n                                  </tr> */}\r\n\r\n                                  <tr>\r\n                                    <td className=\"font-weight-bold\">\r\n                                      Total Pay :\r\n                                    </td>\r\n                                    <td className=\"text-right\">Rs {this.state.orderData && this.state.orderData.net_amount}</td>\r\n                                  </tr>\r\n                                </tbody>\r\n                              </Table>\r\n                            </CardBody>\r\n                          </Colxx>\r\n                        </Row>\r\n                      </TabPane>\r\n                      <TabPane tabId=\"2\">\r\n                        <Row>\r\n                          <Colxx sm=\"12\">\r\n                            <CardBody>\r\n                              <InputGroup className=\"comment-contaiener\">\r\n                                <InputGroupAddon addonType=\"append\">\r\n                                  <Button color=\"primary\">\r\n                                    <span className=\"d-inline-block\"></span>{\" \"}\r\n                                    <i className=\"simple-icon-arrow-right ml-2\"></i>\r\n                                  </Button>\r\n                                </InputGroupAddon>\r\n                              </InputGroup>\r\n                            </CardBody>\r\n                          </Colxx>\r\n                        </Row>\r\n                      </TabPane>\r\n                      <TabPane tabId=\"3\">\r\n                        <Row>\r\n                          <Colxx sm=\"12\">\r\n                            <CardBody></CardBody>\r\n                          </Colxx>\r\n                        </Row>\r\n                      </TabPane>\r\n                    </TabContent>\r\n                  </Card>\r\n                </Colxx>\r\n              </Row>\r\n            </Colxx>\r\n          </Row>\r\n        </div>\r\n      </Fragment >\r\n    );\r\n  }\r\n}\r\nexport default OrderDetails;\r\n","import React from 'react';\r\nimport { Col } from 'reactstrap';\r\nconst Colxx = (props) => (\r\n    <Col {...props} widths={['xxs', 'xs', 'sm', 'md', 'lg', 'xl', 'xxl']} />\r\n);\r\nconst Separator = (props) => (\r\n    <div className={`separator ${props.className}`}></div>\r\n);\r\nexport { Colxx,Separator }","import React, { Fragment } from \"react\";\r\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\n\r\nconst getMenuTitle = sub => {\r\n  return <IntlMessages id={`menu.${sub}`} />;\r\n};\r\n\r\nconst getUrl = (path, sub, index) => {\r\n  if (index === 0) {\r\n    return \"\";\r\n  } else {\r\n    return path.split(sub)[0] + sub;\r\n  }\r\n};\r\n\r\nconst BreadcrumbContainer = ({ heading, match }) => {\r\n  return (\r\n    <Fragment>\r\n      {heading && <h1><IntlMessages id={heading} /></h1>}\r\n      <BreadcrumbItems match={match} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport const BreadcrumbItems = ({ match }) => {\r\n  const path = match.path.substr(1);\r\n  let paths = path.split(\"/\");\r\n  if (paths[paths.length - 1].indexOf(\":\") > -1) {\r\n    paths = paths.filter(x => x.indexOf(\":\") === -1);\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\r\n        {paths.map((sub, index) => {\r\n          return (\r\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\r\n              {paths.length !== index + 1 ? (\r\n                <NavLink to={\"/\" + getUrl(path, sub, index)}>\r\n                  {getMenuTitle(sub)}\r\n                </NavLink>\r\n              ) : (\r\n                  getMenuTitle(sub)\r\n                )}\r\n            </BreadcrumbItem>\r\n          );\r\n        })}\r\n      </Breadcrumb>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default BreadcrumbContainer;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Row,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Collapse,\r\n  Tooltip,\r\n  Popover,\r\n  PopoverBody\r\n} from \"reactstrap\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Colxx, Separator } from \"../../components/common/CustomBootstrap\";\r\nimport Breadcrumb from \"../navs/Breadcrumb\";\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\n\r\nvar statusOptions = [\r\n  { column: \"\", label: \"All\" },\r\n  { column: \"1\", label: \"Active\" },\r\n  { column: \"0\", label: \"Inactive\" },\r\n];\r\nvar daysOptions = [\r\n  { value: \"\", label: \"Select\" },\r\n  { value: \"1\", label: \"Last 30 Days\" },\r\n  { value: \"2\", label: \"Last 60 Days\" },\r\n  { value: \"3\", label: \"Last 90 Days\" },\r\n];\r\nvar amountOptions = [\r\n  { value: \"\", label: \"Select\" },\r\n  { value: \"20\", label: \"20 K\" },\r\n  { value: \"40\", label: \"40 K\" },\r\n];\r\nvar orderStatus = [\r\n  { value: \"\", label: \"Select\" },\r\n  { value: \"\", label: \"All\" },\r\n  { value: \"2\", label: \"Passed\" },\r\n  { value: \"1\", label: \"Current\" },\r\n];\r\n\r\nclass ListPageHeading extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      popoverOpen: false,\r\n      dropdownSplitOpen: false,\r\n      displayOptionsIsOpen: false,\r\n      selectedStatusOption: statusOptions[0],\r\n      selectedDaysOption: daysOptions[0],\r\n      selectedAmountOption: amountOptions[0],\r\n      selectedOrderStatus: orderStatus[0],\r\n    };\r\n  }\r\n\r\n  togglePopover = () => {\r\n    this.setState(prevState => ({\r\n      popoverOpen: !prevState.popoverOpen\r\n    }));\r\n  };\r\n\r\n  showPopover = () => {\r\n    this.setState(prevState => ({ popoverOpen: true }));\r\n  };\r\n\r\n  hidePopover = () => {\r\n    this.setState(prevState => ({ popoverOpen: false }));\r\n  };\r\n\r\n  toggleDisplayOptions = () => {\r\n    this.setState((prevState) => ({\r\n      displayOptionsIsOpen: !prevState.displayOptionsIsOpen,\r\n    }));\r\n  };\r\n\r\n  toggleSplit = () => {\r\n    this.setState((prevState) => ({\r\n      dropdownSplitOpen: !prevState.dropdownSplitOpen,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { messages } = this.props.intl;\r\n    const {\r\n      heading,\r\n      match,\r\n      addNewItemRoute,\r\n      displayOpts,\r\n      orderOptions,\r\n      pageSizes,\r\n      selectedPageSize,\r\n      selectedOrderOption,\r\n      searchKeyword,\r\n      searchPlaceholder,\r\n      filterFromDate,\r\n      filterToDate,\r\n      filterStatus,\r\n      onSearchKey,\r\n      onChangeFromDate,\r\n      onChangeToDate,\r\n      changeOrderBy,\r\n      changeStatus,\r\n      changeDaysStatus,\r\n      changeAmountStatus,\r\n      changeOrderStatus,\r\n      changePageSize,\r\n      onResetFilters,\r\n      onSearchFilters,\r\n      totalItemCount,\r\n      startIndex,\r\n      endIndex,\r\n      daysStatus,\r\n      amountStatus\r\n    } = this.props;\r\n\r\n    const { displayOptionsIsOpen } = this.state;\r\n    return (\r\n      <Row>\r\n        <Colxx xxs=\"12\">\r\n          <div className=\"mb-2\">\r\n            <h1>\r\n              <IntlMessages id={heading} />\r\n            </h1>\r\n\r\n            {displayOpts && displayOpts.addNewBtn && (\r\n              <div className=\"text-zero top-right-button-container\">\r\n                <NavLink to={addNewItemRoute}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    size=\"lg\"\r\n                    className=\"top-right-button\"\r\n                  >\r\n                    <IntlMessages id=\"pages.add-new\" />\r\n                  </Button>\r\n                </NavLink>\r\n              </div>\r\n            )}\r\n\r\n            <Breadcrumb match={match} />\r\n          </div>\r\n\r\n          {displayOpts &&\r\n            (displayOpts.addNewBtn ||\r\n              displayOpts.orderOptions ||\r\n              displayOpts.pageSizes ||\r\n              displayOpts.keyword ||\r\n              displayOpts.fromDate ||\r\n              displayOpts.toDate) && (\r\n              <div className=\"mb-2\">\r\n                <Collapse\r\n                  isOpen={displayOptionsIsOpen}\r\n                  className=\"d-md-block\"\r\n                  id=\"displayOptions\"\r\n                >\r\n                  <div className=\"d-block d-md-inline-block pt-1\">\r\n                    {displayOpts && displayOpts.orderOptions && (\r\n                      <UncontrolledDropdown className=\"mr-1 float-md-left btn-group mb-1\">\r\n                        <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\r\n                          <IntlMessages id=\"pages.orderby\" />\r\n                          {selectedOrderOption.label}\r\n                        </DropdownToggle>\r\n                        <DropdownMenu>\r\n                          {orderOptions.map((order, index) => {\r\n                            return (\r\n                              <DropdownItem\r\n                                key={index}\r\n                                onClick={() => changeOrderBy(order.column)}\r\n                              >\r\n                                {order.label}\r\n                              </DropdownItem>\r\n                            );\r\n                          })}\r\n                        </DropdownMenu>\r\n                      </UncontrolledDropdown>\r\n                    )}\r\n\r\n                    {displayOpts && displayOpts.keyword && (\r\n                      <div className=\"search-sm d-inline-block float-md-left mr-1 mb-1 align-top\">\r\n                        <input\r\n                          type=\"text\"\r\n                          name=\"keyword\"\r\n                          id=\"search\"\r\n                          value={searchKeyword}\r\n                          placeholder=\"Type and enter...\"\r\n                          onChange={(e) => {\r\n                            onSearchKey(e)\r\n                            this.hidePopover()\r\n                          }}\r\n                          onKeyPress={(e) => onSearchKey(e)}\r\n                          onFocus={this.showPopover}\r\n                          onBlur={this.hidePopover}\r\n                        />\r\n                        {displayOpts &&\r\n                      (displayOpts.keyword ||\r\n                        displayOpts.daysOptions ||\r\n                        displayOpts.orderStatus ||\r\n                        displayOpts.amountOptions ||\r\n                        displayOpts.fromDate ||\r\n                        displayOpts.toDate) && (\r\n                        <Button\r\n                          outline\r\n                          color=\"danger\"\r\n                          className=\"mb-2 btn-xs search_btn\"\r\n                          onClick={() => {\r\n                            onSearchFilters()\r\n                          }}\r\n                        >\r\n                        </Button>\r\n                      )}\r\n                       {' '}\r\n                        <Popover\r\n                          className=\"search-popover\"\r\n                          placement=\"top\"\r\n                          isOpen={this.state.popoverOpen}\r\n                          target={\"search\"}\r\n                        >\r\n                          \r\n                          <PopoverBody>{searchPlaceholder}</PopoverBody>\r\n                        </Popover>\r\n                      </div>\r\n                    )}\r\n\r\n                    {displayOpts && displayOpts.fromDate && (\r\n                      <div className=\"filter-date-sm d-inline-block float-md-left mr-1 mb-1 align-top\">\r\n                        <input\r\n                          type=\"date\"\r\n                          name=\"fromdate\"\r\n                          id=\"fromdate\"\r\n                          value={filterFromDate}\r\n                          placeholder=\"dd/mm/yyyy\"\r\n                          onChange={(e) => onChangeFromDate(e)}\r\n                        />\r\n                      </div>\r\n                    )}\r\n\r\n                    {displayOpts && displayOpts.toDate && (\r\n                      <div className=\"filter-date-sm d-inline-block float-md-left mr-1 mb-1 align-top\">\r\n                        <input\r\n                          type=\"date\"\r\n                          name=\"todate\"\r\n                          id=\"todate\"\r\n                          value={filterToDate}\r\n                          placeholder=\"dd/mm/yyyy\"\r\n                          onChange={(e) => onChangeToDate(e)}\r\n                        />\r\n                      </div>\r\n                    )}\r\n\r\n\r\n                    {displayOpts && displayOpts.daysOptions && (\r\n                      <UncontrolledDropdown className=\"mr-1 float-md-left btn-group mb-1\">\r\n                        <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\r\n                          <IntlMessages id=\"pages.status\" />\r\n                          {this.state.selectedDaysOption.label}\r\n                        </DropdownToggle>\r\n                        <DropdownMenu>\r\n                          {daysOptions.map((status, index) => {\r\n                            return (\r\n                              <DropdownItem\r\n                                key={index}\r\n                                onClick={() => {\r\n                                  this.setState({ selectedDaysOption: daysOptions[index] });\r\n                                  changeDaysStatus(status.value)\r\n                                }}\r\n                              >\r\n                                {status.label}\r\n                              </DropdownItem>\r\n                            );\r\n                          })}\r\n                        </DropdownMenu>\r\n                      </UncontrolledDropdown>\r\n                    )}\r\n                    {displayOpts && displayOpts.amountOptions && (\r\n                      <UncontrolledDropdown className=\"mr-1 float-md-left btn-group mb-1\">\r\n                        <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\r\n                          <IntlMessages id=\"pages.status\" />\r\n                          {this.state.selectedAmountOption.label}\r\n                        </DropdownToggle>\r\n                        <DropdownMenu>\r\n                          {amountOptions.map((status, index) => {\r\n                            return (\r\n                              <DropdownItem\r\n                                key={index}\r\n                                onClick={() => {\r\n                                  this.setState({ selectedAmountOption: amountOptions[index] });\r\n                                  changeAmountStatus(status.value)\r\n                                }}\r\n                              >\r\n                                {status.label}\r\n                              </DropdownItem>\r\n                            );\r\n                          })}\r\n                        </DropdownMenu>\r\n                      </UncontrolledDropdown>\r\n                    )}\r\n\r\n                    {displayOpts && displayOpts.orderStatus && (\r\n                      <UncontrolledDropdown className=\"mr-1 float-md-left btn-group mb-1\">\r\n                        <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\r\n                          <IntlMessages id=\"pages.status\" />\r\n                          {this.state.selectedOrderStatus.label}\r\n                        </DropdownToggle>\r\n                        <DropdownMenu>\r\n                          {orderStatus.map((status, index) => {\r\n                            return (\r\n                              <DropdownItem\r\n                                key={index}\r\n                                onClick={() => {\r\n                                  this.setState({ selectedOrderStatus: orderStatus[index] });\r\n                                  changeOrderStatus(status.value)\r\n                                }}\r\n                              >\r\n                                {status.label}\r\n                              </DropdownItem>\r\n                            );\r\n                          })}\r\n                        </DropdownMenu>\r\n                      </UncontrolledDropdown>\r\n                    )}\r\n\r\n                    {displayOpts && displayOpts.statusOptions && (\r\n                      <UncontrolledDropdown className=\"mr-1 float-md-left btn-group mb-1\">\r\n                        <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\r\n                          <IntlMessages id=\"pages.status\" />\r\n                          {this.state.selectedStatusOption.label}\r\n                        </DropdownToggle>\r\n                        <DropdownMenu>\r\n                          {statusOptions.map((status, index) => {\r\n                            return (\r\n                              <DropdownItem\r\n                                key={index}\r\n                                onClick={() => {\r\n                                  this.setState({ selectedStatusOption: statusOptions[index] });\r\n                                  changeStatus(status.column)\r\n                                }}\r\n                              >\r\n                                {status.label}\r\n                              </DropdownItem>\r\n                            );\r\n                          })}\r\n                        </DropdownMenu>\r\n                      </UncontrolledDropdown>\r\n                    )}\r\n                   \r\n                    \r\n\r\n                    {displayOpts &&\r\n                      (displayOpts.keyword ||\r\n                        displayOpts.daysOptions ||\r\n                        displayOpts.orderStatus ||\r\n                        displayOpts.amountOptions ||\r\n                        displayOpts.fromDate ||\r\n                        displayOpts.toDate) && (\r\n                        <Button\r\n                          outline\r\n                          color=\"danger\"\r\n                          className=\"mb-2 btn-xs\"\r\n                          onClick={() => {\r\n                            this.setState({ selectedOrderStatus: orderStatus[0] });\r\n                            this.setState({ selectedStatusOption: statusOptions[0] });\r\n                            onResetFilters()\r\n                          }}\r\n                        >\r\n                          <IntlMessages id=\"button.reset\" />\r\n                        </Button>\r\n                      )}\r\n                  </div>\r\n\r\n                  {displayOpts && displayOpts.pageSizes && (\r\n                    <div className=\"float-md-right pt-1\">\r\n                      <span className=\"text-muted text-small mr-1\">\r\n                        {`${startIndex}-${endIndex} of ${totalItemCount} `}\r\n                      </span>\r\n                      <UncontrolledDropdown className=\"d-inline-block\">\r\n                        <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\r\n                          {selectedPageSize}\r\n                        </DropdownToggle>\r\n                        <DropdownMenu right>\r\n                          {pageSizes.map((size, index) => {\r\n                            return (\r\n                              <DropdownItem\r\n                                key={index}\r\n                                onClick={() => changePageSize(size)}\r\n                              >\r\n                                {size}\r\n                              </DropdownItem>\r\n                            );\r\n                          })}\r\n                        </DropdownMenu>\r\n                      </UncontrolledDropdown>\r\n                    </div>\r\n                  )}\r\n                </Collapse>\r\n              </div>\r\n            )}\r\n          <Separator className=\"mb-5\" />\r\n        </Colxx>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default injectIntl(ListPageHeading);\r\n"],"sourceRoot":""}