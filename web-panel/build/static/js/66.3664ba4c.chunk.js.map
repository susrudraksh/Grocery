{"version":3,"sources":["views/app/offers/add.js","components/common/CustomBootstrap.js","containers/navs/Breadcrumb.js","containers/form-validations/FormikFields.js"],"names":["FormSchema","Yup","shape","offer_type","required","title","min","max","description","coupon_code","startDate","nullable","endDate","options","AddOffer","props","getBusinessCategories","a","state","isLoading","path","ApiRoutes","GET_BUSSINESS_CATEGORIES","Http","res","status","setState","businessCatList","data","docs","NotificationManager","error","message","getPerentCategories","business_category","formData","FormData","append","GET_CATEGORIES_BY_BUSINESS","parentCatList","_id","name","getSubCategories","product_category","subCatList","GET_SUBCATEGORIES","getProducts","product_subcategory","setFieldValue","productList","id","GET_BANNER_PRODUCTS","map","item","index","push","inventory_name","handleSubmit","inputValues","product_inv_id","productData","Array","value","JSON","stringify","moment","format","offer_amount_type","offer_price","offer_amount","offer_product","offer_quantity","card_type","bank_type","image","CREATE_OFFER","success","history","handleChangeStartDate","date","handleChangeEndDate","offer_max_amount","quantity","undefined","bind","this","intl","messages","xxs","heading","match","className","sm","initialValues","validationSchema","onSubmit","setFieldTouched","values","handleChange","errors","touched","isSubmitting","onChange","event","target","type","key","isMulti","onBlur","currentTarget","files","color","Component","injectIntl","Colxx","widths","Separator","getMenuTitle","sub","getUrl","split","BreadcrumbItems","substr","paths","length","indexOf","filter","x","active","to","BreadcrumbContainer","FormikReactSelect","handleBlur","classNamePrefix","React","FormikCustomRadioGroup","val","inline","Fragment","child","label","checked","disabled","FormikDatePicker","selected"],"mappings":"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","file":"static/js/66.3664ba4c.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { Row, Card, CardBody, FormGroup, Label, Button } from \"reactstrap\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport moment from 'moment';\r\nimport { Colxx, Separator } from \"../../../components/common/CustomBootstrap\";\r\nimport { NotificationManager } from \"../../../components/common/react-notifications\";\r\nimport Breadcrumb from \"../../../containers/navs/Breadcrumb\";\r\nimport IntlMessages from \"../../../helpers/IntlMessages\";\r\nimport Http from \"../../../helpers/Http\";\r\nimport ApiRoutes from \"../../../helpers/ApiRoutes\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { FormikDatePicker, FormikReactSelect } from \"../../../containers/form-validations/FormikFields\";\r\n\r\nconst SUPPORTED_FORMATS = [\"image/jpg\", \"image/jpeg\", \"image/gif\", \"image/png\"];\r\n\r\nvar digitRegExp = /^\\d+(?:[.]\\d+)*$/;\r\n\r\nconst FormSchema = Yup.object().shape({\r\n  offer_type: Yup.string().required(\"Please select offer type\"),\r\n  title: Yup.string()\r\n    .required(\"Please enter title\")\r\n    .min(2, \"Too Short! Atleast 2 letters.\")\r\n    .max(30, \"Too Long! Atmost 30 letters.\"),\r\n  description: Yup.string()\r\n    .required(\"Please enter title\")\r\n    .min(2, \"Too Short! Atleast 2 letters.\")\r\n    .max(200, \"Too Long! Atmost 200 letters.\"),\r\n  coupon_code: Yup.string()\r\n    .min(2, \"Too Short! Atleast 2 letters.\")\r\n    .max(10, \"Too Long! Atmost 10 letters.\"),\r\n  // offer_price: Yup.string()\r\n  //    .required(\"Please enter price\")\r\n  //   .matches(digitRegExp, \"Invalid offer price\")\r\n  //   .max(5, \"Too Long! Atmost 5 Digit.\"),\r\n  // offer_amount: Yup.string()\r\n  //   //.required(\"Please enter offer amount\")\r\n  //   .matches(digitRegExp, \"Invalid offer amount\")\r\n  //   .max(5, \"Too Long! Atmost 5 Digit.\"),\r\n  startDate: Yup.date()\r\n    .nullable()\r\n    .required(\"Start date is required\"),\r\n  endDate: Yup.date()\r\n    .nullable()\r\n    .required(\"End date is required\"),\r\n  // quantity: Yup.string()\r\n  //   .required(\"Please enter quantity\")\r\n  //   .matches(digitRegExp, \"Invalid quantity\")\r\n  //   .max(5, \"Too Long! Atmost 5 Digit.\"),\r\n  // offer_quantity: Yup.string()\r\n  //   .required(\"Please enter offer quantity\")\r\n  //   .matches(digitRegExp, \"Invalid offer quantity\")\r\n  //   .max(5, \"Too Long! Atmost 5 Digit.\"),\r\n});\r\nvar options = [];\r\nclass AddOffer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      offer_type: \"\",\r\n      coupon_code: \"\",\r\n      title: \"\",\r\n      description: \"\",\r\n      business_category: \"\",\r\n      product_category: \"\",\r\n      product_subcategory: \"\",\r\n      product_inv_id: [],\r\n      options: [],\r\n      card_type: \"\",\r\n      bank_type: \"\",\r\n      startDate: null,\r\n      endDate: null,\r\n      offer_amount_type: \"\",\r\n      offer_price: \"\",\r\n      offer_amount: \"\",\r\n      offer_max_amount: \"\",\r\n      offer_product: \"\",\r\n      quantity: \"\",\r\n      offer_quantity: \"\",\r\n\r\n      image: undefined,\r\n\r\n      businessCatList: [{ _id: \"\", name: \"Select\" }],\r\n      parentCatList: [{ _id: \"\", name: \"Select\" }],\r\n      subCatList: [{ _id: \"\", name: \"Select\" }],\r\n      productList: [{ id: \"\", name: \"Select\" }],\r\n    };\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getBusinessCategories();\r\n  }\r\n\r\n  getBusinessCategories = async () => {\r\n    this.state.isLoading = true;\r\n\r\n    let path = ApiRoutes.GET_BUSSINESS_CATEGORIES + \"?page_no=1&limit=100\";\r\n    const res = await Http(\"GET\", path);\r\n\r\n    if (res.status == 200) {\r\n      this.setState({\r\n        businessCatList: [...this.state.businessCatList, ...res.data.docs],\r\n      });\r\n    } else {\r\n      NotificationManager.error(res.message, \"Error!\", 3000);\r\n    }\r\n  };\r\n\r\n  getPerentCategories = async (business_category) => {\r\n    let formData = new FormData();\r\n    formData.append(\"business_category_id\", business_category);\r\n\r\n    let path = ApiRoutes.GET_CATEGORIES_BY_BUSINESS;\r\n    const res = await Http(\"POST\", path, formData);\r\n\r\n    if (res.status == 200) {\r\n      var parentCatList = [{ _id: \"\", name: \"Select\" }];\r\n      this.setState({\r\n        parentCatList: [...parentCatList, ...res.data.docs],\r\n      });\r\n    } else {\r\n      NotificationManager.error(res.message, \"Error!\", 3000);\r\n    }\r\n  };\r\n\r\n  getSubCategories = async (business_category, product_category) => {\r\n    this.state.isLoading = true;\r\n    var subCatList = [{ _id: \"\", name: \"Select\" }];\r\n\r\n    if (product_category) {\r\n      let formData = new FormData();\r\n      formData.append(\"business_category_id\", business_category);\r\n      formData.append(\"category_id\", product_category);\r\n\r\n      let path = ApiRoutes.GET_SUBCATEGORIES;\r\n      const res = await Http(\"POST\", path, formData);\r\n\r\n      if (res.status == 200) {\r\n        this.setState({\r\n          subCatList: [...subCatList, ...res.data.docs],\r\n        });\r\n      } else {\r\n        NotificationManager.error(res.message, \"Error!\", 3000);\r\n      }\r\n    } else {\r\n      this.setState({\r\n        subCatList: subCatList,\r\n      });\r\n    }\r\n  };\r\n\r\n  getProducts = async (\r\n    business_category,\r\n    product_category,\r\n    product_subcategory,\r\n    setFieldValue\r\n  ) => {\r\n    this.state.isLoading = true;\r\n    var productList = [{ id: \"\", name: \"Select\" }];\r\n\r\n    if (product_subcategory) {\r\n      let formData = new FormData();\r\n      formData.append(\"business_category_id\", business_category);\r\n      formData.append(\"category_id\", product_category);\r\n      formData.append(\"sub_category_id\", product_subcategory);\r\n\r\n      let path = ApiRoutes.GET_BANNER_PRODUCTS;\r\n      const res = await Http(\"POST\", path, formData);\r\n\r\n      if (res.status == 200) {\r\n        this.setState({\r\n          productList: [...productList, ...res.data],\r\n        });\r\n        res.data.map((item, index) => {\r\n          options.push({ \"value\": item.id, \"label\": item.inventory_name })\r\n        })\r\n        this.setState({\r\n          options: options,\r\n        });\r\n        setFieldValue('options',options)\r\n      } else {\r\n        NotificationManager.error(res.message, \"Error!\", 3000);\r\n      }\r\n    } else {\r\n      this.setState({\r\n        productList: productList,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleSubmit = async (inputValues) => {\r\n\r\n    \r\n    var error = \"\";\r\n    let formData = new FormData();\r\n\r\n    if (inputValues.offer_type == 2 || inputValues.offer_type == 3 || inputValues.offer_type == 4) {\r\n      if (inputValues.business_category == \"\") {\r\n        error = \"Please select Business category.\";\r\n        NotificationManager.error(error, \"Error!\", 3000);\r\n        return false;\r\n      }\r\n      if (inputValues.product_category == \"\") {\r\n        error = \"Please select product category.\";\r\n        NotificationManager.error(error, \"Error!\", 3000);\r\n        return false;\r\n      }\r\n      if (inputValues.product_subcategory == \"\") {\r\n        error = \"Please select product sub category.\";\r\n        NotificationManager.error(error, \"Error!\", 3000);\r\n        return false;\r\n      }\r\n      if (inputValues.product_inv_id == \"\") {\r\n        error = \"Please select product.\";\r\n        NotificationManager.error(error, \"Error!\", 3000);\r\n        return false;\r\n      }\r\n    }\r\n\r\n    if (inputValues.offer_type != \"1\") {\r\n\r\n      if (inputValues.offer_type == \"2\") {\r\n        var productData = new Array();\r\n        inputValues.product_inv_id.map((data, index) => {\r\n          productData.push(data.value);\r\n        });\r\n      } else {\r\n        var productData = new Array();\r\n        productData.push(inputValues.product_inv_id.value);\r\n      }\r\n    }\r\n\r\n    formData.append(\"offer_type\", inputValues.offer_type);\r\n    formData.append(\"coupon_code\", inputValues.coupon_code);\r\n\r\n    formData.append(\"business_category_id\", inputValues.business_category != \"\" ? inputValues.business_category : \"\");\r\n    formData.append(\"category_id\", inputValues.product_category != \"\" ? inputValues.product_category : \"\");\r\n    formData.append(\"sub_category_id\", inputValues.product_subcategory != \"\" ? inputValues.product_subcategory : \"\");\r\n    formData.append(\"product_id\", inputValues.product_inv_id != \"\" ? JSON.stringify(productData) : \"\");\r\n\r\n    formData.append(\"title\", inputValues.title);\r\n    formData.append(\"description\", inputValues.description);\r\n\r\n    formData.append(\"startDate\", moment(inputValues.startDate).format(\"YYYY-MM-DD\"));\r\n    formData.append(\"endDate\", moment(inputValues.endDate).format(\"YYYY-MM-DD\"));\r\n\r\n    formData.append(\"offer_amount_type\", inputValues.offer_amount_type != \"\" ? inputValues.offer_amount_type : \"\");\r\n    formData.append(\"offer_price\", inputValues.offer_price != \"\" ? inputValues.offer_price : \"\");\r\n    formData.append(\"offer_amount\", inputValues.offer_amount != \"\" ? inputValues.offer_amount : \"\");\r\n\r\n    formData.append(\"offer_product\", inputValues.offer_product);\r\n    formData.append(\"offer_quantity\", inputValues.offer_quantity);\r\n\r\n    formData.append(\"card_type\", inputValues.card_type);\r\n    formData.append(\"bank_type\", inputValues.bank_type);\r\n\r\n    formData.append(\"image_path\", inputValues.image);\r\n\r\n    let path = ApiRoutes.CREATE_OFFER;\r\n    const res = await Http(\"POST\", path, formData);\r\n\r\n    if (res.status == 200) {\r\n      NotificationManager.success(res.message, \"Success!\", 3000);\r\n      this.props.history.push(\"/app/offers\");\r\n    } else {\r\n      NotificationManager.error(res.message, \"Error!\", 3000);\r\n    }\r\n  };\r\n\r\n  handleChangeStartDate = date => {\r\n    this.setState({\r\n      startDate: date\r\n    });\r\n  };\r\n  handleChangeEndDate = date => {\r\n    this.setState({\r\n      endDate: date\r\n    });\r\n  };\r\n\r\n  render() {\r\n\r\n    const { messages } = this.props.intl;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Row>\r\n          <Colxx xxs=\"12\">\r\n            <Breadcrumb heading=\"heading.add-offer\" match={this.props.match} />\r\n            <Separator className=\"mb-5\" />\r\n          </Colxx>\r\n        </Row>\r\n        <Row>\r\n          <Colxx xxs=\"12\" sm=\"12\">\r\n            <Card>\r\n              <CardBody>\r\n                <Formik\r\n                  initialValues={{\r\n                    business_category: this.state.business_category,\r\n                    product_category: this.state.product_category,\r\n                    product_subcategory: this.state.product_subcategory,\r\n                    product_inv_id: this.state.product_inv_id,\r\n                    options: this.state.options,\r\n\r\n                    card_type: this.state.card_type,\r\n                    bank_type: this.state.bank_type,\r\n                    // offer_max_amount: this.stata.offer_max_amount,\r\n                    offer_product: this.state.offer_product,\r\n                    offer_quantity: this.state.offer_quantity,\r\n\r\n\r\n                    offer_type: this.state.offer_type,\r\n                    coupon_code: this.state.coupon_code,\r\n                    title: this.state.title,\r\n                    description: this.state.description,\r\n                    offer_amount_type: this.state.offer_amount_type,\r\n                    offer_price: this.state.offer_price,\r\n                    offer_amount: this.state.offer_amount,\r\n                    startDate: this.state.startDate,\r\n                    endDate: this.state.endDate,\r\n                    image: this.state.image,\r\n                  }}\r\n                  validationSchema={FormSchema}\r\n                  onSubmit={this.handleSubmit}\r\n                >\r\n                  {({\r\n                    handleSubmit,\r\n                    setFieldValue,\r\n                    setFieldTouched,\r\n                    handleChange,\r\n                    handleChangeStartDate,\r\n                    handleChangeEndDate,\r\n                    values,\r\n                    errors,\r\n                    touched,\r\n                    isSubmitting,\r\n                  }) => (\r\n                    <Form className=\"av-tooltip tooltip-label-bottom\">\r\n                      <Row>\r\n                        <Colxx xxs=\"12\" sm=\"6\">\r\n                          <FormGroup className=\"form-group has-float-label\">\r\n                            <Label>Offer Type</Label>\r\n                            <select\r\n                              name=\"offer_type\"\r\n                              className=\"form-control\"\r\n                              value={values.offer_type}\r\n                              onChange={(event) => {\r\n                                setFieldValue(\r\n                                  \"offer_type\",\r\n                                  event.target.value\r\n                                );\r\n                                this.setState({ offer_type: event.target.value });\r\n                              }}\r\n                            >\r\n                              <option value=\"\">Select</option>,\r\n                                  <option value=\"1\">Promocode Offer</option>,\r\n                                  <option value=\"2\">Bundle Offer</option>,\r\n                                  <option value=\"3\">Promotional Offer</option>,\r\n                                  <option value=\"4\">Bank Offer</option>\r\n\r\n                            </select>\r\n                            {errors.offer_type &&\r\n                              touched.offer_type ? (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.offer_type}\r\n                                </div>\r\n                              ) : null}\r\n                          </FormGroup>\r\n                        </Colxx>\r\n                        {this.state.offer_type != 4 ?\r\n                          (<Colxx xxs=\"12\" sm=\"6\">\r\n                            <FormGroup className=\"form-group has-float-label\">\r\n                              <Label>Coupon Code</Label>\r\n                              <Field\r\n                                className=\"form-control\"\r\n                                name=\"coupon_code\"\r\n                                type=\"text\"\r\n                              />\r\n                              {errors.coupon_code && touched.coupon_code ? (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.coupon_code}\r\n                                </div>\r\n                              ) : null}\r\n                            </FormGroup>\r\n                          </Colxx>) : null}\r\n                      </Row>\r\n\r\n\r\n                      <Row>\r\n                        <Colxx xxs=\"12\" sm=\"6\">\r\n                          <FormGroup className=\"form-group has-float-label\">\r\n                            <Label>Title</Label>\r\n                            <Field\r\n                              className=\"form-control\"\r\n                              name=\"title\"\r\n                              type=\"text\"\r\n                            />\r\n                            {errors.title && touched.title ? (\r\n                              <div className=\"invalid-feedback d-block\">\r\n                                {errors.title}\r\n                              </div>\r\n                            ) : null}\r\n                          </FormGroup>\r\n                        </Colxx>\r\n\r\n                        <Colxx xxs=\"12\" sm=\"6\">\r\n                          <FormGroup className=\"form-group has-float-label\">\r\n                            <Label>Description</Label>\r\n                            <Field\r\n                              className=\"form-control\"\r\n                              name=\"description\"\r\n                              type=\"text\"\r\n                            />\r\n                            {errors.description && touched.description ? (\r\n                              <div className=\"invalid-feedback d-block\">\r\n                                {errors.description}\r\n                              </div>\r\n                            ) : null}\r\n                          </FormGroup>\r\n                        </Colxx>\r\n                      </Row>\r\n\r\n                      {this.state.offer_type != 1 ?\r\n                        (<div>\r\n                          <Row>\r\n                            <Colxx xxs=\"12\" sm=\"6\">\r\n                              <FormGroup className=\"form-group has-float-label\">\r\n                                <Label>Business Category</Label>\r\n                                <select\r\n                                  name=\"business_category\"\r\n                                  className=\"form-control\"\r\n                                  value={values.business_category}\r\n                                  onChange={(event) => {\r\n                                    setFieldValue(\r\n                                      \"business_category\",\r\n                                      event.target.value\r\n                                    );\r\n                                    setFieldValue(\"product_category\", \"\");\r\n                                    setFieldValue(\"product_subcategory\", \"\");\r\n                                    setFieldValue(\"product_inv_id\", \"\");\r\n                                    this.getPerentCategories(event.target.value);\r\n                                  }}\r\n                                >\r\n                                  {this.state.businessCatList.map((item, index) => {\r\n                                    return (\r\n                                      <option key={index} value={item._id}>\r\n                                        {item.name}\r\n                                      </option>\r\n                                    );\r\n                                  })}\r\n                                </select>\r\n                                {errors.business_category &&\r\n                                  touched.business_category ? (\r\n                                    <div className=\"invalid-feedback d-block\">\r\n                                      {errors.business_category}\r\n                                    </div>\r\n                                  ) : null}\r\n                              </FormGroup>\r\n                            </Colxx>\r\n\r\n                            <Colxx xxs=\"12\" sm=\"6\">\r\n                              <FormGroup className=\"form-group has-float-label\">\r\n                                <Label>Product Category</Label>\r\n                                <select\r\n                                  name=\"product_category\"\r\n                                  className=\"form-control\"\r\n                                  value={values.product_category}\r\n                                  onChange={(event) => {\r\n                                    setFieldValue(\r\n                                      \"product_category\",\r\n                                      event.target.value\r\n                                    );\r\n                                    setFieldValue(\"product_subcategory\", \"\");\r\n                                    setFieldValue(\"product_inv_id\", \"\");\r\n                                    this.getSubCategories(\r\n                                      values.business_category,\r\n                                      event.target.value\r\n                                    );\r\n                                  }}\r\n                                >\r\n                                  {this.state.parentCatList.map((item, index) => {\r\n                                    return (\r\n                                      <option key={index} value={item._id}>\r\n                                        {item.name}\r\n                                      </option>\r\n                                    );\r\n                                  })}\r\n                                </select>\r\n                                {errors.product_category &&\r\n                                  touched.product_category ? (\r\n                                    <div className=\"invalid-feedback d-block\">\r\n                                      {errors.product_category}\r\n                                    </div>\r\n                                  ) : null}\r\n                              </FormGroup>\r\n                            </Colxx>\r\n                          </Row>\r\n\r\n                          <Row>\r\n                            <Colxx xxs=\"12\" sm=\"6\">\r\n                              <FormGroup className=\"form-group has-float-label\">\r\n                                <Label>Product Sub Category</Label>\r\n                                <select\r\n                                  name=\"product_subcategory\"\r\n                                  className=\"form-control\"\r\n                                  value={values.product_subcategory}\r\n                                  onChange={(event) => {\r\n                                    setFieldValue(\r\n                                      \"product_subcategory\",\r\n                                      event.target.value\r\n                                    );\r\n                                    setFieldValue(\"product_inv_id\", \"\");\r\n                                    this.getProducts(\r\n                                      values.business_category,\r\n                                      values.product_category,\r\n                                      event.target.value,\r\n                                      setFieldValue\r\n                                    );\r\n                                    setFieldValue(\"product_inv_id\", \"\");\r\n                                  }}\r\n                                >\r\n                                  {this.state.subCatList.map((item, index) => {\r\n                                    return (\r\n                                      <option key={index} value={item._id}>\r\n                                        {item.name}\r\n                                      </option>\r\n                                    );\r\n                                  })}\r\n                                </select>\r\n                                {errors.product_subcategory &&\r\n                                  touched.product_subcategory ? (\r\n                                    <div className=\"invalid-feedback d-block\">\r\n                                      {errors.product_subcategory}\r\n                                    </div>\r\n                                  ) : null}\r\n                              </FormGroup>\r\n                            </Colxx>\r\n\r\n                            <Colxx xxs=\"12\" sm=\"6\">\r\n                              <FormGroup className=\"form-group has-float-label\">\r\n                                <Label>Product</Label>\r\n                                \r\n                                <FormikReactSelect\r\n                                  name=\"product_inv_id\"\r\n                                  id=\"product_inv_id\"\r\n                                  value={values.product_inv_id}\r\n                                  isMulti={this.state.offer_type == 2 ? true : false}\r\n                                  options={values.options}\r\n                                  onChange={setFieldValue}\r\n                                  onBlur={setFieldTouched}\r\n                                />\r\n                                {errors.product_inv_id && touched.product_inv_id ? (\r\n                                  <div className=\"invalid-feedback d-block\">\r\n                                    {errors.product_inv_id}\r\n                                  </div>\r\n                                ) : null}\r\n                                {/* <select\r\n                                  name=\"product_inv_id\"\r\n                                  className=\"form-control\"\r\n                                  value={values.product_inv_id}\r\n                                  onChange={(event) => {\r\n                                    setFieldValue(\r\n                                      \"product_inv_id\",\r\n                                      event.target.value\r\n                                    );\r\n                                  }}\r\n                                >\r\n                                  {this.state.productList.map((item, index) => {\r\n                                    return (\r\n                                      <option key={index} value={item.id}>\r\n                                        {item.name}\r\n                                        {item.inventory_name\r\n                                          ? \" (\" + item.inventory_name + \")\"\r\n                                          : \"\"}\r\n                                      </option>\r\n                                    );\r\n                                  })}\r\n                                </select>\r\n                                {errors.product_inv_id && touched.product_inv_id ? (\r\n                                  <div className=\"invalid-feedback d-block\">\r\n                                    {errors.product_inv_id}\r\n                                  </div>\r\n                                ) : null} */}\r\n                              </FormGroup>\r\n                            </Colxx>\r\n                          </Row>\r\n                        </div>) : null\r\n                      }\r\n\r\n                      {this.state.offer_type == 4 || this.state.offer_type == \"\" ?\r\n                        (<Row>\r\n                          <Colxx xxs=\"12\" sm=\"6\">\r\n                            <FormGroup className=\"form-group has-float-label\">\r\n                              <Label>Card Type</Label>\r\n                              <select\r\n                                name=\"card_type\"\r\n                                className=\"form-control\"\r\n                                value={values.card_type}\r\n                                onChange={(event) => {\r\n                                  setFieldValue(\r\n                                    \"card_type\",\r\n                                    event.target.value\r\n                                  );\r\n                                }}\r\n                              >\r\n                                <option value=\"\">Select</option>,\r\n                                  <option value=\"Debit\">Debit Card</option>,\r\n                                  <option value=\"Credit\">Credit Card</option>\r\n                              </select>\r\n                              {errors.card_type && touched.card_type ? (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.card_type}\r\n                                </div>\r\n                              ) : null}\r\n                            </FormGroup>\r\n                          </Colxx>\r\n\r\n                          <Colxx xxs=\"12\" sm=\"6\">\r\n                            <FormGroup className=\"form-group has-float-label\">\r\n                              <Label>Bank Type</Label>\r\n                              <select\r\n                                name=\"bank_type\"\r\n                                className=\"form-control\"\r\n                                value={values.bank_type}\r\n                                onChange={(event) => {\r\n                                  setFieldValue(\r\n                                    \"bank_type\",\r\n                                    event.target.value\r\n                                  );\r\n                                }}\r\n                              >\r\n                                <option value=\"\">Select</option>,\r\n                                  <option value=\"Debit\">Hsbc</option>,\r\n                                  <option value=\"Credit\">Icici</option>\r\n                              </select>\r\n                              {errors.bank_type && touched.bank_type ? (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.bank_type}\r\n                                </div>\r\n                              ) : null}\r\n                            </FormGroup>\r\n                          </Colxx>\r\n                        </Row>) : null\r\n                      }\r\n\r\n                      {this.state.offer_type != 3 ?\r\n                        (<Row>\r\n                          <Colxx xxs=\"12\" sm=\"6\">\r\n                            <FormGroup className=\"form-group has-float-label\">\r\n                              <Label>Offer Amount Type</Label>\r\n                              <select\r\n                                name=\"offer_amount_type\"\r\n                                className=\"form-control\"\r\n                                value={values.offer_amount_type}\r\n                                onChange={(event) => {\r\n                                  setFieldValue(\r\n                                    \"offer_amount_type\",\r\n                                    event.target.value\r\n                                  );\r\n                                }}\r\n                              >\r\n                                <option value=\"\">Select</option>,\r\n                                  <option value=\"1\">Fixed</option>,\r\n                                  <option value=\"2\">Percentage(%)</option>\r\n                              </select>\r\n                              {errors.offer_amount_type && touched.offer_amount_type ? (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.offer_amount_type}\r\n                                </div>\r\n                              ) : null}\r\n                            </FormGroup>\r\n                          </Colxx>\r\n\r\n                          <Colxx xxs=\"12\" sm=\"3\">\r\n                            <FormGroup className=\"form-group has-float-label\">\r\n                              <Label>Offer Price</Label>\r\n                              <Field\r\n                                className=\"form-control\"\r\n                                name=\"offer_price\"\r\n                                type=\"text\"\r\n                              />\r\n                              {errors.offer_price && touched.offer_price ? (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.offer_price}\r\n                                </div>\r\n                              ) : null}\r\n                            </FormGroup>\r\n                          </Colxx>\r\n\r\n                          <Colxx xxs=\"12\" sm=\"3\">\r\n                            <FormGroup className=\"form-group has-float-label\">\r\n                              <Label>Offer Amount</Label>\r\n                              <Field\r\n                                className=\"form-control\"\r\n                                name=\"offer_amount\"\r\n                                type=\"text\"\r\n                              />\r\n                              {errors.offer_amount && touched.offer_amount ? (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.offer_amount}\r\n                                </div>\r\n                              ) : null}\r\n                            </FormGroup>\r\n                          </Colxx>\r\n                        </Row>) : null\r\n                      }\r\n\r\n                      {this.state.offer_type == 3 || this.state.offer_type == \"\" ?\r\n                        (<Row>\r\n                          <Colxx xxs=\"12\" sm=\"6\">\r\n                            <FormGroup className=\"form-group has-float-label\">\r\n                              <Label>Offer Price</Label>\r\n                              <Field\r\n                                className=\"form-control\"\r\n                                name=\"offer_price\"\r\n                                type=\"text\"\r\n                              />\r\n                              {errors.offer_price && touched.offer_price ? (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.offer_price}\r\n                                </div>\r\n                              ) : null}\r\n                            </FormGroup>\r\n                          </Colxx>\r\n\r\n                          <Colxx xxs=\"12\" sm=\"6\">\r\n                            <FormGroup className=\"form-group has-float-label\">\r\n                              <Label>Offer Quantity</Label>\r\n                              <Field\r\n                                className=\"form-control\"\r\n                                name=\"offer_quantity\"\r\n                                type=\"text\"\r\n                              />\r\n                              {errors.offer_quantity && touched.offer_quantity ? (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.offer_quantity}\r\n                                </div>\r\n                              ) : null}\r\n                            </FormGroup>\r\n                          </Colxx>\r\n                        </Row>) : null\r\n                      }\r\n\r\n                      <Row>\r\n                        <Colxx xxs=\"12\" sm=\"6\">\r\n                          <FormGroup className=\"form-group has-float-label\">\r\n                            <Label className=\"d-block\">\r\n                              Start Date\r\n                              </Label>\r\n                            <FormikDatePicker\r\n                              name=\"startDate\"\r\n                              value={values.startDate}\r\n                              onChange={setFieldValue}\r\n                              onBlur={setFieldTouched}\r\n                            />\r\n                            {errors.startDate && touched.startDate ? (\r\n                              <div className=\"invalid-feedback d-block\">\r\n                                {errors.startDate}\r\n                              </div>\r\n                            ) : null}\r\n                          </FormGroup>\r\n                        </Colxx>\r\n\r\n                        <Colxx xxs=\"12\" sm=\"6\">\r\n                          <FormGroup className=\"form-group has-float-label\">\r\n                            <Label className=\"d-block\">\r\n                              End Date\r\n                              </Label>\r\n                            <FormikDatePicker\r\n                              name=\"endDate\"\r\n                              value={values.endDate}\r\n                              onChange={setFieldValue}\r\n                              onBlur={setFieldTouched}\r\n                            />\r\n                            {errors.endDate && touched.endDate ? (\r\n                              <div className=\"invalid-feedback d-block\">\r\n                                {errors.endDate}\r\n                              </div>\r\n                            ) : null}\r\n                          </FormGroup>\r\n                        </Colxx>\r\n                      </Row>\r\n\r\n                      <Row>\r\n                        <Colxx xxs=\"12\" sm=\"6\">\r\n                          <FormGroup className=\"form-group has-float-label\">\r\n                            <Label>Image</Label>\r\n                            <Field\r\n                              className=\"form-control\"\r\n                              name=\"image\"\r\n                              type=\"file\"\r\n                              value={this.state.image}\r\n                              onChange={(event) => {\r\n                                setFieldValue(\r\n                                  \"image\",\r\n                                  event.currentTarget.files[0]\r\n                                );\r\n                              }}\r\n                            />\r\n                            {errors.image && touched.image ? (\r\n                              <div className=\"invalid-feedback d-block\">\r\n                                {errors.image}\r\n                              </div>\r\n                            ) : null}\r\n                          </FormGroup>\r\n                        </Colxx>\r\n                      </Row>\r\n\r\n                      <Button color=\"primary\" type=\"submit\">\r\n                        <IntlMessages id=\"button.save\" />\r\n                      </Button>\r\n                    </Form>\r\n                  )}\r\n                </Formik>\r\n              </CardBody>\r\n            </Card>\r\n          </Colxx>\r\n        </Row>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nexport default injectIntl(AddOffer);\r\n","import React from 'react';\r\nimport { Col } from 'reactstrap';\r\nconst Colxx = (props) => (\r\n    <Col {...props} widths={['xxs', 'xs', 'sm', 'md', 'lg', 'xl', 'xxl']} />\r\n);\r\nconst Separator = (props) => (\r\n    <div className={`separator ${props.className}`}></div>\r\n);\r\nexport { Colxx,Separator }","import React, { Fragment } from \"react\";\r\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\n\r\nconst getMenuTitle = sub => {\r\n  return <IntlMessages id={`menu.${sub}`} />;\r\n};\r\n\r\nconst getUrl = (path, sub, index) => {\r\n  if (index === 0) {\r\n    return \"\";\r\n  } else {\r\n    return path.split(sub)[0] + sub;\r\n  }\r\n};\r\n\r\nconst BreadcrumbContainer = ({ heading, match }) => {\r\n  return (\r\n    <Fragment>\r\n      {heading && <h1><IntlMessages id={heading} /></h1>}\r\n      <BreadcrumbItems match={match} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport const BreadcrumbItems = ({ match }) => {\r\n  const path = match.path.substr(1);\r\n  let paths = path.split(\"/\");\r\n  if (paths[paths.length - 1].indexOf(\":\") > -1) {\r\n    paths = paths.filter(x => x.indexOf(\":\") === -1);\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\r\n        {paths.map((sub, index) => {\r\n          return (\r\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\r\n              {paths.length !== index + 1 ? (\r\n                <NavLink to={\"/\" + getUrl(path, sub, index)}>\r\n                  {getMenuTitle(sub)}\r\n                </NavLink>\r\n              ) : (\r\n                  getMenuTitle(sub)\r\n                )}\r\n            </BreadcrumbItem>\r\n          );\r\n        })}\r\n      </Breadcrumb>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default BreadcrumbContainer;\r\n","import React from \"react\";\r\nimport Select from \"react-select\";\r\nimport { CustomInput } from \"reactstrap\";\r\n\r\nimport TagsInput from \"react-tagsinput\";\r\nimport \"react-tagsinput/react-tagsinput.css\";\r\nimport Switch from \"rc-switch\";\r\nimport \"rc-switch/assets/index.css\";\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nexport class FormikReactSelect extends React.Component {\r\n  handleChange = value => {\r\n    this.props.onChange(this.props.name, value);\r\n  };\r\n  handleBlur = () => {\r\n    this.props.onBlur(this.props.name, true);\r\n  };\r\n  render() {\r\n    return (\r\n      <Select\r\n        className={`react-select ${this.props.className}`}\r\n        classNamePrefix=\"react-select\"\r\n        options={this.props.options}\r\n        isMulti={this.props.isMulti}\r\n        onChange={this.handleChange}\r\n        onBlur={this.handleBlur}\r\n        value={this.props.value}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport class FormikCheckboxGroup extends React.Component {\r\n  handleChange = val => {\r\n    let valueArray = [...this.props.value] || [];\r\n    if (!valueArray.includes(val)) {\r\n      valueArray.push(val);\r\n    } else {\r\n      valueArray.splice(valueArray.indexOf(val), 1);\r\n    }\r\n    this.props.onChange(this.props.name, valueArray);\r\n  };\r\n\r\n  handleBlur = () => {\r\n    this.props.onBlur(this.props.name, true);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      name,\r\n      value,\r\n      options,\r\n      inline = false\r\n    } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        {options.map((child, index) => {\r\n          return (\r\n            <div\r\n              key={`${name}_${child.value}_${index}`}\r\n              className={`position-relative form-check ${\r\n                inline ? \"form-check-inline\" : \"\"\r\n                }`}\r\n            >\r\n              <input\r\n                id={child.value}\r\n                name={name}\r\n                type=\"checkbox\"\r\n                className=\"form-check-input\"\r\n                onChange={() => this.handleChange(child.value)}\r\n                onBlur={this.handleBlur}\r\n                defaultChecked={value.includes(child.value)}\r\n                disabled={child.disabled}\r\n              />\r\n              <label className=\"form-check-label\">\r\n                {child.label}\r\n              </label>\r\n            </div>\r\n          );\r\n        })}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport class FormikCustomCheckboxGroup extends React.Component {\r\n  handleChange = val => {\r\n    let valueArray = [...this.props.value] || [];\r\n    if (!valueArray.includes(val)) {\r\n      valueArray.push(val);\r\n    } else {\r\n      valueArray.splice(valueArray.indexOf(val), 1);\r\n    }\r\n    this.props.onChange(this.props.name, valueArray);\r\n  };\r\n\r\n  handleBlur = () => {\r\n    this.props.onBlur(this.props.name, true);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      name,\r\n      value,\r\n      options,\r\n      inline = false\r\n    } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        {options.map((child, index) => {\r\n          return (\r\n            <CustomInput\r\n              key={`${name}_${child.value}_${index}`}\r\n              type=\"checkbox\"\r\n              id={`${name}_${child.value}_${index}`}\r\n              name={child.name}\r\n              label={child.label}\r\n              onChange={() => this.handleChange(child.value)}\r\n              onBlur={this.handleBlur}\r\n              checked={value.includes(child.value)}\r\n              disabled={child.disabled}\r\n              inline={inline}\r\n            />\r\n          );\r\n        })}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport const FormikCheckbox = props => {\r\n  const handleChange = event => {\r\n    props.onChange(props.name, !props.value);\r\n  };\r\n  const handleBlur = () => {\r\n    props.onBlur(props.name, true);\r\n  };\r\n  return (\r\n    <div\r\n      className={`position-relative form-check form-check-inline`}\r\n    >\r\n      <input\r\n        name={props.name}\r\n        type=\"checkbox\"\r\n        className=\"form-check-input\"\r\n        onChange={handleChange}\r\n        onBlur={handleBlur}\r\n        checked={props.value}\r\n        disabled={props.disabled}\r\n      />\r\n      <label className=\"form-check-label\">\r\n        {props.label}\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const FormikCustomCheckbox = props => {\r\n  const handleChange = event => {\r\n    props.onChange(props.name, !props.value);\r\n  };\r\n  const handleBlur = () => {\r\n    props.onBlur(props.name, true);\r\n  };\r\n  return (\r\n    <CustomInput\r\n      type=\"checkbox\"\r\n      id={props.name}\r\n      name={props.name}\r\n      label={props.label}\r\n      onChange={handleChange}\r\n      onBlur={handleBlur}\r\n      checked={props.value}\r\n      disabled={props.disabled}\r\n      inline\r\n    />\r\n  );\r\n};\r\n\r\nexport class FormikRadioButtonGroup extends React.Component {\r\n  handleChange = val => {\r\n    this.props.onChange(this.props.name, val);\r\n  };\r\n\r\n  handleBlur = () => {\r\n    this.props.onBlur(this.props.name, true);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      name,\r\n      value,\r\n      options,\r\n      inline = false\r\n    } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        {options.map((child, index) => {\r\n          return (\r\n            <div\r\n              key={`${name}_${child.value}_${index}`}\r\n              className={`position-relative form-check ${\r\n                inline ? \"form-check-inline\" : \"\"\r\n                }`}\r\n            >\r\n              <input\r\n                id={child.value}\r\n                name={name}\r\n                type=\"radio\"\r\n                className=\"form-check-input\"\r\n                onChange={() => this.handleChange(child.value)}\r\n                onBlur={this.handleBlur}\r\n                defaultChecked={value === child.value}\r\n                disabled={child.disabled}\r\n              />\r\n              <label className=\"form-check-label\">\r\n                {child.label}\r\n              </label>\r\n            </div>\r\n          );\r\n        })}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport class FormikCustomRadioGroup extends React.Component {\r\n  handleChange = val => {\r\n    this.props.onChange(this.props.name, val);\r\n  };\r\n\r\n  handleBlur = () => {\r\n    this.props.onBlur(this.props.name, true);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      name,\r\n      value,\r\n      options,\r\n      inline = false\r\n    } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        {options.map((child, index) => {\r\n          return (\r\n            <CustomInput\r\n              key={`${name}_${child.value}_${index}`}\r\n              type=\"radio\"\r\n              id={`${name}_${child.value}_${index}`}\r\n              name={child.name}\r\n              label={child.label}\r\n              onChange={() => this.handleChange(child.value)}\r\n              onBlur={this.handleBlur}\r\n              checked={value === child.value}\r\n              disabled={child.disabled}\r\n              inline={inline}\r\n            />\r\n          );\r\n        })}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport class FormikTagsInput extends React.Component {\r\n\r\n  handleChange = val => {\r\n    this.props.onBlur(this.props.name, true);\r\n    this.props.onChange(this.props.name, val);\r\n  };\r\n\r\n  render() {\r\n    const { name, value } = this.props;\r\n    return (\r\n      <TagsInput\r\n        id={name}\r\n        name={name}\r\n        value={value}\r\n        onChange={this.handleChange}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport class FormikSwitch extends React.Component {\r\n\r\n  handleChange = val => {\r\n    this.props.onBlur(this.props.name, true);\r\n    this.props.onChange(this.props.name, val);\r\n  };\r\n\r\n  render() {\r\n    const { name, value, className } = this.props;\r\n    return (\r\n      <Switch\r\n        id={name}\r\n        name={name}\r\n        className={className}\r\n        checked={value}\r\n        onChange={this.handleChange}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport class FormikDatePicker extends React.Component {\r\n\r\n\r\n  handleChange = val => {\r\n    this.props.onChange(this.props.name, val);\r\n  };\r\n  handleBlur = val => {\r\n    this.props.onBlur(this.props.name, true);\r\n  };\r\n\r\n  render() {\r\n    const { name, value, className } = this.props;\r\n    return (\r\n      <DatePicker\r\n        id={name}\r\n        name={name}\r\n        className={className}\r\n        selected={value}\r\n        onChange={this.handleChange}\r\n        onBlur={this.handleBlur}\r\n      />\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}