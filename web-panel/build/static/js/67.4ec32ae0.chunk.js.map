{"version":3,"sources":["views/app/offers/edit.js","components/common/CustomBootstrap.js","containers/navs/Breadcrumb.js","containers/form-validations/FormikFields.js"],"names":["FormSchema","Yup","shape","offer_type","required","title","min","max","description","coupon_code","options","reactSelect","EditOffer","props","dataRender","a","path","ApiRoutes","GET_OFFER","state","itemId","Http","res","status","setState","data","offer_amount_type","offer_price","offer_amount","offer_product","quantity","offer_quantity","card_type","bank_type","startDate","moment","format","endDate","business_category","business_category_id","_id","product_category","category","categor","product_subcategory","subcategory","product_inv_id","product_id","image_preview","image_path_url","isLoading","getBusinessCategories","getPerentCategories","getSubCategories","getProducts","NotificationManager","error","message","GET_BUSSINESS_CATEGORIES","businessCatList","docs","formData","FormData","append","GET_CATEGORIES_BY_BUSINESS","parentCatList","name","subCatList","GET_SUBCATEGORIES","productList","id","GET_BANNER_PRODUCTS","map","item","index","push","key","inventory_name","Array","isArray","indexOf","value","label","console","log","handleSubmit","inputValues","productData","JSON","stringify","image","UPDATE_OFFER","success","history","pathname","pageIndex","currentPage","match","params","offer_max_amount","location","undefined","bind","this","intl","messages","xxs","heading","className","sm","enableReinitialize","initialValues","validationSchema","onSubmit","setFieldValue","setFieldTouched","values","handleChange","errors","touched","isSubmitting","onChange","event","target","type","isMulti","onBlur","currentTarget","files","alt","src","color","Component","injectIntl","Colxx","widths","Separator","getMenuTitle","sub","getUrl","split","BreadcrumbItems","substr","paths","length","filter","x","active","to","BreadcrumbContainer","FormikReactSelect","handleBlur","classNamePrefix","React","FormikCustomRadioGroup","val","inline","Fragment","child","checked","disabled","FormikDatePicker","selected"],"mappings":"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","file":"static/js/67.4ec32ae0.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { Row, Card, CardBody, FormGroup, Label, Button } from \"reactstrap\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport moment from 'moment';\r\nimport { Colxx, Separator } from \"../../../components/common/CustomBootstrap\";\r\nimport { NotificationManager } from \"../../../components/common/react-notifications\";\r\nimport Breadcrumb from \"../../../containers/navs/Breadcrumb\";\r\nimport IntlMessages from \"../../../helpers/IntlMessages\";\r\nimport Http from \"../../../helpers/Http\";\r\nimport ApiRoutes from \"../../../helpers/ApiRoutes\";\r\nimport { FormikDatePicker, FormikReactSelect } from \"../../../containers/form-validations/FormikFields\";\r\n\r\nconst SUPPORTED_FORMATS = [\"image/jpg\", \"image/jpeg\", \"image/gif\", \"image/png\"];\r\n\r\nvar digitRegExp = /^\\d+(?:[.]\\d+)*$/;\r\n\r\nconst FormSchema = Yup.object().shape({\r\n  offer_type: Yup.string().required(\"Please select offer type\"),\r\n  title: Yup.string()\r\n    .required(\"Please enter title\")\r\n    .min(2, \"Too Short! Atleast 2 letters.\")\r\n    .max(30, \"Too Long! Atmost 30 letters.\"),\r\n  description: Yup.string()\r\n    .required(\"Please enter title\")\r\n    .min(2, \"Too Short! Atleast 2 letters.\")\r\n    .max(200, \"Too Long! Atmost 200 letters.\"),\r\n  coupon_code: Yup.string()\r\n    .min(2, \"Too Short! Atleast 2 letters.\")\r\n    .max(10, \"Too Long! Atmost 10 letters.\"),\r\n});\r\n\r\nvar options = [];\r\nvar reactSelect = [];\r\n\r\nclass EditOffer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      itemId: props.match.params.itemId,\r\n\r\n      offer_type: \"\",\r\n      coupon_code: \"\",\r\n      title: \"\",\r\n      description: \"\",\r\n      business_category: \"\",\r\n      product_category: \"\",\r\n      product_subcategory: \"\",\r\n      product_inv_id: [],\r\n      card_type: \"\",\r\n      bank_type: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      offer_amount_type: \"\",\r\n      offer_price: \"\",\r\n      offer_amount: \"\",\r\n      offer_max_amount: \"\",\r\n      offer_product: \"\",\r\n      quantity: \"\",\r\n      offer_quantity: \"\",\r\n      currentPage: this.props.history.location.state.pageIndex,\r\n\r\n      image: undefined,\r\n\r\n      businessCatList: [{ _id: \"\", name: \"Select\" }],\r\n      parentCatList: [{ _id: \"\", name: \"Select\" }],\r\n      subCatList: [{ _id: \"\", name: \"Select\" }],\r\n      productList: [{ id: \"\", name: \"Select\" }],\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.dataRender();\r\n  }\r\n\r\n  dataRender = async () => {\r\n\r\n    let path = ApiRoutes.GET_OFFER + \"/\" + this.state.itemId;\r\n    const res = await Http(\"GET\", path);\r\n\r\n    if (res.status == 200) {\r\n      this.setState({\r\n        offer_type: res.data.offer_type,\r\n        title: res.data.title,\r\n        description: res.data.description,\r\n        offer_amount_type: res.data.offer_amount_type,\r\n        offer_price: res.data.offer_price,\r\n        offer_amount: res.data.offer_amount,\r\n        offer_product: res.data.offer_product,\r\n        quantity: res.data.quantity,\r\n        offer_quantity: res.data.offer_quantity,\r\n        coupon_code: res.data.coupon_code,\r\n        card_type: res.data.card_type,\r\n        bank_type: res.data.card_type,\r\n        startDate: moment(res.data.startDate).format(\"MM-DD-YYYY\"),\r\n        endDate: moment(res.data.endDate).format(\"MM-DD-YYYY\"),\r\n        business_category: res.data.business_category_id[0] ? res.data.business_category_id[0]._id : res.data.business_category_id,\r\n        product_category: res.data.category[0] ? res.data.category[0]._id : res.data.categor,\r\n        product_subcategory: res.data.subcategory[0] ? res.data.subcategory[0]._id : res.data.subcategory,\r\n        product_inv_id: res.data.product_id ? res.data.product_id : res.data.product_id,\r\n        image_preview: res.data.image_path_url,\r\n        isLoading: true,\r\n      });\r\n      if (res.data.business_category_id[0] != null) {\r\n        this.getBusinessCategories();\r\n        this.getPerentCategories(res.data.business_category_id[0]._id);\r\n        this.getSubCategories(\r\n          res.data.business_category_id[0]._id,\r\n          res.data.category[0]._id\r\n        );\r\n        this.getProducts(\r\n          res.data.business_category_id[0]._id,\r\n          res.data.category[0]._id,\r\n          res.data.subcategory[0]._id\r\n        );\r\n      }\r\n\r\n    } else {\r\n      NotificationManager.error(res.message, \"Error!\", 3000);\r\n    }\r\n  };\r\n\r\n  getBusinessCategories = async () => {\r\n    this.state.isLoading = true;\r\n\r\n    let path = ApiRoutes.GET_BUSSINESS_CATEGORIES + \"?page_no=1&limit=100\";\r\n    const res = await Http(\"GET\", path);\r\n\r\n    if (res.status == 200) {\r\n      this.setState({\r\n        businessCatList: [...this.state.businessCatList, ...res.data.docs],\r\n      });\r\n    } else {\r\n      NotificationManager.error(res.message, \"Error!\", 3000);\r\n    }\r\n  };\r\n\r\n  getPerentCategories = async (business_category) => {\r\n    let formData = new FormData();\r\n    formData.append(\"business_category_id\", business_category);\r\n\r\n    let path = ApiRoutes.GET_CATEGORIES_BY_BUSINESS;\r\n    const res = await Http(\"POST\", path, formData);\r\n\r\n    if (res.status == 200) {\r\n      var parentCatList = [{ _id: \"\", name: \"Select\" }];\r\n      this.setState({\r\n        parentCatList: [...parentCatList, ...res.data.docs],\r\n      });\r\n    } else {\r\n      NotificationManager.error(res.message, \"Error!\", 3000);\r\n    }\r\n  };\r\n\r\n  getSubCategories = async (business_category, product_category) => {\r\n    this.state.isLoading = true;\r\n    var subCatList = [{ _id: \"\", name: \"Select\" }];\r\n\r\n    if (product_category) {\r\n      let formData = new FormData();\r\n      formData.append(\"business_category_id\", business_category);\r\n      formData.append(\"category_id\", product_category);\r\n\r\n      let path = ApiRoutes.GET_SUBCATEGORIES;\r\n      const res = await Http(\"POST\", path, formData);\r\n\r\n      if (res.status == 200) {\r\n        this.setState({\r\n          subCatList: [...subCatList, ...res.data.docs],\r\n        });\r\n      } else {\r\n        NotificationManager.error(res.message, \"Error!\", 3000);\r\n      }\r\n    } else {\r\n      this.setState({\r\n        subCatList: subCatList,\r\n      });\r\n    }\r\n  };\r\n\r\n  getProducts = async (\r\n    business_category,\r\n    product_category,\r\n    product_subcategory\r\n  ) => {\r\n    this.state.isLoading = true;\r\n    var productList = [{ id: \"\", name: \"Select\" }];\r\n    options = [];\r\n    reactSelect = [];\r\n    if (product_subcategory) {\r\n      let formData = new FormData();\r\n      formData.append(\"business_category_id\", business_category);\r\n      formData.append(\"category_id\", product_category);\r\n      formData.append(\"sub_category_id\", product_subcategory);\r\n\r\n      let path = ApiRoutes.GET_BANNER_PRODUCTS;\r\n      const res = await Http(\"POST\", path, formData);\r\n\r\n      if (res.status == 200) {\r\n        this.setState({\r\n          productList: [...productList, ...res.data],\r\n        });\r\n      } else {\r\n        NotificationManager.error(res.message, \"Error!\", 3000);\r\n      }\r\n      if (res.status == 200) {\r\n        this.setState({\r\n          productList: [...this.state.productList, ...res.data],\r\n        });\r\n        res.data.map((item, index) => {\r\n          options.push({ key: index, \"value\": item.id, \"label\": item.inventory_name })\r\n\r\n          if (Array.isArray(this.state.product_inv_id)) {\r\n            if (this.state.product_inv_id.indexOf(item.id) !== -1) {\r\n              reactSelect.push({ key: index, value: item.id, label: item.inventory_name });\r\n            }\r\n          }\r\n        })\r\n        console.log(options)\r\n        debugger\r\n        this.setState({\r\n          product_inv_id: reactSelect,\r\n        })\r\n      } else {\r\n        NotificationManager.error(res.message, \"Error!\", 3000);\r\n      }\r\n    } else {\r\n      this.setState({\r\n        productList: productList,\r\n      });\r\n    }\r\n  };\r\n\r\n  // getProducts = async (\r\n  //   business_category,\r\n  //   product_category,\r\n  //   product_subcategory\r\n  // ) => {\r\n  //   this.state.isLoading = true;\r\n  //   var productList = [{ id: \"\", name: \"Select\" }];\r\n\r\n  //   if (product_subcategory) {\r\n  //     let formData = new FormData();\r\n  //     formData.append(\"business_category_id\", business_category);\r\n  //     formData.append(\"category_id\", product_category);\r\n  //     formData.append(\"sub_category_id\", product_subcategory);\r\n\r\n  //     let path = ApiRoutes.GET_BANNER_PRODUCTS;\r\n  //     const res = await Http(\"POST\", path, formData);\r\n\r\n  //     if (res.status == 200) {\r\n  //       this.setState({\r\n  //         productList: [...productList, ...res.data],\r\n  //       });\r\n  //     } else {\r\n  //       NotificationManager.error(res.message, \"Error!\", 3000);\r\n  //     }\r\n  //   } else {\r\n  //     this.setState({\r\n  //       productList: productList,\r\n  //     });\r\n  //   }\r\n  // };\r\n\r\n\r\n  handleSubmit = async (inputValues) => {\r\n    debugger\r\n    var error = \"\";\r\n    if (inputValues.offer_type == 2 || inputValues.offer_type == 3 || inputValues.offer_type == 4) {\r\n      if (inputValues.business_category == \"\") {\r\n        error = \"Please select Business category.\";\r\n        NotificationManager.error(error, \"Error!\", 3000);\r\n        return false;\r\n      }\r\n      if (inputValues.product_category == \"\") {\r\n        error = \"Please select product category.\";\r\n        NotificationManager.error(error, \"Error!\", 3000);\r\n        return false;\r\n      }\r\n      if (inputValues.product_subcategory == \"\") {\r\n        error = \"Please select product sub category.\";\r\n        NotificationManager.error(error, \"Error!\", 3000);\r\n        return false;\r\n      }\r\n      if (inputValues.product_inv_id == \"\") {\r\n        error = \"Please select product.\";\r\n        NotificationManager.error(error, \"Error!\", 3000);\r\n        return false;\r\n      }\r\n    }\r\n\r\n    let formData = new FormData();\r\n    if (inputValues.offer_type != \"1\") {\r\n      if (inputValues.offer_type == \"2\") {\r\n        var productData = new Array();\r\n        inputValues.product_inv_id.map((data, index) => {\r\n          productData.push(data.value);\r\n        });\r\n      } else {\r\n        var productData = new Array();\r\n        if (Array.isArray(inputValues.product_inv_id)) {\r\n          inputValues.product_inv_id.map((data, index) => {\r\n            productData.push(data.value);\r\n          });\r\n        } else {\r\n          productData.push(inputValues.product_inv_id.value);\r\n        }\r\n      }\r\n    } else {\r\n      var productData = new Array();\r\n    }\r\n\r\n    formData.append(\"offer_type\", inputValues.offer_type);\r\n    formData.append(\"coupon_code\", inputValues.coupon_code);\r\n\r\n    formData.append(\"business_category_id\", typeof inputValues.business_category !== \"undefined\" ? inputValues.business_category : null);\r\n    formData.append(\"category_id\", typeof inputValues.product_category !== \"undefined\" ? inputValues.product_category : \"\");\r\n    formData.append(\"sub_category_id\", typeof inputValues.product_subcategory !== \"undefined\" ? inputValues.product_subcategory : null);\r\n    formData.append(\"product_id\", typeof inputValues.product_inv_id !== \"undefined\" ? JSON.stringify(productData) : null);\r\n\r\n    formData.append(\"title\", inputValues.title);\r\n    formData.append(\"description\", inputValues.description);\r\n\r\n    formData.append(\"startDate\", moment(inputValues.startDate).format(\"YYYY-MM-DD\"));\r\n    formData.append(\"endDate\", moment(inputValues.endDate).format(\"YYYY-MM-DD\"));\r\n\r\n    formData.append(\"offer_amount_type\", inputValues.offer_amount_type != null ? inputValues.offer_amount_type : \"\");\r\n    formData.append(\"offer_price\", inputValues.offer_price != \"\" ? inputValues.offer_price : \"\");\r\n    formData.append(\"offer_amount\", inputValues.offer_amount != null ? inputValues.offer_amount : \"\");\r\n\r\n    formData.append(\"offer_product\", inputValues.offer_product ? inputValues.offer_product : \"\");\r\n    formData.append(\"offer_quantity\", inputValues.offer_quantity ? inputValues.offer_quantity : null);\r\n\r\n    formData.append(\"card_type\", inputValues.card_type);\r\n    formData.append(\"bank_type\", inputValues.bank_type);\r\n\r\n    formData.append(\"image_path\", inputValues.image);\r\n\r\n    let path = ApiRoutes.UPDATE_OFFER + \"/\" + this.state.itemId;\r\n    const res = await Http(\"PUT\", path, formData);\r\n\r\n    if (res.status == 200) {\r\n      NotificationManager.success(res.message, \"Success!\", 3000);\r\n      this.props.history.push({pathname:`/app/offers`, state:{pageIndex:this.state.currentPage}})\r\n\r\n    } else {\r\n      NotificationManager.error(res.message, \"Error!\", 3000);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { messages } = this.props.intl;\r\n    return (\r\n      <Fragment>\r\n        <Row>\r\n          <Colxx xxs=\"12\">\r\n            <Breadcrumb\r\n              heading=\"heading.edit-offer\"\r\n              match={this.props.match}\r\n            />\r\n            <Separator className=\"mb-5\" />\r\n          </Colxx>\r\n        </Row>\r\n        <Row>\r\n          <Colxx xxs=\"12\" sm=\"12\">\r\n            <Card>\r\n              <CardBody>\r\n                <Formik\r\n                  enableReinitialize\r\n                  initialValues={{\r\n                    business_category: this.state.business_category,\r\n                    product_category: this.state.product_category,\r\n                    product_subcategory: this.state.product_subcategory,\r\n                    product_inv_id: this.state.product_inv_id,\r\n\r\n                    card_type: this.state.card_type,\r\n                    bank_type: this.state.bank_type,\r\n                    // offer_max_amount: this.stata.offer_max_amount,\r\n                    offer_product: this.state.offer_product,\r\n                    offer_quantity: this.state.offer_quantity,\r\n\r\n\r\n                    offer_type: this.state.offer_type,\r\n                    coupon_code: this.state.coupon_code,\r\n                    title: this.state.title,\r\n                    description: this.state.description,\r\n                    offer_amount_type: this.state.offer_amount_type,\r\n                    offer_price: this.state.offer_price,\r\n                    offer_amount: this.state.offer_amount,\r\n                    startDate: this.state.startDate,\r\n                    endDate: this.state.endDate,\r\n                    image: this.state.image,\r\n                  }}\r\n                  validationSchema={FormSchema}\r\n                  onSubmit={this.handleSubmit}\r\n                >\r\n                  {({\r\n                    handleSubmit,\r\n                    setFieldValue,\r\n                    setFieldTouched,\r\n                    handleChange,\r\n                    values,\r\n                    errors,\r\n                    touched,\r\n                    isSubmitting,\r\n                  }) => (\r\n                    <Form className=\"av-tooltip tooltip-label-bottom\">\r\n                      <Row>\r\n                        <Colxx xxs=\"12\" sm=\"6\">\r\n                          <FormGroup className=\"form-group has-float-label\">\r\n                            <Label>Offer Type</Label>\r\n                            <select\r\n                              name=\"offer_type\"\r\n                              className=\"form-control\"\r\n                              value={values.offer_type}\r\n                              onChange={(event) => {\r\n                                setFieldValue(\r\n                                  \"offer_type\",\r\n                                  event.target.value\r\n                                );\r\n                                this.setState({ offer_type: event.target.value });\r\n                              }}\r\n                            >\r\n                              <option value=\"\">Select</option>,\r\n                              <option value=\"1\">Promocode Offer</option>,\r\n                              <option value=\"2\">Bundle Offer</option>,\r\n                              <option value=\"3\">Promotional Offer</option>,\r\n                              <option value=\"4\">Bank Offer</option>\r\n\r\n                            </select>\r\n                            {errors.offer_type &&\r\n                              touched.offer_type ? (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.offer_type}\r\n                                </div>\r\n                              ) : null}\r\n                          </FormGroup>\r\n                        </Colxx>\r\n                        {this.state.offer_type != 4 ?\r\n                          (<Colxx xxs=\"12\" sm=\"6\">\r\n                            <FormGroup className=\"form-group has-float-label\">\r\n                              <Label>Coupon Code</Label>\r\n                              <Field\r\n                                className=\"form-control\"\r\n                                name=\"coupon_code\"\r\n                                type=\"text\"\r\n                              />\r\n                              {errors.coupon_code && touched.coupon_code ? (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.coupon_code}\r\n                                </div>\r\n                              ) : null}\r\n                            </FormGroup>\r\n                          </Colxx>) : null}\r\n                      </Row>\r\n\r\n\r\n                      <Row>\r\n                        <Colxx xxs=\"12\" sm=\"6\">\r\n                          <FormGroup className=\"form-group has-float-label\">\r\n                            <Label>Title</Label>\r\n                            <Field\r\n                              className=\"form-control\"\r\n                              name=\"title\"\r\n                              type=\"text\"\r\n                            />\r\n                            {errors.title && touched.title ? (\r\n                              <div className=\"invalid-feedback d-block\">\r\n                                {errors.title}\r\n                              </div>\r\n                            ) : null}\r\n                          </FormGroup>\r\n                        </Colxx>\r\n\r\n                        <Colxx xxs=\"12\" sm=\"6\">\r\n                          <FormGroup className=\"form-group has-float-label\">\r\n                            <Label>Description</Label>\r\n                            <Field\r\n                              className=\"form-control\"\r\n                              name=\"description\"\r\n                              type=\"text\"\r\n                            />\r\n                            {errors.description && touched.description ? (\r\n                              <div className=\"invalid-feedback d-block\">\r\n                                {errors.description}\r\n                              </div>\r\n                            ) : null}\r\n                          </FormGroup>\r\n                        </Colxx>\r\n                      </Row>\r\n\r\n                      {this.state.offer_type != 1 ?\r\n                        (<div>\r\n                          <Row>\r\n                            <Colxx xxs=\"12\" sm=\"6\">\r\n                              <FormGroup className=\"form-group has-float-label\">\r\n                                <Label>Business Category</Label>\r\n                                <select\r\n                                  name=\"business_category\"\r\n                                  className=\"form-control\"\r\n                                  value={values.business_category}\r\n                                  onChange={(event) => {\r\n                                    setFieldValue(\r\n                                      \"business_category\",\r\n                                      event.target.value\r\n                                    );\r\n                                    setFieldValue(\"product_category\", \"\");\r\n                                    setFieldValue(\"product_subcategory\", \"\");\r\n                                    setFieldValue(\"product_inv_id\", \"\");\r\n                                    this.getPerentCategories(event.target.value);\r\n                                  }}\r\n                                >\r\n                                  {this.state.businessCatList.map((item, index) => {\r\n                                    return (\r\n                                      <option key={index} value={item._id}>\r\n                                        {item.name}\r\n                                      </option>\r\n                                    );\r\n                                  })}\r\n                                </select>\r\n                                {errors.business_category &&\r\n                                  touched.business_category ? (\r\n                                    <div className=\"invalid-feedback d-block\">\r\n                                      {errors.business_category}\r\n                                    </div>\r\n                                  ) : null}\r\n                              </FormGroup>\r\n                            </Colxx>\r\n\r\n                            <Colxx xxs=\"12\" sm=\"6\">\r\n                              <FormGroup className=\"form-group has-float-label\">\r\n                                <Label>Product Category</Label>\r\n                                <select\r\n                                  name=\"product_category\"\r\n                                  className=\"form-control\"\r\n                                  value={values.product_category}\r\n                                  onChange={(event) => {\r\n                                    setFieldValue(\r\n                                      \"product_category\",\r\n                                      event.target.value\r\n                                    );\r\n                                    setFieldValue(\"product_subcategory\", \"\");\r\n                                    setFieldValue(\"product_inv_id\", \"\");\r\n                                    this.getSubCategories(\r\n                                      values.business_category,\r\n                                      event.target.value\r\n                                    );\r\n                                  }}\r\n                                >\r\n                                  {this.state.parentCatList.map((item, index) => {\r\n                                    return (\r\n                                      <option key={index} value={item._id}>\r\n                                        {item.name}\r\n                                      </option>\r\n                                    );\r\n                                  })}\r\n                                </select>\r\n                                {errors.product_category &&\r\n                                  touched.product_category ? (\r\n                                    <div className=\"invalid-feedback d-block\">\r\n                                      {errors.product_category}\r\n                                    </div>\r\n                                  ) : null}\r\n                              </FormGroup>\r\n                            </Colxx>\r\n                          </Row>\r\n\r\n                          <Row>\r\n                            <Colxx xxs=\"12\" sm=\"6\">\r\n                              <FormGroup className=\"form-group has-float-label\">\r\n                                <Label>Product Sub Category</Label>\r\n                                <select\r\n                                  name=\"product_subcategory\"\r\n                                  className=\"form-control\"\r\n                                  value={values.product_subcategory}\r\n                                  onChange={(event) => {\r\n                                    setFieldValue(\r\n                                      \"product_subcategory\",\r\n                                      event.target.value\r\n                                    );\r\n                                    setFieldValue(\"product_inv_id\", \"\");\r\n                                    this.getProducts(\r\n                                      values.business_category,\r\n                                      values.product_category,\r\n                                      event.target.value\r\n                                    );\r\n                                  }}\r\n                                >\r\n                                  {this.state.subCatList.map((item, index) => {\r\n                                    return (\r\n                                      <option key={index} value={item._id}>\r\n                                        {item.name}\r\n                                      </option>\r\n                                    );\r\n                                  })}\r\n                                </select>\r\n                                {errors.product_subcategory &&\r\n                                  touched.product_subcategory ? (\r\n                                    <div className=\"invalid-feedback d-block\">\r\n                                      {errors.product_subcategory}\r\n                                    </div>\r\n                                  ) : null}\r\n                              </FormGroup>\r\n                            </Colxx>\r\n\r\n                            <Colxx xxs=\"12\" sm=\"6\">\r\n                              <FormGroup className=\"form-group has-float-label\">\r\n                                <Label>Product</Label>\r\n                                <FormikReactSelect\r\n                                  name=\"product_inv_id\"\r\n                                  id=\"product_inv_id\"\r\n                                  value={values.product_inv_id}\r\n                                  isMulti={this.state.offer_type == 2 ? true : false}\r\n                                  options={options}\r\n                                  onChange={setFieldValue}\r\n                                  onBlur={setFieldTouched}\r\n                                />\r\n                                {errors.product_inv_id && touched.product_inv_id ? (\r\n                                  <div className=\"invalid-feedback d-block\">\r\n                                    {errors.product_inv_id}\r\n                                  </div>\r\n                                ) : null}\r\n                                {/* <select\r\n                                  name=\"product_inv_id\"\r\n                                  className=\"form-control\"\r\n                                  value={values.product_inv_id}\r\n                                  onChange={(event) => {\r\n                                    setFieldValue(\r\n                                      \"product_inv_id\",\r\n                                      event.target.value\r\n                                    );\r\n                                  }}\r\n                                >\r\n                                  {this.state.productList.map((item, index) => {\r\n                                    return (\r\n                                      <option key={index} value={item.id}>\r\n                                        {item.name}\r\n                                        {item.inventory_name\r\n                                          ? \" (\" + item.inventory_name + \")\"\r\n                                          : \"\"}\r\n                                      </option>\r\n                                    );\r\n                                  })}\r\n                                </select>\r\n                                {errors.product_inv_id && touched.product_inv_id ? (\r\n                                  <div className=\"invalid-feedback d-block\">\r\n                                    {errors.product_inv_id}\r\n                                  </div>\r\n                                ) : null} */}\r\n                              </FormGroup>\r\n                            </Colxx>\r\n                          </Row>\r\n                        </div>) : null\r\n                      }\r\n\r\n                      {this.state.offer_type == 4 || this.state.offer_type == \"\" ?\r\n                        (<Row>\r\n                          <Colxx xxs=\"12\" sm=\"6\">\r\n                            <FormGroup className=\"form-group has-float-label\">\r\n                              <Label>Card Type</Label>\r\n                              <select\r\n                                name=\"card_type\"\r\n                                className=\"form-control\"\r\n                                value={values.card_type}\r\n                                onChange={(event) => {\r\n                                  setFieldValue(\r\n                                    \"card_type\",\r\n                                    event.target.value\r\n                                  );\r\n                                }}\r\n                              >\r\n                                <option value=\"\">Select</option>,\r\n                              <option value=\"Debit\">Debit Card</option>,\r\n                              <option value=\"Credit\">Credit Card</option>\r\n                              </select>\r\n                              {errors.card_type && touched.card_type ? (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.card_type}\r\n                                </div>\r\n                              ) : null}\r\n                            </FormGroup>\r\n                          </Colxx>\r\n\r\n                          <Colxx xxs=\"12\" sm=\"6\">\r\n                            <FormGroup className=\"form-group has-float-label\">\r\n                              <Label>Bank Type</Label>\r\n                              <select\r\n                                name=\"bank_type\"\r\n                                className=\"form-control\"\r\n                                value={values.bank_type}\r\n                                onChange={(event) => {\r\n                                  setFieldValue(\r\n                                    \"bank_type\",\r\n                                    event.target.value\r\n                                  );\r\n                                }}\r\n                              >\r\n                                <option value=\"\">Select</option>,\r\n                              <option value=\"Debit\">Hsbc</option>,\r\n                              <option value=\"Credit\">Icici</option>\r\n                              </select>\r\n                              {errors.bank_type && touched.bank_type ? (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.bank_type}\r\n                                </div>\r\n                              ) : null}\r\n                            </FormGroup>\r\n                          </Colxx>\r\n                        </Row>) : null\r\n                      }\r\n\r\n                      {this.state.offer_type != 3 ?\r\n                        (<Row>\r\n                          <Colxx xxs=\"12\" sm=\"6\">\r\n                            <FormGroup className=\"form-group has-float-label\">\r\n                              <Label>Offer Amount Type</Label>\r\n                              <select\r\n                                name=\"offer_amount_type\"\r\n                                className=\"form-control\"\r\n                                value={values.offer_amount_type}\r\n                                onChange={(event) => {\r\n                                  setFieldValue(\r\n                                    \"offer_amount_type\",\r\n                                    event.target.value\r\n                                  );\r\n                                }}\r\n                              >\r\n                                <option value=\"\">Select</option>,\r\n                              <option value=\"1\">Fixed</option>,\r\n                              <option value=\"2\">Percentage(%)</option>\r\n                              </select>\r\n                              {errors.offer_amount_type && touched.offer_amount_type ? (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.offer_amount_type}\r\n                                </div>\r\n                              ) : null}\r\n                            </FormGroup>\r\n                          </Colxx>\r\n\r\n                          <Colxx xxs=\"12\" sm=\"3\">\r\n                            <FormGroup className=\"form-group has-float-label\">\r\n                              <Label>Offer Price</Label>\r\n                              <Field\r\n                                className=\"form-control\"\r\n                                name=\"offer_price\"\r\n                                type=\"text\"\r\n                              />\r\n                              {errors.offer_price && touched.offer_price ? (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.offer_price}\r\n                                </div>\r\n                              ) : null}\r\n                            </FormGroup>\r\n                          </Colxx>\r\n\r\n                          <Colxx xxs=\"12\" sm=\"3\">\r\n                            <FormGroup className=\"form-group has-float-label\">\r\n                              <Label>Offer Amount</Label>\r\n                              <Field\r\n                                className=\"form-control\"\r\n                                name=\"offer_amount\"\r\n                                type=\"text\"\r\n                              />\r\n                              {errors.offer_amount && touched.offer_amount ? (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.offer_amount}\r\n                                </div>\r\n                              ) : null}\r\n                            </FormGroup>\r\n                          </Colxx>\r\n                        </Row>) : null\r\n                      }\r\n\r\n                      {this.state.offer_type == 3 || this.state.offer_type == \"\" ?\r\n                        (<Row>\r\n                          <Colxx xxs=\"12\" sm=\"6\">\r\n                            <FormGroup className=\"form-group has-float-label\">\r\n                              <Label>Offer Price</Label>\r\n                              <Field\r\n                                className=\"form-control\"\r\n                                name=\"offer_price\"\r\n                                type=\"text\"\r\n                              />\r\n                              {errors.offer_price && touched.offer_price ? (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.offer_price}\r\n                                </div>\r\n                              ) : null}\r\n                            </FormGroup>\r\n                          </Colxx>\r\n\r\n                          <Colxx xxs=\"12\" sm=\"6\">\r\n                            <FormGroup className=\"form-group has-float-label\">\r\n                              <Label>Offer Quantity</Label>\r\n                              <Field\r\n                                className=\"form-control\"\r\n                                name=\"offer_quantity\"\r\n                                type=\"text\"\r\n                              />\r\n                              {errors.offer_quantity && touched.offer_quantity ? (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.offer_quantity}\r\n                                </div>\r\n                              ) : null}\r\n                            </FormGroup>\r\n                          </Colxx>\r\n                        </Row>) : null\r\n                      }\r\n\r\n                      <Row>\r\n                        <Colxx xxs=\"12\" sm=\"6\">\r\n                          <FormGroup className=\"form-group has-float-label\">\r\n                            <Label className=\"d-block\">\r\n                              Start Date\r\n                              </Label>\r\n                            <FormikDatePicker\r\n                              name=\"startDate\"\r\n                              value={moment(values.startDate)}\r\n                              onChange={setFieldValue}\r\n                              onBlur={setFieldTouched}\r\n                            />\r\n                            {errors.startDate && touched.startDate ? (\r\n                              <div className=\"invalid-feedback d-block\">\r\n                                {errors.startDate}\r\n                              </div>\r\n                            ) : null}\r\n                          </FormGroup>\r\n                        </Colxx>\r\n\r\n                        <Colxx xxs=\"12\" sm=\"6\">\r\n                          <FormGroup className=\"form-group has-float-label\">\r\n                            <Label className=\"d-block\">\r\n                              End Date\r\n                              </Label>\r\n                            <FormikDatePicker\r\n                              name=\"endDate\"\r\n                              value={moment(values.endDate)}\r\n                              onChange={setFieldValue}\r\n                              onBlur={setFieldTouched}\r\n                            />\r\n                            {errors.endDate && touched.endDate ? (\r\n                              <div className=\"invalid-feedback d-block\">\r\n                                {errors.endDate}\r\n                              </div>\r\n                            ) : null}\r\n                          </FormGroup>\r\n                        </Colxx>\r\n                      </Row>\r\n\r\n                      <Row>\r\n                        <Colxx xxs=\"12\" sm=\"6\">\r\n                          <FormGroup className=\"form-group has-float-label\">\r\n                            <Label>Image</Label>\r\n                            <Field\r\n                              className=\"form-control\"\r\n                              name=\"image\"\r\n                              type=\"file\"\r\n                              value={this.state.image}\r\n                              onChange={(event) => {\r\n                                setFieldValue(\r\n                                  \"image\",\r\n                                  event.currentTarget.files[0]\r\n                                );\r\n                              }}\r\n                            />\r\n                            {errors.image && touched.image ? (\r\n                              <div className=\"invalid-feedback d-block\">\r\n                                {errors.image}\r\n                              </div>\r\n                            ) : null}\r\n                            <img\r\n                              alt={this.state.title}\r\n                              src={this.state.image_preview}\r\n                              className=\"img-thumbnail border-0 list-thumbnail align-self-center image-preview\"\r\n                            />\r\n                          </FormGroup>\r\n                        </Colxx>\r\n                      </Row>\r\n\r\n                      <Button color=\"primary\" type=\"submit\">\r\n                        <IntlMessages id=\"button.save\" />\r\n                      </Button>\r\n                    </Form>\r\n                  )}\r\n                </Formik>\r\n              </CardBody>\r\n            </Card>\r\n          </Colxx>\r\n        </Row>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nexport default injectIntl(EditOffer);\r\n","import React from 'react';\r\nimport { Col } from 'reactstrap';\r\nconst Colxx = (props) => (\r\n    <Col {...props} widths={['xxs', 'xs', 'sm', 'md', 'lg', 'xl', 'xxl']} />\r\n);\r\nconst Separator = (props) => (\r\n    <div className={`separator ${props.className}`}></div>\r\n);\r\nexport { Colxx,Separator }","import React, { Fragment } from \"react\";\r\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\n\r\nconst getMenuTitle = sub => {\r\n  return <IntlMessages id={`menu.${sub}`} />;\r\n};\r\n\r\nconst getUrl = (path, sub, index) => {\r\n  if (index === 0) {\r\n    return \"\";\r\n  } else {\r\n    return path.split(sub)[0] + sub;\r\n  }\r\n};\r\n\r\nconst BreadcrumbContainer = ({ heading, match }) => {\r\n  return (\r\n    <Fragment>\r\n      {heading && <h1><IntlMessages id={heading} /></h1>}\r\n      <BreadcrumbItems match={match} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport const BreadcrumbItems = ({ match }) => {\r\n  const path = match.path.substr(1);\r\n  let paths = path.split(\"/\");\r\n  if (paths[paths.length - 1].indexOf(\":\") > -1) {\r\n    paths = paths.filter(x => x.indexOf(\":\") === -1);\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\r\n        {paths.map((sub, index) => {\r\n          return (\r\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\r\n              {paths.length !== index + 1 ? (\r\n                <NavLink to={\"/\" + getUrl(path, sub, index)}>\r\n                  {getMenuTitle(sub)}\r\n                </NavLink>\r\n              ) : (\r\n                  getMenuTitle(sub)\r\n                )}\r\n            </BreadcrumbItem>\r\n          );\r\n        })}\r\n      </Breadcrumb>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default BreadcrumbContainer;\r\n","import React from \"react\";\r\nimport Select from \"react-select\";\r\nimport { CustomInput } from \"reactstrap\";\r\n\r\nimport TagsInput from \"react-tagsinput\";\r\nimport \"react-tagsinput/react-tagsinput.css\";\r\nimport Switch from \"rc-switch\";\r\nimport \"rc-switch/assets/index.css\";\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nexport class FormikReactSelect extends React.Component {\r\n  handleChange = value => {\r\n    this.props.onChange(this.props.name, value);\r\n  };\r\n  handleBlur = () => {\r\n    this.props.onBlur(this.props.name, true);\r\n  };\r\n  render() {\r\n    return (\r\n      <Select\r\n        className={`react-select ${this.props.className}`}\r\n        classNamePrefix=\"react-select\"\r\n        options={this.props.options}\r\n        isMulti={this.props.isMulti}\r\n        onChange={this.handleChange}\r\n        onBlur={this.handleBlur}\r\n        value={this.props.value}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport class FormikCheckboxGroup extends React.Component {\r\n  handleChange = val => {\r\n    let valueArray = [...this.props.value] || [];\r\n    if (!valueArray.includes(val)) {\r\n      valueArray.push(val);\r\n    } else {\r\n      valueArray.splice(valueArray.indexOf(val), 1);\r\n    }\r\n    this.props.onChange(this.props.name, valueArray);\r\n  };\r\n\r\n  handleBlur = () => {\r\n    this.props.onBlur(this.props.name, true);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      name,\r\n      value,\r\n      options,\r\n      inline = false\r\n    } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        {options.map((child, index) => {\r\n          return (\r\n            <div\r\n              key={`${name}_${child.value}_${index}`}\r\n              className={`position-relative form-check ${\r\n                inline ? \"form-check-inline\" : \"\"\r\n                }`}\r\n            >\r\n              <input\r\n                id={child.value}\r\n                name={name}\r\n                type=\"checkbox\"\r\n                className=\"form-check-input\"\r\n                onChange={() => this.handleChange(child.value)}\r\n                onBlur={this.handleBlur}\r\n                defaultChecked={value.includes(child.value)}\r\n                disabled={child.disabled}\r\n              />\r\n              <label className=\"form-check-label\">\r\n                {child.label}\r\n              </label>\r\n            </div>\r\n          );\r\n        })}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport class FormikCustomCheckboxGroup extends React.Component {\r\n  handleChange = val => {\r\n    let valueArray = [...this.props.value] || [];\r\n    if (!valueArray.includes(val)) {\r\n      valueArray.push(val);\r\n    } else {\r\n      valueArray.splice(valueArray.indexOf(val), 1);\r\n    }\r\n    this.props.onChange(this.props.name, valueArray);\r\n  };\r\n\r\n  handleBlur = () => {\r\n    this.props.onBlur(this.props.name, true);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      name,\r\n      value,\r\n      options,\r\n      inline = false\r\n    } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        {options.map((child, index) => {\r\n          return (\r\n            <CustomInput\r\n              key={`${name}_${child.value}_${index}`}\r\n              type=\"checkbox\"\r\n              id={`${name}_${child.value}_${index}`}\r\n              name={child.name}\r\n              label={child.label}\r\n              onChange={() => this.handleChange(child.value)}\r\n              onBlur={this.handleBlur}\r\n              checked={value.includes(child.value)}\r\n              disabled={child.disabled}\r\n              inline={inline}\r\n            />\r\n          );\r\n        })}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport const FormikCheckbox = props => {\r\n  const handleChange = event => {\r\n    props.onChange(props.name, !props.value);\r\n  };\r\n  const handleBlur = () => {\r\n    props.onBlur(props.name, true);\r\n  };\r\n  return (\r\n    <div\r\n      className={`position-relative form-check form-check-inline`}\r\n    >\r\n      <input\r\n        name={props.name}\r\n        type=\"checkbox\"\r\n        className=\"form-check-input\"\r\n        onChange={handleChange}\r\n        onBlur={handleBlur}\r\n        checked={props.value}\r\n        disabled={props.disabled}\r\n      />\r\n      <label className=\"form-check-label\">\r\n        {props.label}\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const FormikCustomCheckbox = props => {\r\n  const handleChange = event => {\r\n    props.onChange(props.name, !props.value);\r\n  };\r\n  const handleBlur = () => {\r\n    props.onBlur(props.name, true);\r\n  };\r\n  return (\r\n    <CustomInput\r\n      type=\"checkbox\"\r\n      id={props.name}\r\n      name={props.name}\r\n      label={props.label}\r\n      onChange={handleChange}\r\n      onBlur={handleBlur}\r\n      checked={props.value}\r\n      disabled={props.disabled}\r\n      inline\r\n    />\r\n  );\r\n};\r\n\r\nexport class FormikRadioButtonGroup extends React.Component {\r\n  handleChange = val => {\r\n    this.props.onChange(this.props.name, val);\r\n  };\r\n\r\n  handleBlur = () => {\r\n    this.props.onBlur(this.props.name, true);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      name,\r\n      value,\r\n      options,\r\n      inline = false\r\n    } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        {options.map((child, index) => {\r\n          return (\r\n            <div\r\n              key={`${name}_${child.value}_${index}`}\r\n              className={`position-relative form-check ${\r\n                inline ? \"form-check-inline\" : \"\"\r\n                }`}\r\n            >\r\n              <input\r\n                id={child.value}\r\n                name={name}\r\n                type=\"radio\"\r\n                className=\"form-check-input\"\r\n                onChange={() => this.handleChange(child.value)}\r\n                onBlur={this.handleBlur}\r\n                defaultChecked={value === child.value}\r\n                disabled={child.disabled}\r\n              />\r\n              <label className=\"form-check-label\">\r\n                {child.label}\r\n              </label>\r\n            </div>\r\n          );\r\n        })}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport class FormikCustomRadioGroup extends React.Component {\r\n  handleChange = val => {\r\n    this.props.onChange(this.props.name, val);\r\n  };\r\n\r\n  handleBlur = () => {\r\n    this.props.onBlur(this.props.name, true);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      name,\r\n      value,\r\n      options,\r\n      inline = false\r\n    } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        {options.map((child, index) => {\r\n          return (\r\n            <CustomInput\r\n              key={`${name}_${child.value}_${index}`}\r\n              type=\"radio\"\r\n              id={`${name}_${child.value}_${index}`}\r\n              name={child.name}\r\n              label={child.label}\r\n              onChange={() => this.handleChange(child.value)}\r\n              onBlur={this.handleBlur}\r\n              checked={value === child.value}\r\n              disabled={child.disabled}\r\n              inline={inline}\r\n            />\r\n          );\r\n        })}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport class FormikTagsInput extends React.Component {\r\n\r\n  handleChange = val => {\r\n    this.props.onBlur(this.props.name, true);\r\n    this.props.onChange(this.props.name, val);\r\n  };\r\n\r\n  render() {\r\n    const { name, value } = this.props;\r\n    return (\r\n      <TagsInput\r\n        id={name}\r\n        name={name}\r\n        value={value}\r\n        onChange={this.handleChange}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport class FormikSwitch extends React.Component {\r\n\r\n  handleChange = val => {\r\n    this.props.onBlur(this.props.name, true);\r\n    this.props.onChange(this.props.name, val);\r\n  };\r\n\r\n  render() {\r\n    const { name, value, className } = this.props;\r\n    return (\r\n      <Switch\r\n        id={name}\r\n        name={name}\r\n        className={className}\r\n        checked={value}\r\n        onChange={this.handleChange}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport class FormikDatePicker extends React.Component {\r\n\r\n\r\n  handleChange = val => {\r\n    this.props.onChange(this.props.name, val);\r\n  };\r\n  handleBlur = val => {\r\n    this.props.onBlur(this.props.name, true);\r\n  };\r\n\r\n  render() {\r\n    const { name, value, className } = this.props;\r\n    return (\r\n      <DatePicker\r\n        id={name}\r\n        name={name}\r\n        className={className}\r\n        selected={value}\r\n        onChange={this.handleChange}\r\n        onBlur={this.handleBlur}\r\n      />\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}