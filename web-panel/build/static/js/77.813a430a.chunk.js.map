{"version":3,"sources":["views/app/customize-types/add.js","components/common/CustomBootstrap.js","containers/navs/Breadcrumb.js","../node_modules/reactstrap/es/Breadcrumb.js","../node_modules/reactstrap/es/BreadcrumbItem.js","../node_modules/reactstrap/es/CardBody.js"],"names":["FormSchema","Yup","shape","name","required","min","max","AddCustomizationType","props","handleSubmit","inputValues","a","formData","FormData","append","path","ApiRoutes","CREATE_CUSTOMIZATION_TYPE","Http","res","status","NotificationManager","success","message","history","push","error","state","bind","this","intl","messages","xxs","heading","match","className","sm","initialValues","validationSchema","onSubmit","setFieldValue","setFieldTouched","handleChange","values","errors","touched","isSubmitting","type","color","id","Component","injectIntl","Colxx","widths","Separator","getMenuTitle","sub","getUrl","index","split","BreadcrumbItems","substr","paths","length","indexOf","filter","x","map","key","active","to","BreadcrumbContainer","propTypes","tag","listTag","string","listClassName","cssModule","object","children","node","Breadcrumb","Tag","ListTag","label","attributes","classes","listClasses","createElement","defaultProps","bool","BreadcrumbItem","undefined","innerRef","oneOfType","func","CardBody","ref"],"mappings":"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","file":"static/js/77.813a430a.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { Row, Card, CardBody, FormGroup, Label, Button } from \"reactstrap\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Colxx, Separator } from \"../../../components/common/CustomBootstrap\";\r\nimport { NotificationManager } from \"../../../components/common/react-notifications\";\r\nimport Breadcrumb from \"../../../containers/navs/Breadcrumb\";\r\nimport IntlMessages from \"../../../helpers/IntlMessages\";\r\nimport Http from \"../../../helpers/Http\";\r\nimport ApiRoutes from \"../../../helpers/ApiRoutes\";\r\n\r\nconst FormSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .required(\"Please enter type name\")\r\n    .min(2, \"Too Short! Atleast 2 letters.\")\r\n    .max(20, \"Too Long! Atmost 20 letters.\"),\r\n});\r\n\r\nclass AddCustomizationType extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() { }\r\n\r\n  handleSubmit = async (inputValues) => {\r\n    let formData = new FormData();\r\n    formData.append(\"name\", inputValues.name);\r\n\r\n    let path = ApiRoutes.CREATE_CUSTOMIZATION_TYPE;\r\n    const res = await Http(\"POST\", path, formData);\r\n\r\n    if (res.status == 200) {\r\n      NotificationManager.success(res.message, \"Success!\", 3000);\r\n      this.props.history.push(\"/app/customization-types\");\r\n    } else {\r\n      NotificationManager.error(res.message, \"Error!\", 3000);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { messages } = this.props.intl;\r\n    return (\r\n      <Fragment>\r\n        <Row>\r\n          <Colxx xxs=\"12\">\r\n            <Breadcrumb\r\n              heading=\"heading.add-customization-type\"\r\n              match={this.props.match}\r\n            />\r\n            <Separator className=\"mb-5\" />\r\n          </Colxx>\r\n        </Row>\r\n        <Row>\r\n          <Colxx xxs=\"12\" sm=\"12\">\r\n            <Card>\r\n              <CardBody>\r\n                <Formik\r\n                  initialValues={{\r\n                    name: this.state.name,\r\n                  }}\r\n                  validationSchema={FormSchema}\r\n                  onSubmit={this.handleSubmit}\r\n                >\r\n                  {({\r\n                    handleSubmit,\r\n                    setFieldValue,\r\n                    setFieldTouched,\r\n                    handleChange,\r\n                    values,\r\n                    errors,\r\n                    touched,\r\n                    isSubmitting,\r\n                  }) => (\r\n                      <Form className=\"av-tooltip tooltip-label-bottom\">\r\n                        <Row>\r\n                          <Colxx xxs=\"12\" sm=\"6\">\r\n                            <FormGroup className=\"form-group has-float-label\">\r\n                              <Label>Type Name</Label>\r\n                              <Field\r\n                                className=\"form-control\"\r\n                                name=\"name\"\r\n                                type=\"text\"\r\n                              />\r\n                              {errors.name && touched.name ? (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.name}\r\n                                </div>\r\n                              ) : null}\r\n                            </FormGroup>\r\n                          </Colxx>\r\n                        </Row>\r\n                        <Button color=\"primary\" type=\"submit\">\r\n                          <IntlMessages id=\"button.save\" />\r\n                        </Button>\r\n                      </Form>\r\n                    )}\r\n                </Formik>\r\n              </CardBody>\r\n            </Card>\r\n          </Colxx>\r\n        </Row>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nexport default injectIntl(AddCustomizationType);\r\n","import React from 'react';\r\nimport { Col } from 'reactstrap';\r\nconst Colxx = (props) => (\r\n    <Col {...props} widths={['xxs', 'xs', 'sm', 'md', 'lg', 'xl', 'xxl']} />\r\n);\r\nconst Separator = (props) => (\r\n    <div className={`separator ${props.className}`}></div>\r\n);\r\nexport { Colxx,Separator }","import React, { Fragment } from \"react\";\r\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\n\r\nconst getMenuTitle = sub => {\r\n  return <IntlMessages id={`menu.${sub}`} />;\r\n};\r\n\r\nconst getUrl = (path, sub, index) => {\r\n  if (index === 0) {\r\n    return \"\";\r\n  } else {\r\n    return path.split(sub)[0] + sub;\r\n  }\r\n};\r\n\r\nconst BreadcrumbContainer = ({ heading, match }) => {\r\n  return (\r\n    <Fragment>\r\n      {heading && <h1><IntlMessages id={heading} /></h1>}\r\n      <BreadcrumbItems match={match} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport const BreadcrumbItems = ({ match }) => {\r\n  const path = match.path.substr(1);\r\n  let paths = path.split(\"/\");\r\n  if (paths[paths.length - 1].indexOf(\":\") > -1) {\r\n    paths = paths.filter(x => x.indexOf(\":\") === -1);\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\r\n        {paths.map((sub, index) => {\r\n          return (\r\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\r\n              {paths.length !== index + 1 ? (\r\n                <NavLink to={\"/\" + getUrl(path, sub, index)}>\r\n                  {getMenuTitle(sub)}\r\n                </NavLink>\r\n              ) : (\r\n                  getMenuTitle(sub)\r\n                )}\r\n            </BreadcrumbItem>\r\n          );\r\n        })}\r\n      </Breadcrumb>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default BreadcrumbContainer;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  listTag: tagPropType,\n  className: PropTypes.string,\n  listClassName: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  'aria-label': PropTypes.string\n};\nvar defaultProps = {\n  tag: 'nav',\n  listTag: 'ol',\n  'aria-label': 'breadcrumb'\n};\n\nvar Breadcrumb = function Breadcrumb(props) {\n  var className = props.className,\n      listClassName = props.listClassName,\n      cssModule = props.cssModule,\n      children = props.children,\n      Tag = props.tag,\n      ListTag = props.listTag,\n      label = props['aria-label'],\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"listClassName\", \"cssModule\", \"children\", \"tag\", \"listTag\", \"aria-label\"]);\n\n  var classes = mapToCssModules(classNames(className), cssModule);\n  var listClasses = mapToCssModules(classNames('breadcrumb', listClassName), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-label\": label\n  }), React.createElement(ListTag, {\n    className: listClasses\n  }, children));\n};\n\nBreadcrumb.propTypes = propTypes;\nBreadcrumb.defaultProps = defaultProps;\nexport default Breadcrumb;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  active: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'li'\n};\n\nvar BreadcrumbItem = function BreadcrumbItem(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      active = props.active,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"active\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, active ? 'active' : false, 'breadcrumb-item'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-current\": active ? 'page' : undefined\n  }));\n};\n\nBreadcrumbItem.propTypes = propTypes;\nBreadcrumbItem.defaultProps = defaultProps;\nexport default BreadcrumbItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;"],"sourceRoot":""}