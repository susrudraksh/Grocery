{"version":3,"sources":["views/app/contents/privacy-policy.js","components/common/CustomBootstrap.js","containers/navs/Breadcrumb.js","../node_modules/reactstrap/es/Breadcrumb.js","../node_modules/reactstrap/es/BreadcrumbItem.js","../node_modules/reactstrap/es/CardBody.js"],"names":["quillModules","toolbar","list","indent","quillFormats","FormSchema","Yup","shape","content_text","required","AboutUs","props","dataRender","a","path","ApiRoutes","GET_CONTENT","state","content_key","Http","res","status","setState","data","content_data","NotificationManager","error","message","handleChangeContent","handleSubmit","inputValues","formData","FormData","append","UPDATE_CONTENT","success","bind","this","xxs","heading","match","className","sm","enableReinitialize","initialValues","validationSchema","onSubmit","setFieldValue","setFieldTouched","handleChange","values","errors","touched","isSubmitting","name","field","theme","onChange","modules","formats","placeholder","value","color","type","id","Component","injectIntl","Colxx","widths","Separator","getMenuTitle","sub","getUrl","index","split","BreadcrumbItems","substr","paths","length","indexOf","filter","x","map","key","active","to","BreadcrumbContainer","propTypes","tag","listTag","string","listClassName","cssModule","object","children","node","Breadcrumb","Tag","ListTag","label","attributes","classes","listClasses","createElement","defaultProps","bool","BreadcrumbItem","undefined","innerRef","oneOfType","func","CardBody","ref"],"mappings":"wXAiBMA,G,cAAe,CACnBC,QAAS,CACP,CAAC,OAAQ,SAAU,YAAa,SAAU,cAC1C,CACE,CAAEC,KAAM,WACR,CAAEA,KAAM,UACR,CAAEC,OAAQ,MACV,CAAEA,OAAQ,OAEZ,CAAC,OAAQ,SACT,CAAC,YAICC,EAAe,CACnB,SACA,OACA,SACA,YACA,SACA,aACA,OACA,SACA,SACA,OACA,SAGIC,EAAaC,WAAaC,MAAM,CACpCC,aAAcF,WAAaG,SAAS,+BAGhCC,E,YACJ,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAYRC,WAbmB,qBAaN,8BAAAC,EAAA,4DACPC,EAAOC,IAAUC,YAAc,IAAM,EAAKC,MAAMC,YADzC,SAEOC,YAAK,MAAOL,GAFnB,OAIO,MAFZM,EAFK,QAIHC,OACN,EAAKC,SAAS,CACZd,aAAcY,EAAIG,KAAKC,eAGzBC,IAAoBC,MAAMN,EAAIO,QAAS,SAAU,KATxC,yCAbM,EA0BnBC,oBAAsB,SAACpB,GACrB,EAAKc,SAAS,CAAEd,kBA3BC,EA8BnBqB,aA9BmB,sCA8BJ,WAAOC,GAAP,mBAAAjB,EAAA,4DACTkB,EAAW,IAAIC,UACVC,OAAO,gBAAiBH,EAAYtB,cAEzCM,EAAOC,IAAUmB,eAAiB,IAAM,EAAKjB,MAAMC,YAJ1C,SAKKC,YAAK,MAAOL,EAAMiB,GALvB,OAOK,MAFZX,EALO,QAOLC,OACNI,IAAoBU,QAAQf,EAAIO,QAAS,WAAY,KAErDF,IAAoBC,MAAMN,EAAIO,QAAS,SAAU,KAVtC,yCA9BI,sDAEjB,EAAKV,MAAQ,CACXC,YAAa,iBACbV,aAAc,IAEhB,EAAKqB,aAAe,EAAKA,aAAaO,KAAlB,gBANH,E,iFAUjBC,KAAKzB,e,+BAkCG,IAAD,OACP,OACE,kBAAC,WAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO0B,IAAI,MACT,kBAAC,IAAD,CACEC,QAAQ,yBACRC,MAAOH,KAAK1B,MAAM6B,QAEpB,kBAAC,IAAD,CAAWC,UAAU,WAGzB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOH,IAAI,KAAKI,GAAG,MACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,oBAAkB,EAClBC,cAAe,CACbpC,aAAc6B,KAAKpB,MAAMT,cAE3BqC,iBAAkBxC,EAClByC,SAAUT,KAAKR,cAEd,cACCA,aADD,EAECkB,cAFD,EAGCC,gBAHD,EAICC,aAJD,EAKCC,OALD,IAMCC,EAND,EAMCA,OACAC,EAPD,EAOCA,QAPD,EAQCC,aARD,OAUG,kBAAC,IAAD,CAAMZ,UAAU,mCACd,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOH,IAAI,KAAKI,GAAG,MACjB,kBAAC,IAAD,CAAWD,UAAU,8BACnB,kBAAC,IAAD,gBACA,kBAAC,IAAD,CAAOA,UAAU,eAAea,KAAK,gBAClC,cAAGC,MAAH,OACC,kBAAC,IAAD,CACEC,MAAM,OACNC,SAAU,EAAK7B,oBACf8B,QAAS1D,EACT2D,QAASvD,EACTwD,YAAY,oBACZC,MAAO,EAAK5C,MAAMT,iBAIvB2C,EAAO3C,cAAgB4C,EAAQ5C,aAC9B,yBAAKiC,UAAU,4BACZU,EAAO3C,cAER,QAKV,kBAAC,IAAD,CAAQsD,MAAM,UAAUC,KAAK,UAC3B,kBAAC,IAAD,CAAcC,GAAG,6B,GA1GrBC,aAuHPC,sBAAWxD,I,iCCxK1B,6FAEMyD,EAAQ,SAACxD,GAAD,OACV,kBAAC,IAAD,iBAASA,EAAT,CAAgByD,OAAQ,CAAC,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,WAE5DC,EAAY,SAAC1D,GAAD,OACd,yBAAK8B,UAAS,oBAAe9B,EAAM8B,e,iCCNvC,wDAKM6B,EAAe,SAAAC,GACnB,OAAO,kBAAC,IAAD,CAAcP,GAAE,eAAUO,MAG7BC,EAAS,SAAC1D,EAAMyD,EAAKE,GACzB,OAAc,IAAVA,EACK,GAEA3D,EAAK4D,MAAMH,GAAK,GAAKA,GAanBI,EAAkB,SAAC,GAAe,IACvC7D,EADsC,EAAZ0B,MACb1B,KAAK8D,OAAO,GAC3BC,EAAQ/D,EAAK4D,MAAM,KAIvB,OAHIG,EAAMA,EAAMC,OAAS,GAAGC,QAAQ,MAAQ,IAC1CF,EAAQA,EAAMG,OAAO,SAAAC,GAAC,OAAwB,IAApBA,EAAEF,QAAQ,QAGpC,kBAAC,WAAD,KACE,kBAAC,IAAD,CAAYtC,UAAU,iEACnBoC,EAAMK,IAAI,SAACX,EAAKE,GACf,OACE,kBAAC,IAAD,CAAgBU,IAAKV,EAAOW,OAAQP,EAAMC,SAAWL,EAAQ,GAC1DI,EAAMC,SAAWL,EAAQ,EACxB,kBAAC,IAAD,CAASY,GAAI,IAAMb,EAAO1D,EAAMyD,EAAKE,IAClCH,EAAaC,IAGdD,EAAaC,SAUhBe,IApCa,SAAC,GAAwB,IAAtB/C,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MACtC,OACE,kBAAC,WAAD,KACGD,GAAW,4BAAI,kBAAC,IAAD,CAAcyB,GAAIzB,KAClC,kBAACoC,EAAD,CAAiBnC,MAAOA,O,iCCrB9B,gFAMI+C,EAAY,CACdC,IAAK,IACLC,QAAS,IACThD,UAAW,IAAUiD,OACrBC,cAAe,IAAUD,OACzBE,UAAW,IAAUC,OACrBC,SAAU,IAAUC,KACpB,aAAc,IAAUL,QAQtBM,EAAa,SAAoBrF,GACnC,IAAI8B,EAAY9B,EAAM8B,UAClBkD,EAAgBhF,EAAMgF,cACtBC,EAAYjF,EAAMiF,UAClBE,EAAWnF,EAAMmF,SACjBG,EAAMtF,EAAM6E,IACZU,EAAUvF,EAAM8E,QAChBU,EAAQxF,EAAM,cACdyF,EAAa,YAA8BzF,EAAO,CAAC,YAAa,gBAAiB,YAAa,WAAY,MAAO,UAAW,eAE5H0F,EAAU,YAAgB,IAAW5D,GAAYmD,GACjDU,EAAc,YAAgB,IAAW,aAAcX,GAAgBC,GAC3E,OAAO,IAAMW,cAAcN,EAAK,YAAS,GAAIG,EAAY,CACvD3D,UAAW4D,EACX,aAAcF,IACZ,IAAMI,cAAcL,EAAS,CAC/BzD,UAAW6D,GACVR,KAGLE,EAAWT,UAAYA,EACvBS,EAAWQ,aA3BQ,CACjBhB,IAAK,MACLC,QAAS,KACT,aAAc,cAyBD,O,iCC3Cf,gFAMIF,EAAY,CACdC,IAAK,IACLJ,OAAQ,IAAUqB,KAClBhE,UAAW,IAAUiD,OACrBE,UAAW,IAAUC,QAMnBa,EAAiB,SAAwB/F,GAC3C,IAAI8B,EAAY9B,EAAM8B,UAClBmD,EAAYjF,EAAMiF,UAClBR,EAASzE,EAAMyE,OACfa,EAAMtF,EAAM6E,IACZY,EAAa,YAA8BzF,EAAO,CAAC,YAAa,YAAa,SAAU,QAEvF0F,EAAU,YAAgB,IAAW5D,IAAW2C,GAAS,SAAkB,mBAAoBQ,GACnG,OAAO,IAAMW,cAAcN,EAAK,YAAS,GAAIG,EAAY,CACvD3D,UAAW4D,EACX,eAAgBjB,EAAS,YAASuB,MAItCD,EAAenB,UAAYA,EAC3BmB,EAAeF,aAnBI,CACjBhB,IAAK,MAmBQ,O,iCChCf,gFAMID,EAAY,CACdC,IAAK,IACL/C,UAAW,IAAUiD,OACrBE,UAAW,IAAUC,OACrBe,SAAU,IAAUC,UAAU,CAAC,IAAUhB,OAAQ,IAAUH,OAAQ,IAAUoB,QAM3EC,EAAW,SAAkBpG,GAC/B,IAAI8B,EAAY9B,EAAM8B,UAClBmD,EAAYjF,EAAMiF,UAClBgB,EAAWjG,EAAMiG,SACjBX,EAAMtF,EAAM6E,IACZY,EAAa,YAA8BzF,EAAO,CAAC,YAAa,YAAa,WAAY,QAEzF0F,EAAU,YAAgB,IAAW5D,EAAW,aAAcmD,GAClE,OAAO,IAAMW,cAAcN,EAAK,YAAS,GAAIG,EAAY,CACvD3D,UAAW4D,EACXW,IAAKJ,MAITG,EAASxB,UAAYA,EACrBwB,EAASP,aAnBU,CACjBhB,IAAK,OAmBQ","file":"static/js/74.f7b9197f.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport { Row, Card, CardBody, FormGroup, Label, Button } from \"reactstrap\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Colxx, Separator } from \"../../../components/common/CustomBootstrap\";\r\nimport { NotificationManager } from \"../../../components/common/react-notifications\";\r\nimport Breadcrumb from \"../../../containers/navs/Breadcrumb\";\r\n\r\nimport IntlMessages from \"../../../helpers/IntlMessages\";\r\nimport Http from \"../../../helpers/Http\";\r\nimport ApiRoutes from \"../../../helpers/ApiRoutes\";\r\n\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport \"react-quill/dist/quill.bubble.css\";\r\n\r\nconst quillModules = {\r\n  toolbar: [\r\n    [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\r\n    [\r\n      { list: \"ordered\" },\r\n      { list: \"bullet\" },\r\n      { indent: \"-1\" },\r\n      { indent: \"+1\" },\r\n    ],\r\n    [\"link\", \"image\"],\r\n    [\"clean\"],\r\n  ],\r\n};\r\n\r\nconst quillFormats = [\r\n  \"header\",\r\n  \"bold\",\r\n  \"italic\",\r\n  \"underline\",\r\n  \"strike\",\r\n  \"blockquote\",\r\n  \"list\",\r\n  \"bullet\",\r\n  \"indent\",\r\n  \"link\",\r\n  \"image\",\r\n];\r\n\r\nconst FormSchema = Yup.object().shape({\r\n  content_text: Yup.string().required(\"Please enter some content\"),\r\n});\r\n\r\nclass AboutUs extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      content_key: \"privacy_policy\",\r\n      content_text: \"\",\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.dataRender();\r\n  }\r\n\r\n  dataRender = async () => {\r\n    let path = ApiRoutes.GET_CONTENT + \"/\" + this.state.content_key;\r\n    const res = await Http(\"GET\", path);\r\n\r\n    if (res.status == 200) {\r\n      this.setState({\r\n        content_text: res.data.content_data,\r\n      });\r\n    } else {\r\n      NotificationManager.error(res.message, \"Error!\", 3000);\r\n    }\r\n  };\r\n\r\n  handleChangeContent = (content_text) => {\r\n    this.setState({ content_text });\r\n  };\r\n\r\n  handleSubmit = async (inputValues) => {\r\n    let formData = new FormData();\r\n    formData.append(\"content_value\", inputValues.content_text);\r\n\r\n    let path = ApiRoutes.UPDATE_CONTENT + \"/\" + this.state.content_key;\r\n    const res = await Http(\"PUT\", path, formData);\r\n\r\n    if (res.status == 200) {\r\n      NotificationManager.success(res.message, \"Success!\", 3000);\r\n    } else {\r\n      NotificationManager.error(res.message, \"Error!\", 3000);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Row>\r\n          <Colxx xxs=\"12\">\r\n            <Breadcrumb\r\n              heading=\"heading.privacy-policy\"\r\n              match={this.props.match}\r\n            />\r\n            <Separator className=\"mb-5\" />\r\n          </Colxx>\r\n        </Row>\r\n        <Row>\r\n          <Colxx xxs=\"12\" sm=\"12\">\r\n            <Card>\r\n              <CardBody>\r\n                <Formik\r\n                  enableReinitialize\r\n                  initialValues={{\r\n                    content_text: this.state.content_text,\r\n                  }}\r\n                  validationSchema={FormSchema}\r\n                  onSubmit={this.handleSubmit}\r\n                >\r\n                  {({\r\n                    handleSubmit,\r\n                    setFieldValue,\r\n                    setFieldTouched,\r\n                    handleChange,\r\n                    values,\r\n                    errors,\r\n                    touched,\r\n                    isSubmitting,\r\n                  }) => (\r\n                      <Form className=\"av-tooltip tooltip-label-bottom\">\r\n                        <Row>\r\n                          <Colxx xxs=\"12\" sm=\"12\">\r\n                            <FormGroup className=\"form-group has-float-label\">\r\n                              <Label>Content</Label>\r\n                              <Field className=\"form-control\" name=\"content_text\">\r\n                                {({ field }) => (\r\n                                  <ReactQuill\r\n                                    theme=\"snow\"\r\n                                    onChange={this.handleChangeContent}\r\n                                    modules={quillModules}\r\n                                    formats={quillFormats}\r\n                                    placeholder=\"Start to enter...\"\r\n                                    value={this.state.content_text}\r\n                                  />\r\n                                )}\r\n                              </Field>\r\n                              {errors.content_text && touched.content_text ? (\r\n                                <div className=\"invalid-feedback d-block\">\r\n                                  {errors.content_text}\r\n                                </div>\r\n                              ) : null}\r\n                            </FormGroup>\r\n                          </Colxx>\r\n                        </Row>\r\n\r\n                        <Button color=\"primary\" type=\"submit\">\r\n                          <IntlMessages id=\"button.save\" />\r\n                        </Button>\r\n                      </Form>\r\n                    )}\r\n                </Formik>\r\n              </CardBody>\r\n            </Card>\r\n          </Colxx>\r\n        </Row>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nexport default injectIntl(AboutUs);\r\n","import React from 'react';\r\nimport { Col } from 'reactstrap';\r\nconst Colxx = (props) => (\r\n    <Col {...props} widths={['xxs', 'xs', 'sm', 'md', 'lg', 'xl', 'xxl']} />\r\n);\r\nconst Separator = (props) => (\r\n    <div className={`separator ${props.className}`}></div>\r\n);\r\nexport { Colxx,Separator }","import React, { Fragment } from \"react\";\r\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\n\r\nconst getMenuTitle = sub => {\r\n  return <IntlMessages id={`menu.${sub}`} />;\r\n};\r\n\r\nconst getUrl = (path, sub, index) => {\r\n  if (index === 0) {\r\n    return \"\";\r\n  } else {\r\n    return path.split(sub)[0] + sub;\r\n  }\r\n};\r\n\r\nconst BreadcrumbContainer = ({ heading, match }) => {\r\n  return (\r\n    <Fragment>\r\n      {heading && <h1><IntlMessages id={heading} /></h1>}\r\n      <BreadcrumbItems match={match} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport const BreadcrumbItems = ({ match }) => {\r\n  const path = match.path.substr(1);\r\n  let paths = path.split(\"/\");\r\n  if (paths[paths.length - 1].indexOf(\":\") > -1) {\r\n    paths = paths.filter(x => x.indexOf(\":\") === -1);\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\r\n        {paths.map((sub, index) => {\r\n          return (\r\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\r\n              {paths.length !== index + 1 ? (\r\n                <NavLink to={\"/\" + getUrl(path, sub, index)}>\r\n                  {getMenuTitle(sub)}\r\n                </NavLink>\r\n              ) : (\r\n                  getMenuTitle(sub)\r\n                )}\r\n            </BreadcrumbItem>\r\n          );\r\n        })}\r\n      </Breadcrumb>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default BreadcrumbContainer;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  listTag: tagPropType,\n  className: PropTypes.string,\n  listClassName: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  'aria-label': PropTypes.string\n};\nvar defaultProps = {\n  tag: 'nav',\n  listTag: 'ol',\n  'aria-label': 'breadcrumb'\n};\n\nvar Breadcrumb = function Breadcrumb(props) {\n  var className = props.className,\n      listClassName = props.listClassName,\n      cssModule = props.cssModule,\n      children = props.children,\n      Tag = props.tag,\n      ListTag = props.listTag,\n      label = props['aria-label'],\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"listClassName\", \"cssModule\", \"children\", \"tag\", \"listTag\", \"aria-label\"]);\n\n  var classes = mapToCssModules(classNames(className), cssModule);\n  var listClasses = mapToCssModules(classNames('breadcrumb', listClassName), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-label\": label\n  }), React.createElement(ListTag, {\n    className: listClasses\n  }, children));\n};\n\nBreadcrumb.propTypes = propTypes;\nBreadcrumb.defaultProps = defaultProps;\nexport default Breadcrumb;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  active: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'li'\n};\n\nvar BreadcrumbItem = function BreadcrumbItem(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      active = props.active,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"active\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, active ? 'active' : false, 'breadcrumb-item'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-current\": active ? 'page' : undefined\n  }));\n};\n\nBreadcrumbItem.propTypes = propTypes;\nBreadcrumbItem.defaultProps = defaultProps;\nexport default BreadcrumbItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;"],"sourceRoot":""}